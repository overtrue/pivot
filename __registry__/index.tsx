/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "index": {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    meta: undefined,
  },
  "status-code": {
    name: "status-code",
    description: "Display HTTP status codes with appropriate styling",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/status-code.tsx",
      type: "registry:ui",
      target: "components/pivot/status-code.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/status-code.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "method-label": {
    name: "method-label",
    description: "Display HTTP methods with color coding",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/method-label.tsx",
      type: "registry:ui",
      target: "components/pivot/method-label.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/method-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "type-indicator": {
    name: "type-indicator",
    description: "Display data types with appropriate styling",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/type-indicator.tsx",
      type: "registry:ui",
      target: "components/pivot/type-indicator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/type-indicator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "required-badge": {
    name: "required-badge",
    description: "Badge to indicate required fields",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/required-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/required-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/required-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "deprecated-badge": {
    name: "deprecated-badge",
    description: "Badge to indicate deprecated fields or operations",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/deprecated-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/deprecated-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/deprecated-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "version-badge": {
    name: "version-badge",
    description: "Display version information",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/version-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/version-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/version-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "webhook-label": {
    name: "webhook-label",
    description: "Label for webhook endpoints",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/webhook-label.tsx",
      type: "registry:ui",
      target: "components/pivot/webhook-label.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/webhook-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "format-badge": {
    name: "format-badge",
    description: "Display format information for data types",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/format-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/format-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/format-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "style-badge": {
    name: "style-badge",
    description: "Display style information for parameters",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/style-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/style-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/style-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "scheme-type": {
    name: "scheme-type",
    description: "Display security scheme types",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/scheme-type.tsx",
      type: "registry:ui",
      target: "components/pivot/scheme-type.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/scheme-type.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "in-label": {
    name: "in-label",
    description: "Label for parameter location",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/in-label.tsx",
      type: "registry:ui",
      target: "components/pivot/in-label.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/in-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-name": {
    name: "parameter-name",
    description: "Display parameter names with deprecation support",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/parameter-name.tsx",
      type: "registry:ui",
      target: "components/pivot/parameter-name.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-name.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-description": {
    name: "parameter-description",
    description: "Display parameter descriptions",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/parameter-description.tsx",
      type: "registry:ui",
      target: "components/pivot/parameter-description.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-description.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "path-segment": {
    name: "path-segment",
    description: "Display API path segments with parameter highlighting",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/path-segment.tsx",
      type: "registry:ui",
      target: "components/pivot/path-segment.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/path-segment.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-path": {
    name: "operation-path",
    description: "Display operation paths with highlighting",
    type: "registry:ui",
    registryDependencies: ["utils","path-segment"],
    files: [{
      path: "registry/pivot/operation-path.tsx",
      type: "registry:ui",
      target: "components/pivot/operation-path.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-path.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "enum-values-display": {
    name: "enum-values-display",
    description: "Display enumeration values",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/enum-values-display.tsx",
      type: "registry:ui",
      target: "components/pivot/enum-values-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/enum-values-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "default-value-display": {
    name: "default-value-display",
    description: "Display default values for parameters",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/default-value-display.tsx",
      type: "registry:ui",
      target: "components/pivot/default-value-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/default-value-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "constraint-display": {
    name: "constraint-display",
    description: "Display schema constraints",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/constraint-display.tsx",
      type: "registry:ui",
      target: "components/pivot/constraint-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/constraint-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "expand-collapse": {
    name: "expand-collapse",
    description: "Expandable/collapsible content component",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/expand-collapse.tsx",
      type: "registry:ui",
      target: "components/pivot/expand-collapse.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/expand-collapse.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "description-display": {
    name: "description-display",
    description: "Display markdown descriptions",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/description-display.tsx",
      type: "registry:ui",
      target: "components/pivot/description-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/description-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "contact-display": {
    name: "contact-display",
    description: "Display contact information",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/contact-display.tsx",
      type: "registry:ui",
      target: "components/pivot/contact-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/contact-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "license-display": {
    name: "license-display",
    description: "Display license information",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/license-display.tsx",
      type: "registry:ui",
      target: "components/pivot/license-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/license-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "terms-of-service": {
    name: "terms-of-service",
    description: "Display terms of service",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/terms-of-service.tsx",
      type: "registry:ui",
      target: "components/pivot/terms-of-service.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/terms-of-service.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "section-title": {
    name: "section-title",
    description: "Section title component",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/section-title.tsx",
      type: "registry:ui",
      target: "components/pivot/section-title.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/section-title.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-display": {
    name: "server-display",
    description: "Display server information",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/server-display.tsx",
      type: "registry:ui",
      target: "components/pivot/server-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/server-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "external-docs-display": {
    name: "external-docs-display",
    description: "Display external documentation links",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/external-docs-display.tsx",
      type: "registry:ui",
      target: "components/pivot/external-docs-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/external-docs-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "info-section": {
    name: "info-section",
    description: "Display API information section",
    type: "registry:component",
    registryDependencies: ["utils","contact-display","description-display","license-display"],
    files: [{
      path: "registry/pivot/info-section.tsx",
      type: "registry:component",
      target: "components/pivot/info-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/info-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "servers-section": {
    name: "servers-section",
    description: "Display servers section",
    type: "registry:component",
    registryDependencies: ["utils","section-title","server-display"],
    files: [{
      path: "registry/pivot/servers-section.tsx",
      type: "registry:component",
      target: "components/pivot/servers-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/servers-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-variable": {
    name: "server-variable",
    description: "Display server variable",
    type: "registry:ui",
    registryDependencies: ["utils","required-marker","type-indicator","expand-collapse"],
    files: [{
      path: "registry/pivot/server-variable.tsx",
      type: "registry:ui",
      target: "components/pivot/server-variable.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/server-variable.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server": {
    name: "server",
    description: "Display server information with variables",
    type: "registry:component",
    registryDependencies: ["utils","description-display","server-display","expand-collapse"],
    files: [{
      path: "registry/pivot/server.tsx",
      type: "registry:component",
      target: "components/pivot/server.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/server.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-scheme-display": {
    name: "security-scheme-display",
    description: "Display security scheme details",
    type: "registry:component",
    registryDependencies: ["utils","description-display","scheme-type"],
    files: [{
      path: "registry/pivot/security-scheme-display.tsx",
      type: "registry:component",
      target: "components/pivot/security-scheme-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-scheme-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-scheme": {
    name: "security-scheme",
    description: "Display security scheme",
    type: "registry:component",
    registryDependencies: ["utils","description-display"],
    files: [{
      path: "registry/pivot/security-scheme.tsx",
      type: "registry:component",
      target: "components/pivot/security-scheme.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-scheme.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "required-marker": {
    name: "required-marker",
    description: "Marker for required fields",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/required-marker.tsx",
      type: "registry:ui",
      target: "components/pivot/required-marker.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/required-marker.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "value-display": {
    name: "value-display",
    description: "Display values with syntax highlighting",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/value-display.tsx",
      type: "registry:ui",
      target: "components/pivot/value-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/value-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "example-display": {
    name: "example-display",
    description: "Display examples",
    type: "registry:component",
    registryDependencies: ["utils","value-display"],
    files: [{
      path: "registry/pivot/example-display.tsx",
      type: "registry:component",
      target: "components/pivot/example-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/example-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "examples-display": {
    name: "examples-display",
    description: "Display multiple examples",
    type: "registry:component",
    registryDependencies: ["utils","resolve-ref"],
    files: [{
      path: "registry/pivot/examples-display.tsx",
      type: "registry:component",
      target: "components/pivot/examples-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/examples-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "links-section": {
    name: "links-section",
    description: "Display links section",
    type: "registry:component",
    registryDependencies: ["utils","link-item"],
    files: [{
      path: "registry/pivot/links-section.tsx",
      type: "registry:component",
      target: "components/pivot/links-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/links-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "link-item": {
    name: "link-item",
    description: "Display link item",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/link-item.tsx",
      type: "registry:ui",
      target: "components/pivot/link-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/link-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-schemes": {
    name: "security-schemes",
    description: "Display security schemes section",
    type: "registry:component",
    registryDependencies: ["utils","section-title","security-scheme"],
    files: [{
      path: "registry/pivot/security-schemes.tsx",
      type: "registry:component",
      target: "components/pivot/security-schemes.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-schemes.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "oauth-flow": {
    name: "oauth-flow",
    description: "Display OAuth flow information",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/oauth-flow.tsx",
      type: "registry:ui",
      target: "components/pivot/oauth-flow.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/oauth-flow.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "oauth-flow-details": {
    name: "oauth-flow-details",
    description: "Display detailed OAuth flow information",
    type: "registry:component",
    registryDependencies: ["utils","oauth-flow"],
    files: [{
      path: "registry/pivot/oauth-flow-details.tsx",
      type: "registry:component",
      target: "components/pivot/oauth-flow-details.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/oauth-flow-details.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-requirement-item": {
    name: "security-requirement-item",
    description: "Display security requirement item",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/security-requirement-item.tsx",
      type: "registry:ui",
      target: "components/pivot/security-requirement-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-requirement-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "header-item": {
    name: "header-item",
    description: "Display header item with details",
    type: "registry:component",
    registryDependencies: ["utils","deprecated-badge","description-display","enum-values-display","format-badge","required-badge","type-indicator","default-value-display","examples-display","expand-collapse"],
    files: [{
      path: "registry/pivot/header-item.tsx",
      type: "registry:component",
      target: "components/pivot/header-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/header-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "media-type-selector": {
    name: "media-type-selector",
    description: "Selector for media types",
    type: "registry:component",
    registryDependencies: ["utils","description-display"],
    files: [{
      path: "registry/pivot/media-type-selector.tsx",
      type: "registry:component",
      target: "components/pivot/media-type-selector.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/media-type-selector.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-group": {
    name: "response-group",
    description: "Group responses by status code",
    type: "registry:component",
    registryDependencies: ["utils","response-item"],
    files: [{
      path: "registry/pivot/response-group.tsx",
      type: "registry:component",
      target: "components/pivot/response-group.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/response-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameters-section": {
    name: "parameters-section",
    description: "Display parameters section",
    type: "registry:component",
    registryDependencies: ["utils","parameter-item"],
    files: [{
      path: "registry/pivot/parameters-section.tsx",
      type: "registry:component",
      target: "components/pivot/parameters-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameters-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-composition-display": {
    name: "schema-composition-display",
    description: "Display schema composition (allOf, oneOf, anyOf)",
    type: "registry:component",
    registryDependencies: ["utils","type-indicator","constraint-display"],
    files: [{
      path: "registry/pivot/schema-composition-display.tsx",
      type: "registry:component",
      target: "components/pivot/schema-composition-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/schema-composition-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-tabs": {
    name: "component-tabs",
    description: "Tabs for different component types",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/component-tabs.tsx",
      type: "registry:component",
      target: "components/pivot/component-tabs.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/component-tabs.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-with-example-viewer": {
    name: "schema-with-example-viewer",
    description: "Display schema with example",
    type: "registry:component",
    registryDependencies: ["utils","schema-display","example-display","generate-example","resolve-ref"],
    files: [{
      path: "registry/pivot/schema-with-example-viewer.tsx",
      type: "registry:component",
      target: "components/pivot/schema-with-example-viewer.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/schema-with-example-viewer.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-display": {
    name: "schema-display",
    description: "Display OpenAPI schema",
    type: "registry:component",
    registryDependencies: ["utils","schema-display"],
    files: [{
      path: "registry/pivot/schema-display.tsx",
      type: "registry:component",
      target: "components/pivot/schema-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/schema-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-item": {
    name: "parameter-item",
    description: "Display parameter item",
    type: "registry:component",
    registryDependencies: ["utils","example-display"],
    files: [{
      path: "registry/pivot/parameter-item.tsx",
      type: "registry:component",
      target: "components/pivot/parameter-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-box": {
    name: "operation-box",
    description: "Display operation in a box layout",
    type: "registry:component",
    registryDependencies: ["utils","deprecated-badge","description-display","expand-collapse","external-docs-display","method-label","operation-path","parameters-section","request-body-section","responses-section","security-requirements-section"],
    files: [{
      path: "registry/pivot/operation-box.tsx",
      type: "registry:component",
      target: "components/pivot/operation-box.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-box.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "webhook-display": {
    name: "webhook-display",
    description: "Display webhook information",
    type: "registry:component",
    registryDependencies: ["utils","operation-box"],
    files: [{
      path: "registry/pivot/webhook-display.tsx",
      type: "registry:component",
      target: "components/pivot/webhook-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/webhook-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-requirements-section": {
    name: "security-requirements-section",
    description: "Display security requirements section",
    type: "registry:component",
    registryDependencies: ["utils","security-requirement-item"],
    files: [{
      path: "registry/pivot/security-requirements-section.tsx",
      type: "registry:component",
      target: "components/pivot/security-requirements-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-requirements-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "request-body-section": {
    name: "request-body-section",
    description: "Display request body section",
    type: "registry:component",
    registryDependencies: ["utils","schema-with-example-viewer","section-title"],
    files: [{
      path: "registry/pivot/request-body-section.tsx",
      type: "registry:component",
      target: "components/pivot/request-body-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/request-body-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "responses-section": {
    name: "responses-section",
    description: "Display responses section",
    type: "registry:component",
    registryDependencies: ["utils","response-group","section-title","status-code"],
    files: [{
      path: "registry/pivot/responses-section.tsx",
      type: "registry:component",
      target: "components/pivot/responses-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/responses-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-item": {
    name: "response-item",
    description: "Display response item",
    type: "registry:component",
    registryDependencies: ["utils","resolve-ref","description-display","headers-section","links-section","status-code"],
    files: [{
      path: "registry/pivot/response-item.tsx",
      type: "registry:component",
      target: "components/pivot/response-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/response-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "headers-section": {
    name: "headers-section",
    description: "Display headers section",
    type: "registry:component",
    registryDependencies: ["utils","header-item"],
    files: [{
      path: "registry/pivot/headers-section.tsx",
      type: "registry:component",
      target: "components/pivot/headers-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/headers-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-detail": {
    name: "component-detail",
    description: "Display component details",
    type: "registry:component",
    registryDependencies: ["utils","callback-display","examples-display","header-item","link-item","parameter-item","request-body-section","response-item","schema-display","security-scheme-display","webhook-display"],
    files: [{
      path: "registry/pivot/component-detail.tsx",
      type: "registry:component",
      target: "components/pivot/component-detail.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/component-detail.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "callback-display": {
    name: "callback-display",
    description: "Display callback information",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/callback-display.tsx",
      type: "registry:component",
      target: "components/pivot/callback-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/callback-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "copy-button": {
    name: "copy-button",
    description: "Button for copying content to clipboard",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/copy-button.tsx",
      type: "registry:ui",
      target: "components/pivot/copy-button.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/copy-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "code-markdown": {
    name: "code-markdown",
    description: "Display code with syntax highlighting",
    type: "registry:ui",
    registryDependencies: ["utils","copy-button"],
    files: [{
      path: "registry/pivot/code-markdown.tsx",
      type: "registry:ui",
      target: "components/pivot/code-markdown.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/code-markdown.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "curl-generator": {
    name: "curl-generator",
    description: "Generate cURL commands",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/curl-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/curl-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/curl-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "python-generator": {
    name: "python-generator",
    description: "Generate Python code",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/python-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/python-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/python-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "typescript-generator": {
    name: "typescript-generator",
    description: "Generate TypeScript code",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/typescript-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/typescript-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/typescript-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "php-generator": {
    name: "php-generator",
    description: "Generate PHP code",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/php-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/php-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/php-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "laravel-generator": {
    name: "laravel-generator",
    description: "Generate Laravel code",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/laravel-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/laravel-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/laravel-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "codegen": {
    name: "codegen",
    description: "Multi-language code generator",
    type: "registry:component",
    registryDependencies: ["utils","curl-generator","python-generator","typescript-generator","php-generator","laravel-generator","generate-example","resolve-ref","code-markdown"],
    files: [{
      path: "registry/pivot/codegen.tsx",
      type: "registry:component",
      target: "components/pivot/codegen.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/codegen.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "try-it-out-panel": {
    name: "try-it-out-panel",
    description: "Interactive API testing panel",
    type: "registry:component",
    registryDependencies: ["utils","parameter-item","copy-button","codegen","resolve-ref","method-label"],
    files: [{
      path: "registry/pivot/try-it-out-panel.tsx",
      type: "registry:component",
      target: "components/pivot/try-it-out-panel.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/try-it-out-panel.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-list-layout": {
    name: "operation-list-layout",
    description: "Layout for displaying list of operations",
    type: "registry:block",
    registryDependencies: ["utils","use-openapi","operation-box","try-it-out-panel"],
    files: [{
      path: "registry/pivot/operation-list-layout.tsx",
      type: "registry:block",
      target: "components/pivot/operation-list-layout.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-list-layout.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-detailed-layout": {
    name: "operation-detailed-layout",
    description: "Detailed layout for displaying operations",
    type: "registry:block",
    registryDependencies: ["utils","codegen","operation-detail","try-it-out-panel"],
    files: [{
      path: "registry/pivot/operation-detailed-layout.tsx",
      type: "registry:block",
      target: "components/pivot/operation-detailed-layout.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-detailed-layout.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-detail": {
    name: "operation-detail",
    description: "Detailed view of API operation",
    type: "registry:component",
    registryDependencies: ["utils","deprecated-badge","description-display","external-docs-display","method-label","operation-path","parameters-section","request-body-section","responses-section","security-requirements-section"],
    files: [{
      path: "registry/pivot/operation-detail.tsx",
      type: "registry:component",
      target: "components/pivot/operation-detail.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-detail.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "navigation-sidebar": {
    name: "navigation-sidebar",
    description: "Sidebar navigation for API documentation",
    type: "registry:component",
    registryDependencies: ["utils","method-label"],
    files: [{
      path: "registry/pivot/navigation-sidebar.tsx",
      type: "registry:component",
      target: "components/pivot/navigation-sidebar.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/navigation-sidebar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "accordion-components-section": {
    name: "accordion-components-section",
    description: "Accordion section for components",
    type: "registry:component",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/accordion-components-section.tsx",
      type: "registry:component",
      target: "components/pivot/accordion-components-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/accordion-components-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "theme-toggle": {
    name: "theme-toggle",
    description: "Toggle between light and dark themes",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/theme-toggle.tsx",
      type: "registry:ui",
      target: "components/pivot/theme-toggle.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/theme-toggle.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "language-switcher": {
    name: "language-switcher",
    description: "Switch between different languages",
    type: "registry:ui",
    registryDependencies: ["utils"],
    files: [{
      path: "registry/pivot/language-switcher.tsx",
      type: "registry:ui",
      target: "components/pivot/language-switcher.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/language-switcher.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "utils": {
    name: "utils",
    description: "Utility functions for class name merging.",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [{
      path: "lib/utils.ts",
      type: "registry:lib",
      target: "lib/utils.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/lib/utils.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "use-openapi": {
    name: "use-openapi",
    description: "React hook for processing OpenAPI specifications with utility functions.",
    type: "registry:hook",
    registryDependencies: ["resolve-ref"],
    files: [{
      path: "registry/lib/use-openapi.ts",
      type: "registry:hook",
      target: "hooks/use-openapi.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/use-openapi.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "use-mounted": {
    name: "use-mounted",
    description: "React hook for checking if component is mounted.",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "hooks/use-mounted.ts",
      type: "registry:hook",
      target: "hooks/use-mounted.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/hooks/use-mounted.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "use-mobile": {
    name: "use-mobile",
    description: "React hook for detecting mobile breakpoint.",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "hooks/use-mobile.ts",
      type: "registry:hook",
      target: "hooks/use-mobile.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/hooks/use-mobile.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "resolve-ref": {
    name: "resolve-ref",
    description: "Utility function for resolving OpenAPI reference objects.",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [{
      path: "registry/lib/resolve-ref.ts",
      type: "registry:lib",
      target: "utils/resolve-ref.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/resolve-ref.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "generate-example": {
    name: "generate-example",
    description: "Utility function for generating examples from OpenAPI schemas.",
    type: "registry:lib",
    registryDependencies: ["resolve-ref"],
    files: [{
      path: "registry/lib/generate-example.ts",
      type: "registry:lib",
      target: "utils/generate-example.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/generate-example.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "accordion-components-section-demo": {
    name: "accordion-components-section-demo",
    description: "Example showing accordion components-section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/accordion-components-section-demo.tsx",
      type: "registry:example",
      target: "components/example/accordion-components-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/accordion-components-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-list-layout-demo": {
    name: "operation-list-layout-demo",
    description: "Example showing operation list layout component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/operation-list-layout-demo.tsx",
      type: "registry:example",
      target: "components/example/operation-list-layout-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/operation-list-layout-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "callback-display-demo": {
    name: "callback-display-demo",
    description: "Example showing callback display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/callback-display-demo.tsx",
      type: "registry:example",
      target: "components/example/callback-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/callback-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "codegen-demo": {
    name: "codegen-demo",
    description: "Example showing codegen component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/codegen-demo.tsx",
      type: "registry:example",
      target: "components/example/codegen-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/codegen-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-detail-demo": {
    name: "component-detail-demo",
    description: "Example showing component detail component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/component-detail-demo.tsx",
      type: "registry:example",
      target: "components/example/component-detail-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/component-detail-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-items-list-demo": {
    name: "component-items-list-demo",
    description: "Example showing component items-list component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/component-items-list-demo.tsx",
      type: "registry:example",
      target: "components/example/component-items-list-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/component-items-list-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-tabs-demo": {
    name: "component-tabs-demo",
    description: "Example showing component tabs component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/component-tabs-demo.tsx",
      type: "registry:example",
      target: "components/example/component-tabs-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/component-tabs-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "components-section-demo": {
    name: "components-section-demo",
    description: "Example showing components section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/components-section-demo.tsx",
      type: "registry:example",
      target: "components/example/components-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/components-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "const-value-demo": {
    name: "const-value-demo",
    description: "Example showing const value component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/const-value-demo.tsx",
      type: "registry:example",
      target: "components/example/const-value-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/const-value-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "constraint-display-demo": {
    name: "constraint-display-demo",
    description: "Example showing constraint display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/constraint-display-demo.tsx",
      type: "registry:example",
      target: "components/example/constraint-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/constraint-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "contact-display-demo": {
    name: "contact-display-demo",
    description: "Example showing contact display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/contact-display-demo.tsx",
      type: "registry:example",
      target: "components/example/contact-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/contact-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "copy-button-demo": {
    name: "copy-button-demo",
    description: "Example showing copy button component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/copy-button-demo.tsx",
      type: "registry:example",
      target: "components/example/copy-button-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/copy-button-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "curl-generator-demo": {
    name: "curl-generator-demo",
    description: "Example showing curl generator component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/curl-generator-demo.tsx",
      type: "registry:example",
      target: "components/example/curl-generator-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/curl-generator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "default-value-display-demo": {
    name: "default-value-display-demo",
    description: "Example showing default value-display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/default-value-display-demo.tsx",
      type: "registry:example",
      target: "components/example/default-value-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/default-value-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "deprecated-badge-demo": {
    name: "deprecated-badge-demo",
    description: "Example showing deprecated badge component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/deprecated-badge-demo.tsx",
      type: "registry:example",
      target: "components/example/deprecated-badge-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/deprecated-badge-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "description-display-demo": {
    name: "description-display-demo",
    description: "Example showing description display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/description-display-demo.tsx",
      type: "registry:example",
      target: "components/example/description-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/description-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "enum-values-demo": {
    name: "enum-values-demo",
    description: "Example showing enum values component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/enum-values-demo.tsx",
      type: "registry:example",
      target: "components/example/enum-values-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/enum-values-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "enum-values-display-demo": {
    name: "enum-values-display-demo",
    description: "Example showing enum values-display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/enum-values-display-demo.tsx",
      type: "registry:example",
      target: "components/example/enum-values-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/enum-values-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "example-display-demo": {
    name: "example-display-demo",
    description: "Example showing example display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/example-display-demo.tsx",
      type: "registry:example",
      target: "components/example/example-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/example-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "examples-display-demo": {
    name: "examples-display-demo",
    description: "Example showing examples display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/examples-display-demo.tsx",
      type: "registry:example",
      target: "components/example/examples-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/examples-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "expand-collapse-demo": {
    name: "expand-collapse-demo",
    description: "Example showing expand collapse component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/expand-collapse-demo.tsx",
      type: "registry:example",
      target: "components/example/expand-collapse-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/expand-collapse-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "external-docs-demo": {
    name: "external-docs-demo",
    description: "Example showing external docs component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/external-docs-demo.tsx",
      type: "registry:example",
      target: "components/example/external-docs-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/external-docs-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "external-docs-display-demo": {
    name: "external-docs-display-demo",
    description: "Example showing external docs-display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/external-docs-display-demo.tsx",
      type: "registry:example",
      target: "components/example/external-docs-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/external-docs-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "format-badge-demo": {
    name: "format-badge-demo",
    description: "Example showing format badge component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/format-badge-demo.tsx",
      type: "registry:example",
      target: "components/example/format-badge-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/format-badge-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "header-item-demo": {
    name: "header-item-demo",
    description: "Example showing header item component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/header-item-demo.tsx",
      type: "registry:example",
      target: "components/example/header-item-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/header-item-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "headers-section-demo": {
    name: "headers-section-demo",
    description: "Example showing headers section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/headers-section-demo.tsx",
      type: "registry:example",
      target: "components/example/headers-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/headers-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "in-label-demo": {
    name: "in-label-demo",
    description: "Example showing in label component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/in-label-demo.tsx",
      type: "registry:example",
      target: "components/example/in-label-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/in-label-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "info-section-demo": {
    name: "info-section-demo",
    description: "Example showing info section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/info-section-demo.tsx",
      type: "registry:example",
      target: "components/example/info-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/info-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "language-switcher-demo": {
    name: "language-switcher-demo",
    description: "Example showing language switcher component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/language-switcher-demo.tsx",
      type: "registry:example",
      target: "components/example/language-switcher-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/language-switcher-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "laravel-generator-demo": {
    name: "laravel-generator-demo",
    description: "Example showing laravel generator component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/laravel-generator-demo.tsx",
      type: "registry:example",
      target: "components/example/laravel-generator-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/laravel-generator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "license-display-demo": {
    name: "license-display-demo",
    description: "Example showing license display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/license-display-demo.tsx",
      type: "registry:example",
      target: "components/example/license-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/license-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "link-item-demo": {
    name: "link-item-demo",
    description: "Example showing link item component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/link-item-demo.tsx",
      type: "registry:example",
      target: "components/example/link-item-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/link-item-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "links-section-demo": {
    name: "links-section-demo",
    description: "Example showing links section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/links-section-demo.tsx",
      type: "registry:example",
      target: "components/example/links-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/links-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "media-type-display-demo": {
    name: "media-type-display-demo",
    description: "Example showing media type-display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/media-type-display-demo.tsx",
      type: "registry:example",
      target: "components/example/media-type-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/media-type-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "media-type-selector-demo": {
    name: "media-type-selector-demo",
    description: "Example showing media type-selector component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/media-type-selector-demo.tsx",
      type: "registry:example",
      target: "components/example/media-type-selector-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/media-type-selector-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "method-label-demo": {
    name: "method-label-demo",
    description: "Example showing method label component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/method-label-demo.tsx",
      type: "registry:example",
      target: "components/example/method-label-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/method-label-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "navigation-sidebar-demo": {
    name: "navigation-sidebar-demo",
    description: "Example showing navigation sidebar component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/navigation-sidebar-demo.tsx",
      type: "registry:example",
      target: "components/example/navigation-sidebar-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/navigation-sidebar-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "oauth-flow-demo": {
    name: "oauth-flow-demo",
    description: "Example showing oauth flow component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/oauth-flow-demo.tsx",
      type: "registry:example",
      target: "components/example/oauth-flow-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/oauth-flow-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "oauth-flow-details-demo": {
    name: "oauth-flow-details-demo",
    description: "Example showing oauth flow-details component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/oauth-flow-details-demo.tsx",
      type: "registry:example",
      target: "components/example/oauth-flow-details-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/oauth-flow-details-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-box-demo": {
    name: "operation-box-demo",
    description: "Example showing operation box component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/operation-box-demo.tsx",
      type: "registry:example",
      target: "components/example/operation-box-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/operation-box-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-path-demo": {
    name: "operation-path-demo",
    description: "Example showing operation path component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/operation-path-demo.tsx",
      type: "registry:example",
      target: "components/example/operation-path-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/operation-path-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-description-demo": {
    name: "parameter-description-demo",
    description: "Example showing parameter description component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/parameter-description-demo.tsx",
      type: "registry:example",
      target: "components/example/parameter-description-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/parameter-description-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-group-demo": {
    name: "parameter-group-demo",
    description: "Example showing parameter group component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/parameter-group-demo.tsx",
      type: "registry:example",
      target: "components/example/parameter-group-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/parameter-group-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-item-demo": {
    name: "parameter-item-demo",
    description: "Example showing parameter item component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/parameter-item-demo.tsx",
      type: "registry:example",
      target: "components/example/parameter-item-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/parameter-item-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-name-demo": {
    name: "parameter-name-demo",
    description: "Example showing parameter name component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/parameter-name-demo.tsx",
      type: "registry:example",
      target: "components/example/parameter-name-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/parameter-name-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameters-section-demo": {
    name: "parameters-section-demo",
    description: "Example showing parameters section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/parameters-section-demo.tsx",
      type: "registry:example",
      target: "components/example/parameters-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/parameters-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "path-segment-demo": {
    name: "path-segment-demo",
    description: "Example showing path segment component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/path-segment-demo.tsx",
      type: "registry:example",
      target: "components/example/path-segment-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/path-segment-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "php-generator-demo": {
    name: "php-generator-demo",
    description: "Example showing php generator component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/php-generator-demo.tsx",
      type: "registry:example",
      target: "components/example/php-generator-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/php-generator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "python-generator-demo": {
    name: "python-generator-demo",
    description: "Example showing python generator component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/python-generator-demo.tsx",
      type: "registry:example",
      target: "components/example/python-generator-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/python-generator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "request-body-section-demo": {
    name: "request-body-section-demo",
    description: "Example showing request body-section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/request-body-section-demo.tsx",
      type: "registry:example",
      target: "components/example/request-body-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/request-body-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "required-badge-demo": {
    name: "required-badge-demo",
    description: "Example showing required badge component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/required-badge-demo.tsx",
      type: "registry:example",
      target: "components/example/required-badge-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/required-badge-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "required-marker-demo": {
    name: "required-marker-demo",
    description: "Example showing required marker component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/required-marker-demo.tsx",
      type: "registry:example",
      target: "components/example/required-marker-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/required-marker-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "resizable-sidebar-demo": {
    name: "resizable-sidebar-demo",
    description: "Example showing resizable sidebar component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/resizable-sidebar-demo.tsx",
      type: "registry:example",
      target: "components/example/resizable-sidebar-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/resizable-sidebar-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-content-section-demo": {
    name: "response-content-section-demo",
    description: "Example showing response content-section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/response-content-section-demo.tsx",
      type: "registry:example",
      target: "components/example/response-content-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/response-content-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-headers-table-demo": {
    name: "response-headers-table-demo",
    description: "Example showing response headers-table component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/response-headers-table-demo.tsx",
      type: "registry:example",
      target: "components/example/response-headers-table-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/response-headers-table-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-item-demo": {
    name: "response-item-demo",
    description: "Example showing response item component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/response-item-demo.tsx",
      type: "registry:example",
      target: "components/example/response-item-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/response-item-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "responses-section-demo": {
    name: "responses-section-demo",
    description: "Example showing responses section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/responses-section-demo.tsx",
      type: "registry:example",
      target: "components/example/responses-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/responses-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-composition-display-demo": {
    name: "schema-composition-display-demo",
    description: "Example showing schema composition-display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/schema-composition-display-demo.tsx",
      type: "registry:example",
      target: "components/example/schema-composition-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/schema-composition-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-display-demo": {
    name: "schema-display-demo",
    description: "Example showing schema display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/schema-display-demo.tsx",
      type: "registry:example",
      target: "components/example/schema-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/schema-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-with-example-viewer-demo": {
    name: "schema-with-example-viewer-demo",
    description: "Example showing schema with-example-viewer component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/schema-with-example-viewer-demo.tsx",
      type: "registry:example",
      target: "components/example/schema-with-example-viewer-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/schema-with-example-viewer-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "scheme-type-demo": {
    name: "scheme-type-demo",
    description: "Example showing scheme type component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/scheme-type-demo.tsx",
      type: "registry:example",
      target: "components/example/scheme-type-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/scheme-type-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "section-title-demo": {
    name: "section-title-demo",
    description: "Example showing section title component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/section-title-demo.tsx",
      type: "registry:example",
      target: "components/example/section-title-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/section-title-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-requirement-item-demo": {
    name: "security-requirement-item-demo",
    description: "Example showing security requirement-item component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/security-requirement-item-demo.tsx",
      type: "registry:example",
      target: "components/example/security-requirement-item-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/security-requirement-item-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-requirements-section-demo": {
    name: "security-requirements-section-demo",
    description: "Example showing security requirements-section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/security-requirements-section-demo.tsx",
      type: "registry:example",
      target: "components/example/security-requirements-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/security-requirements-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-scheme-demo": {
    name: "security-scheme-demo",
    description: "Example showing security scheme component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/security-scheme-demo.tsx",
      type: "registry:example",
      target: "components/example/security-scheme-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/security-scheme-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-scheme-display-demo": {
    name: "security-scheme-display-demo",
    description: "Example showing security scheme-display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/security-scheme-display-demo.tsx",
      type: "registry:example",
      target: "components/example/security-scheme-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/security-scheme-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-schemes-demo": {
    name: "security-schemes-demo",
    description: "Example showing security schemes component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/security-schemes-demo.tsx",
      type: "registry:example",
      target: "components/example/security-schemes-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/security-schemes-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-section-demo": {
    name: "security-section-demo",
    description: "Example showing security section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/security-section-demo.tsx",
      type: "registry:example",
      target: "components/example/security-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/security-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-demo": {
    name: "server-demo",
    description: "Example showing server component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/server-demo.tsx",
      type: "registry:example",
      target: "components/example/server-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/server-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-display-demo": {
    name: "server-display-demo",
    description: "Example showing server display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/server-display-demo.tsx",
      type: "registry:example",
      target: "components/example/server-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/server-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-variable-demo": {
    name: "server-variable-demo",
    description: "Example showing server variable component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/server-variable-demo.tsx",
      type: "registry:example",
      target: "components/example/server-variable-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/server-variable-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "servers-demo": {
    name: "servers-demo",
    description: "Example showing servers component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/servers-demo.tsx",
      type: "registry:example",
      target: "components/example/servers-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/servers-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "servers-section-demo": {
    name: "servers-section-demo",
    description: "Example showing servers section component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/servers-section-demo.tsx",
      type: "registry:example",
      target: "components/example/servers-section-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/servers-section-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "status-code-demo": {
    name: "status-code-demo",
    description: "Example showing status code component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/status-code-demo.tsx",
      type: "registry:example",
      target: "components/example/status-code-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/status-code-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "style-badge-demo": {
    name: "style-badge-demo",
    description: "Example showing style badge component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/style-badge-demo.tsx",
      type: "registry:example",
      target: "components/example/style-badge-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/style-badge-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "terms-of-service-demo": {
    name: "terms-of-service-demo",
    description: "Example showing terms of-service component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/terms-of-service-demo.tsx",
      type: "registry:example",
      target: "components/example/terms-of-service-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/terms-of-service-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "theme-toggle-demo": {
    name: "theme-toggle-demo",
    description: "Example showing theme toggle component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/theme-toggle-demo.tsx",
      type: "registry:example",
      target: "components/example/theme-toggle-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/theme-toggle-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "try-it-out-panel-demo": {
    name: "try-it-out-panel-demo",
    description: "Example showing try it-out-panel component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/try-it-out-panel-demo.tsx",
      type: "registry:example",
      target: "components/example/try-it-out-panel-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/try-it-out-panel-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "type-indicator-demo": {
    name: "type-indicator-demo",
    description: "Example showing type indicator component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/type-indicator-demo.tsx",
      type: "registry:example",
      target: "components/example/type-indicator-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/type-indicator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "typescript-generator-demo": {
    name: "typescript-generator-demo",
    description: "Example showing typescript generator component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/typescript-generator-demo.tsx",
      type: "registry:example",
      target: "components/example/typescript-generator-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/typescript-generator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "value-display-demo": {
    name: "value-display-demo",
    description: "Example showing value display component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/value-display-demo.tsx",
      type: "registry:example",
      target: "components/example/value-display-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/value-display-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "version-badge-demo": {
    name: "version-badge-demo",
    description: "Example showing version badge component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/version-badge-demo.tsx",
      type: "registry:example",
      target: "components/example/version-badge-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/version-badge-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "webhook-label-demo": {
    name: "webhook-label-demo",
    description: "Example showing webhook label component",
    type: "registry:example",
    registryDependencies: undefined,
    files: [{
      path: "registry/example/webhook-label-demo.tsx",
      type: "registry:example",
      target: "components/example/webhook-label-demo.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/webhook-label-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  }