/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "index": {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    meta: undefined,
  },
  "status-code": {
    name: "status-code",
    description: "Display HTTP status codes with appropriate styling",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/status-code.tsx",
      type: "registry:ui",
      target: "components/pivot/status-code.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/status-code.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "method-label": {
    name: "method-label",
    description: "Display HTTP methods with color coding",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/method-label.tsx",
      type: "registry:ui",
      target: "components/pivot/method-label.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/method-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "type-indicator": {
    name: "type-indicator",
    description: "Display data types with appropriate styling",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/type-indicator.tsx",
      type: "registry:ui",
      target: "components/pivot/type-indicator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/type-indicator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "required-badge": {
    name: "required-badge",
    description: "Badge to indicate required fields",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/required-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/required-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/required-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "deprecated-badge": {
    name: "deprecated-badge",
    description: "Badge to indicate deprecated fields or operations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/deprecated-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/deprecated-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/deprecated-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "version-badge": {
    name: "version-badge",
    description: "Display version information",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/version-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/version-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/version-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "webhook-label": {
    name: "webhook-label",
    description: "Label for webhook endpoints",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/webhook-label.tsx",
      type: "registry:ui",
      target: "components/pivot/webhook-label.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/webhook-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "format-badge": {
    name: "format-badge",
    description: "Display format information for data types",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/format-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/format-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/format-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "style-badge": {
    name: "style-badge",
    description: "Display style information for parameters",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/style-badge.tsx",
      type: "registry:ui",
      target: "components/pivot/style-badge.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/style-badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "scheme-type": {
    name: "scheme-type",
    description: "Display security scheme types",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/scheme-type.tsx",
      type: "registry:ui",
      target: "components/pivot/scheme-type.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/scheme-type.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "in-label": {
    name: "in-label",
    description: "Label for parameter location",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/in-label.tsx",
      type: "registry:ui",
      target: "components/pivot/in-label.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/in-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-name": {
    name: "parameter-name",
    description: "Display parameter names with deprecation support",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/parameter-name.tsx",
      type: "registry:ui",
      target: "components/pivot/parameter-name.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-name.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-description": {
    name: "parameter-description",
    description: "Display parameter descriptions",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/parameter-description.tsx",
      type: "registry:ui",
      target: "components/pivot/parameter-description.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-description.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "path-segment": {
    name: "path-segment",
    description: "Display API path segments with parameter highlighting",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/path-segment.tsx",
      type: "registry:ui",
      target: "components/pivot/path-segment.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/path-segment.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "required-marker": {
    name: "required-marker",
    description: "Visual marker for required fields",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/required-marker.tsx",
      type: "registry:ui",
      target: "components/pivot/required-marker.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/required-marker.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "section-title": {
    name: "section-title",
    description: "Styled section titles for documentation",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/section-title.tsx",
      type: "registry:ui",
      target: "components/pivot/section-title.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/section-title.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "description-display": {
    name: "description-display",
    description: "Display descriptions with markdown support",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/description-display.tsx",
      type: "registry:ui",
      target: "components/pivot/description-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/description-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "value-display": {
    name: "value-display",
    description: "Display values with proper formatting",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/value-display.tsx",
      type: "registry:ui",
      target: "components/pivot/value-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/value-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "default-value-display": {
    name: "default-value-display",
    description: "Display default values with proper formatting",
    type: "registry:ui",
    registryDependencies: ["value-display"],
    files: [{
      path: "registry/pivot/default-value-display.tsx",
      type: "registry:ui",
      target: "components/pivot/default-value-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/default-value-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "const-value": {
    name: "const-value",
    description: "Display constant values",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/const-value.tsx",
      type: "registry:ui",
      target: "components/pivot/const-value.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/const-value.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "enum-values": {
    name: "enum-values",
    description: "Display enumerated values",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/enum-values.tsx",
      type: "registry:ui",
      target: "components/pivot/enum-values.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/enum-values.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "external-docs": {
    name: "external-docs",
    description: "Link to external documentation",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/external-docs.tsx",
      type: "registry:ui",
      target: "components/pivot/external-docs.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/external-docs.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "oauth-flow": {
    name: "oauth-flow",
    description: "Display OAuth flow types",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/oauth-flow.tsx",
      type: "registry:ui",
      target: "components/pivot/oauth-flow.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/oauth-flow.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "contact-display": {
    name: "contact-display",
    description: "Display contact information",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/contact-display.tsx",
      type: "registry:ui",
      target: "components/pivot/contact-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/contact-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "license-display": {
    name: "license-display",
    description: "Display license information",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/license-display.tsx",
      type: "registry:ui",
      target: "components/pivot/license-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/license-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "terms-of-service": {
    name: "terms-of-service",
    description: "Link to terms of service",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/terms-of-service.tsx",
      type: "registry:ui",
      target: "components/pivot/terms-of-service.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/terms-of-service.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-display": {
    name: "server-display",
    description: "Display server information",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/server-display.tsx",
      type: "registry:ui",
      target: "components/pivot/server-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/server-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-path": {
    name: "operation-path",
    description: "Display API operation paths with parameter highlighting",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/operation-path.tsx",
      type: "registry:ui",
      target: "components/pivot/operation-path.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-path.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "enum-values-display": {
    name: "enum-values-display",
    description: "Display enumerated values with title",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/enum-values-display.tsx",
      type: "registry:ui",
      target: "components/pivot/enum-values-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/enum-values-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "external-docs-display": {
    name: "external-docs-display",
    description: "Display external documentation links",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/external-docs-display.tsx",
      type: "registry:ui",
      target: "components/pivot/external-docs-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/external-docs-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "constraint-display": {
    name: "constraint-display",
    description: "Display JSON Schema constraints and validation rules",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/constraint-display.tsx",
      type: "registry:ui",
      target: "components/pivot/constraint-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/constraint-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "media-type-display": {
    name: "media-type-display",
    description: "Display media types with appropriate color coding",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/media-type-display.tsx",
      type: "registry:ui",
      target: "components/pivot/media-type-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/media-type-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-headers-table": {
    name: "response-headers-table",
    description: "Display response headers in a table format",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/response-headers-table.tsx",
      type: "registry:ui",
      target: "components/pivot/response-headers-table.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/response-headers-table.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "info-section": {
    name: "info-section",
    description: "A comprehensive section component for displaying API information including title, version, description, contact, and license details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/info-section.tsx",
      type: "registry:ui",
      target: "components/pivot/info-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/info-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "servers-section": {
    name: "servers-section",
    description: "A section component for displaying server information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/servers-section.tsx",
      type: "registry:ui",
      target: "components/pivot/servers-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/servers-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "copy-button": {
    name: "copy-button",
    description: "An interactive button component for copying text to clipboard with visual feedback.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/copy-button.tsx",
      type: "registry:ui",
      target: "components/pivot/copy-button.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/copy-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "expand-collapse": {
    name: "expand-collapse",
    description: "A toggle button component for expanding and collapsing content sections.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/expand-collapse.tsx",
      type: "registry:ui",
      target: "components/pivot/expand-collapse.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/expand-collapse.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "media-type-selector": {
    name: "media-type-selector",
    description: "A tab-style selector component for choosing between different media types.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/media-type-selector.tsx",
      type: "registry:ui",
      target: "components/pivot/media-type-selector.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/media-type-selector.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-tabs": {
    name: "component-tabs",
    description: "A tab navigation component for switching between different component types.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/component-tabs.tsx",
      type: "registry:ui",
      target: "components/pivot/component-tabs.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/component-tabs.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-group": {
    name: "parameter-group",
    description: "A collapsible group component for displaying parameters by location type.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/parameter-group.tsx",
      type: "registry:ui",
      target: "components/pivot/parameter-group.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "link-item": {
    name: "link-item",
    description: "A component for displaying OpenAPI link objects with parameters and request body details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/link-item.tsx",
      type: "registry:ui",
      target: "components/pivot/link-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/link-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-scheme": {
    name: "security-scheme",
    description: "A component for displaying OpenAPI security scheme configurations with OAuth2 flow support.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/security-scheme.tsx",
      type: "registry:ui",
      target: "components/pivot/security-scheme.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-scheme.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server-variable": {
    name: "server-variable",
    description: "A component for displaying server variable information with default values and enum options.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/server-variable.tsx",
      type: "registry:ui",
      target: "components/pivot/server-variable.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/server-variable.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "server": {
    name: "server",
    description: "A component for displaying server information with URL interpolation and variable expansion.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/server.tsx",
      type: "registry:ui",
      target: "components/pivot/server.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/server.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "servers": {
    name: "servers",
    description: "A component for displaying a list of servers with section title.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/servers.tsx",
      type: "registry:ui",
      target: "components/pivot/servers.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/servers.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "links-section": {
    name: "links-section",
    description: "A section component for displaying OpenAPI links with reference resolution.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/links-section.tsx",
      type: "registry:ui",
      target: "components/pivot/links-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/links-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-schemes": {
    name: "security-schemes",
    description: "A section component for displaying multiple security schemes.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/security-schemes.tsx",
      type: "registry:ui",
      target: "components/pivot/security-schemes.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-schemes.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "oauth-flow-details": {
    name: "oauth-flow-details",
    description: "A component for displaying detailed OAuth flow information including URLs and scopes.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/oauth-flow-details.tsx",
      type: "registry:ui",
      target: "components/pivot/oauth-flow-details.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/oauth-flow-details.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-requirement-item": {
    name: "security-requirement-item",
    description: "A component for displaying a single security requirement with schemes and scopes.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/security-requirement-item.tsx",
      type: "registry:ui",
      target: "components/pivot/security-requirement-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-requirement-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-requirements-section": {
    name: "security-requirements-section",
    description: "A section component for displaying security requirements.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/security-requirements-section.tsx",
      type: "registry:ui",
      target: "components/pivot/security-requirements-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-requirements-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "example-display": {
    name: "example-display",
    description: "A component for displaying examples with proper formatting and syntax highlighting.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/example-display.tsx",
      type: "registry:ui",
      target: "components/pivot/example-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/example-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "language-switcher": {
    name: "language-switcher",
    description: "A component for switching between different programming languages in code examples.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/language-switcher.tsx",
      type: "registry:ui",
      target: "components/pivot/language-switcher.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/language-switcher.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-scheme-display": {
    name: "security-scheme-display",
    description: "A component for displaying security scheme information with OAuth flow details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/security-scheme-display.tsx",
      type: "registry:ui",
      target: "components/pivot/security-scheme-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-scheme-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-items-list": {
    name: "component-items-list",
    description: "A list component for displaying component items with filtering.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/component-items-list.tsx",
      type: "registry:ui",
      target: "components/pivot/component-items-list.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/component-items-list.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "theme-toggle": {
    name: "theme-toggle",
    description: "A toggle button for switching between light and dark themes.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/theme-toggle.tsx",
      type: "registry:ui",
      target: "components/pivot/theme-toggle.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/theme-toggle.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameter-item": {
    name: "parameter-item",
    description: "A component for displaying parameter information with schema details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/parameter-item.tsx",
      type: "registry:ui",
      target: "components/pivot/parameter-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameter-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-item": {
    name: "response-item",
    description: "A component for displaying response information with content details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/response-item.tsx",
      type: "registry:ui",
      target: "components/pivot/response-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/response-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "request-body-section": {
    name: "request-body-section",
    description: "A section component for displaying request body information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/request-body-section.tsx",
      type: "registry:ui",
      target: "components/pivot/request-body-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/request-body-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "operation-box": {
    name: "operation-box",
    description: "A comprehensive component for displaying API operation information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/operation-box.tsx",
      type: "registry:ui",
      target: "components/pivot/operation-box.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/operation-box.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "responses-section": {
    name: "responses-section",
    description: "A section component for displaying API responses.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/responses-section.tsx",
      type: "registry:ui",
      target: "components/pivot/responses-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/responses-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "parameters-section": {
    name: "parameters-section",
    description: "A section component for displaying API parameters.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/parameters-section.tsx",
      type: "registry:ui",
      target: "components/pivot/parameters-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/parameters-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "response-content-section": {
    name: "response-content-section",
    description: "A section component for displaying response content with media types.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/response-content-section.tsx",
      type: "registry:ui",
      target: "components/pivot/response-content-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/response-content-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-composition-display": {
    name: "schema-composition-display",
    description: "A component for displaying schema composition (allOf, oneOf, anyOf).",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/schema-composition-display.tsx",
      type: "registry:ui",
      target: "components/pivot/schema-composition-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/schema-composition-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-display": {
    name: "schema-display",
    description: "A comprehensive component for displaying OpenAPI schemas with recursive support.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/schema-display.tsx",
      type: "registry:ui",
      target: "components/pivot/schema-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/schema-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "components-section": {
    name: "components-section",
    description: "A section component for displaying OpenAPI components.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/components-section.tsx",
      type: "registry:ui",
      target: "components/pivot/components-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/components-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "schema-with-example-viewer": {
    name: "schema-with-example-viewer",
    description: "A component for displaying schemas alongside examples.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/schema-with-example-viewer.tsx",
      type: "registry:ui",
      target: "components/pivot/schema-with-example-viewer.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/schema-with-example-viewer.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "header-item": {
    name: "header-item",
    description: "A component for displaying header information with schema details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/header-item.tsx",
      type: "registry:ui",
      target: "components/pivot/header-item.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/header-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "examples-display": {
    name: "examples-display",
    description: "A component for displaying multiple examples with selection.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/examples-display.tsx",
      type: "registry:ui",
      target: "components/pivot/examples-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/examples-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "callback-display": {
    name: "callback-display",
    description: "A component for displaying OpenAPI callback objects with operation details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/callback-display.tsx",
      type: "registry:ui",
      target: "components/pivot/callback-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/callback-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "webhook-display": {
    name: "webhook-display",
    description: "A component for displaying webhook information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/webhook-display.tsx",
      type: "registry:ui",
      target: "components/pivot/webhook-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/webhook-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "path-item-display": {
    name: "path-item-display",
    description: "A component for displaying path item information with operations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/path-item-display.tsx",
      type: "registry:ui",
      target: "components/pivot/path-item-display.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/path-item-display.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "security-section": {
    name: "security-section",
    description: "A comprehensive security section with schemes and requirements.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/security-section.tsx",
      type: "registry:ui",
      target: "components/pivot/security-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/security-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "component-detail": {
    name: "component-detail",
    description: "A detailed view component for displaying component information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/component-detail.tsx",
      type: "registry:ui",
      target: "components/pivot/component-detail.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/component-detail.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "headers-section": {
    name: "headers-section",
    description: "A section component for displaying HTTP headers.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/headers-section.tsx",
      type: "registry:ui",
      target: "components/pivot/headers-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/headers-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "accordion-components-section": {
    name: "accordion-components-section",
    description: "An accordion-style section for displaying components with expandable details.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/accordion-components-section.tsx",
      type: "registry:ui",
      target: "components/pivot/accordion-components-section.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/accordion-components-section.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "resizable-sidebar": {
    name: "resizable-sidebar",
    description: "A resizable sidebar component for navigation and content organization.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/resizable-sidebar.tsx",
      type: "registry:ui",
      target: "components/pivot/resizable-sidebar.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/resizable-sidebar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "curl-generator": {
    name: "curl-generator",
    description: "Generate cURL commands from OpenAPI operations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/curl-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/curl-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/curl-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "python-generator": {
    name: "python-generator",
    description: "Generate Python code from OpenAPI operations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/python-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/python-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/python-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "typescript-generator": {
    name: "typescript-generator",
    description: "Generate TypeScript code from OpenAPI operations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/typescript-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/typescript-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/typescript-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "php-generator": {
    name: "php-generator",
    description: "Generate PHP code from OpenAPI operations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/php-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/php-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/php-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "laravel-generator": {
    name: "laravel-generator",
    description: "Generate Laravel code from OpenAPI operations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/laravel-generator.tsx",
      type: "registry:ui",
      target: "components/pivot/laravel-generator.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/laravel-generator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "codegen": {
    name: "codegen",
    description: "A comprehensive code generator supporting multiple programming languages.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/codegen.tsx",
      type: "registry:ui",
      target: "components/pivot/codegen.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/codegen.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "try-it-out-panel": {
    name: "try-it-out-panel",
    description: "An interactive panel for testing API operations with parameter input and response display.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/try-it-out-panel.tsx",
      type: "registry:ui",
      target: "components/pivot/try-it-out-panel.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/try-it-out-panel.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "navigation-sidebar": {
    name: "navigation-sidebar",
    description: "A comprehensive navigation sidebar with search, filtering, and operation grouping.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/navigation-sidebar.tsx",
      type: "registry:ui",
      target: "components/pivot/navigation-sidebar.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/navigation-sidebar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "all-in-one-layout": {
    name: "all-in-one-layout",
    description: "A comprehensive layout combining navigation, operation details, and interactive elements.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/pivot/all-in-one-layout.tsx",
      type: "registry:ui",
      target: "components/pivot/all-in-one-layout.tsx"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/pivot/all-in-one-layout.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  "utils": {
    name: "utils",
    description: "Utility functions for class name merging.",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [{
      path: "lib/utils.ts",
      type: "registry:lib",
      target: "lib/utils.ts"
    }],
    component: React.lazy(async () => {
      const mod = await import("@/lib/utils.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
  },
  }