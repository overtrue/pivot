{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion-components-section-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/accordion-components-section.json"
  ],
  "files": [
    {
      "path": "registry/default/example/accordion-components-section-demo.tsx",
      "content": "import { AccordionComponentsSection } from \"@/registry/default/ui/accordion-components-section\";\n\nexport default function AccordionComponentsSectionDemo() {\n  // 电商 API 组件定义\n  const ecommerceComponents = {\n    schemas: {\n      Product: {\n        type: \"object\" as const,\n        required: [\"id\", \"name\", \"price\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"产品唯一标识符\" },\n          name: { type: \"string\" as const, description: \"产品名称\" },\n          price: { type: \"number\" as const, description: \"产品价格\" },\n          category: { type: \"string\" as const, description: \"产品分类\" },\n          description: { type: \"string\" as const, description: \"产品描述\" },\n          images: {\n            type: \"array\" as const,\n            items: { type: \"string\" as const, format: \"uri\" as const },\n            description: \"产品图片列表\",\n          },\n          inStock: { type: \"boolean\" as const, description: \"是否有库存\" },\n          tags: {\n            type: \"array\" as const,\n            items: { type: \"string\" as const },\n            description: \"产品标签\",\n          },\n        },\n      },\n      Order: {\n        type: \"object\" as const,\n        required: [\"id\", \"customerId\", \"items\", \"totalAmount\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"订单 ID\" },\n          customerId: { type: \"string\" as const, description: \"客户 ID\" },\n          items: {\n            type: \"array\" as const,\n            items: { $ref: \"#/components/schemas/OrderItem\" },\n            description: \"订单商品列表\",\n          },\n          totalAmount: { type: \"number\" as const, description: \"订单总金额\" },\n          status: {\n            type: \"string\" as const,\n            enum: [\"pending\", \"confirmed\", \"shipped\", \"delivered\", \"cancelled\"],\n            description: \"订单状态\",\n          },\n          createdAt: {\n            type: \"string\" as const,\n            format: \"date-time\" as const,\n            description: \"创建时间\",\n          },\n          shippingAddress: { $ref: \"#/components/schemas/Address\" },\n        },\n      },\n      OrderItem: {\n        type: \"object\" as const,\n        required: [\"productId\", \"quantity\", \"price\"],\n        properties: {\n          productId: { type: \"string\" as const, description: \"产品 ID\" },\n          quantity: {\n            type: \"integer\" as const,\n            minimum: 1,\n            description: \"购买数量\",\n          },\n          price: { type: \"number\" as const, description: \"单价\" },\n          discount: { type: \"number\" as const, description: \"折扣金额\" },\n        },\n      },\n    },\n    responses: {\n      ProductListResponse: {\n        description: \"产品列表响应\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\" as const,\n              properties: {\n                data: {\n                  type: \"array\" as const,\n                  items: { $ref: \"#/components/schemas/Product\" },\n                },\n                pagination: { $ref: \"#/components/schemas/Pagination\" },\n              },\n            },\n          },\n        },\n      },\n      OrderResponse: {\n        description: \"订单详情响应\",\n        content: {\n          \"application/json\": {\n            schema: { $ref: \"#/components/schemas/Order\" },\n          },\n        },\n      },\n    },\n    securitySchemes: {\n      BearerAuth: {\n        type: \"http\" as const,\n        scheme: \"bearer\",\n        bearerFormat: \"JWT\",\n        description: \"JWT Bearer Token 认证\",\n      },\n      ApiKeyAuth: {\n        type: \"apiKey\" as const,\n        in: \"header\" as const,\n        name: \"X-API-Key\",\n        description: \"API 密钥认证\",\n      },\n    },\n  };\n\n  // 用户管理 API 组件定义\n  const userManagementComponents = {\n    schemas: {\n      User: {\n        type: \"object\" as const,\n        required: [\"id\", \"email\", \"name\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"用户 ID\" },\n          email: {\n            type: \"string\" as const,\n            format: \"email\" as const,\n            description: \"邮箱地址\",\n          },\n          name: { type: \"string\" as const, description: \"用户姓名\" },\n          avatar: {\n            type: \"string\" as const,\n            format: \"uri\" as const,\n            description: \"头像 URL\",\n          },\n          role: {\n            type: \"string\" as const,\n            enum: [\"admin\", \"user\", \"moderator\"],\n            description: \"用户角色\",\n          },\n          createdAt: {\n            type: \"string\" as const,\n            format: \"date-time\" as const,\n            description: \"注册时间\",\n          },\n          lastLoginAt: {\n            type: \"string\" as const,\n            format: \"date-time\" as const,\n            description: \"最后登录时间\",\n          },\n        },\n      },\n      UserProfile: {\n        type: \"object\" as const,\n        properties: {\n          bio: { type: \"string\" as const, description: \"个人简介\" },\n          phone: { type: \"string\" as const, description: \"电话号码\" },\n          address: { $ref: \"#/components/schemas/Address\" },\n          preferences: {\n            type: \"object\" as const,\n            properties: {\n              language: { type: \"string\" as const, description: \"首选语言\" },\n              timezone: { type: \"string\" as const, description: \"时区\" },\n              notifications: {\n                type: \"boolean\" as const,\n                description: \"是否接收通知\",\n              },\n            },\n          },\n        },\n      },\n    },\n    responses: {\n      UserResponse: {\n        description: \"用户信息响应\",\n        content: {\n          \"application/json\": {\n            schema: { $ref: \"#/components/schemas/User\" },\n          },\n        },\n      },\n      ValidationError: {\n        description: \"验证错误响应\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\" as const,\n              properties: {\n                error: { type: \"string\" as const, description: \"错误信息\" },\n                details: {\n                  type: \"array\" as const,\n                  items: {\n                    type: \"object\" as const,\n                    properties: {\n                      field: {\n                        type: \"string\" as const,\n                        description: \"错误字段\",\n                      },\n                      message: {\n                        type: \"string\" as const,\n                        description: \"错误描述\",\n                      },\n                    },\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\n  // 支付系统组件定义\n  const paymentComponents = {\n    schemas: {\n      Payment: {\n        type: \"object\" as const,\n        required: [\"id\", \"amount\", \"currency\", \"status\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"支付 ID\" },\n          amount: { type: \"number\" as const, description: \"支付金额\" },\n          currency: { type: \"string\" as const, description: \"货币代码\" },\n          status: {\n            type: \"string\" as const,\n            enum: [\"pending\", \"completed\", \"failed\", \"refunded\"],\n            description: \"支付状态\",\n          },\n          method: {\n            type: \"string\" as const,\n            enum: [\"credit_card\", \"paypal\", \"bank_transfer\"],\n            description: \"支付方式\",\n          },\n          createdAt: {\n            type: \"string\" as const,\n            format: \"date-time\" as const,\n            description: \"创建时间\",\n          },\n        },\n      },\n      PaymentMethod: {\n        type: \"object\" as const,\n        properties: {\n          type: { type: \"string\" as const, description: \"支付方式类型\" },\n          cardLast4: { type: \"string\" as const, description: \"卡号后四位\" },\n          expiryMonth: { type: \"integer\" as const, description: \"过期月份\" },\n          expiryYear: { type: \"integer\" as const, description: \"过期年份\" },\n        },\n      },\n    },\n    securitySchemes: {\n      PaymentAuth: {\n        type: \"oauth2\" as const,\n        flows: {\n          authorizationCode: {\n            authorizationUrl: \"https://payment.example.com/oauth/authorize\",\n            tokenUrl: \"https://payment.example.com/oauth/token\",\n            scopes: {\n              \"payment:read\": \"读取支付信息\",\n              \"payment:write\": \"创建和修改支付\",\n              \"refund:create\": \"创建退款\",\n            },\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">电商 API 组件折叠展示</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          电商平台 API 的完整组件定义，包含产品、订单和认证相关的数据模型\n        </p>\n        <AccordionComponentsSection components={ecommerceComponents} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户管理 API 组件折叠展示</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          用户管理系统的组件定义，包含用户信息、资料和响应模型\n        </p>\n        <AccordionComponentsSection components={userManagementComponents} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">支付系统 API 组件折叠展示</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支付处理系统的组件定义，包含支付信息、方式和安全认证\n        </p>\n        <AccordionComponentsSection components={paymentComponents} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/accordion-components-section-demo.tsx"
    }
  ]
}