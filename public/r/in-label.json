{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "in-label",
  "type": "registry:ui",
  "dependencies": [
    "react"
  ],
  "files": [
    {
      "path": "registry/default/ui/in-label.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport type { ParameterLocation } from \"@/types/project\";\n\nimport React from \"react\";\n\ninterface InLabelProps {\n  type: ParameterLocation;\n  className?: string;\n}\n\nconst getColorForType = (type: ParameterLocation): string => {\n  switch (type) {\n    case \"query\":\n      return \"bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-300\";\n    case \"path\":\n      return \"bg-green-100 dark:bg-green-900/50 text-green-800 dark:text-green-300\";\n    case \"header\":\n      return \"bg-purple-100 dark:bg-purple-900/50 text-purple-800 dark:text-purple-300\";\n    case \"cookie\":\n      return \"bg-yellow-100 dark:bg-yellow-900/50 text-yellow-800 dark:text-yellow-300\";\n    default:\n      return \"bg-neutral-100 dark:bg-neutral-800 text-neutral-800 dark:text-neutral-300\";\n  }\n};\n\nconst InLabel = React.forwardRef<HTMLSpanElement, InLabelProps>(\n  ({ type, className }, ref) => {\n    const colorClass = getColorForType(type);\n\n    return (\n      <span\n        ref={ref}\n        className={cn(\n          \"px-2 py-0.5 rounded text-xs font-medium\",\n          colorClass,\n          className,\n        )}\n      >\n        in: {type}\n      </span>\n    );\n  },\n);\n\nInLabel.displayName = \"InLabel\";\n\nexport { InLabel, type InLabelProps };\n",
      "type": "registry:ui",
      "target": "components/ui/in-label.tsx"
    }
  ]
}