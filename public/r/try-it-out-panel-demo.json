{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "try-it-out-panel-demo",
  "type": "registry:example",
  "dependencies": [
    "openapi-types"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/try-it-out-panel"
  ],
  "files": [
    {
      "path": "registry/example/try-it-out-panel-demo.tsx",
      "content": "import { TryItOutPanel } from \"@/registry/pivot/try-it-out-panel\";\nimport type { ParameterLocation } from \"@/types/project\";\nimport type { OpenAPIV3 } from \"openapi-types\";\n\nexport default function TryItOutPanelDemo() {\n  const createUserOperation: OpenAPIV3.OperationObject = {\n    operationId: \"createUser\",\n    summary: \"创建新用户\",\n    description: \"在系统中创建一个新的用户账户。需要提供用户的基本信息。\",\n    parameters: [\n      {\n        name: \"X-API-Key\",\n        in: \"header\" as ParameterLocation,\n        required: true,\n        description: \"API 访问密钥\",\n        schema: {\n          type: \"string\",\n          pattern: \"^[a-zA-Z0-9]{32}$\"\n        }\n      },\n      {\n        name: \"X-Request-ID\",\n        in: \"header\" as ParameterLocation,\n        required: false,\n        description: \"请求追踪 ID\",\n        schema: {\n          type: \"string\",\n          format: \"uuid\"\n        }\n      }\n    ],\n    requestBody: {\n      required: true,\n      description: \"用户创建信息\",\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\",\n            required: [\"email\", \"name\"],\n            properties: {\n              email: {\n                type: \"string\",\n                format: \"email\",\n                description: \"用户邮箱地址\"\n              },\n              name: {\n                type: \"string\",\n                minLength: 1,\n                maxLength: 100,\n                description: \"用户姓名\"\n              },\n              age: {\n                type: \"integer\",\n                minimum: 0,\n                maximum: 150,\n                description: \"用户年龄\"\n              },\n              phone: {\n                type: \"string\",\n                pattern: \"^\\\\+?[1-9]\\\\d{1,14}$\",\n                description: \"手机号码\"\n              },\n              preferences: {\n                type: \"object\",\n                description: \"用户偏好设置\",\n                properties: {\n                  theme: {\n                    type: \"string\",\n                    enum: [\"light\", \"dark\", \"auto\"],\n                    default: \"auto\",\n                    description: \"界面主题\"\n                  },\n                  language: {\n                    type: \"string\",\n                    enum: [\"zh-CN\", \"en-US\", \"ja-JP\"],\n                    default: \"zh-CN\",\n                    description: \"界面语言\"\n                  },\n                  notifications: {\n                    type: \"boolean\",\n                    default: true,\n                    description: \"是否接收通知\"\n                  }\n                }\n              }\n            }\n          },\n          example: {\n            email: \"john.doe@example.com\",\n            name: \"John Doe\",\n            age: 28,\n            phone: \"+1-555-123-4567\",\n            preferences: {\n              theme: \"dark\",\n              language: \"en-US\",\n              notifications: true\n            }\n          }\n        }\n      }\n    },\n    responses: {\n      \"201\": {\n        description: \"用户创建成功\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                id: {\n                  type: \"string\",\n                  format: \"uuid\"\n                },\n                email: {\n                  type: \"string\",\n                  format: \"email\"\n                },\n                name: {\n                  type: \"string\"\n                },\n                createdAt: {\n                  type: \"string\",\n                  format: \"date-time\"\n                },\n                status: {\n                  type: \"string\",\n                  enum: [\"active\", \"pending\"]\n                }\n              }\n            }\n          }\n        }\n      },\n      \"400\": {\n        description: \"请求参数错误\"\n      },\n      \"409\": {\n        description: \"邮箱已存在\"\n      }\n    },\n    security: [\n      {\n        apiKey: []\n      }\n    ]\n  };\n\n  const getUserOperation: OpenAPIV3.OperationObject = {\n    operationId: \"getUser\",\n    summary: \"获取用户信息\",\n    description: \"根据用户 ID 获取用户的详细信息\",\n    parameters: [\n      {\n        name: \"userId\",\n        in: \"path\" as ParameterLocation,\n        required: true,\n        description: \"用户 ID\",\n        schema: {\n          type: \"string\",\n          format: \"uuid\"\n        }\n      },\n      {\n        name: \"include\",\n        in: \"query\" as ParameterLocation,\n        required: false,\n        description: \"包含的额外信息\",\n        schema: {\n          type: \"array\",\n          items: {\n            type: \"string\",\n            enum: [\"profile\", \"preferences\", \"permissions\"]\n          }\n        }\n      },\n      {\n        name: \"X-API-Key\",\n        in: \"header\" as ParameterLocation,\n        required: true,\n        description: \"API 访问密钥\",\n        schema: {\n          type: \"string\"\n        }\n      }\n    ],\n    responses: {\n      \"200\": {\n        description: \"成功获取用户信息\"\n      },\n      \"404\": {\n        description: \"用户不存在\"\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">POST 请求测试</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          测试创建用户的 API 接口\n        </p>\n        <TryItOutPanel\n          operation={createUserOperation}\n          method=\"POST\"\n          path=\"/api/v1/users\"\n          baseUrl=\"https://api.example.com\"\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">GET 请求测试</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          测试获取用户信息的 API 接口\n        </p>\n        <TryItOutPanel\n          operation={getUserOperation}\n          method=\"GET\"\n          path=\"/api/v1/users/{userId}\"\n          baseUrl=\"https://api.example.com\"\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/try-it-out-panel-demo.tsx"
    }
  ]
}