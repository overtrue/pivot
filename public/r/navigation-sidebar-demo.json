{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navigation-sidebar-demo",
  "type": "registry:example",
  "dependencies": [
    "openapi-types"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/navigation-sidebar"
  ],
  "files": [
    {
      "path": "registry/example/navigation-sidebar-demo.tsx",
      "content": "\"use client\";\n\nimport { NavigationSidebar } from \"@/registry/pivot/navigation-sidebar\";\nimport type { ParameterLocation } from \"@/types/project\";\nimport type { OpenAPIV3 } from 'openapi-types';\n\nexport default function NavigationSidebarDemo() {\n  const mockOpenApi: OpenAPIV3.Document = {\n    openapi: \"3.0.0\",\n    info: {\n      title: \"示例 API\",\n      version: \"1.0.0\",\n      description: \"这是一个示例 API 文档\"\n    },\n    paths: {\n      \"/users\": {\n        get: {\n          operationId: \"getUsers\",\n          summary: \"获取用户列表\",\n          description: \"获取所有用户的列表\",\n          tags: [\"用户管理\"],\n          responses: {\n            \"200\": {\n              description: \"成功返回用户列表\"\n            }\n          }\n        },\n        post: {\n          operationId: \"createUser\",\n          summary: \"创建用户\",\n          description: \"创建一个新用户\",\n          tags: [\"用户管理\"],\n          responses: {\n            \"201\": {\n              description: \"用户创建成功\"\n            }\n          }\n        }\n      },\n      \"/users/{id}\": {\n        get: {\n          operationId: \"getUserById\",\n          summary: \"获取用户详情\",\n          description: \"根据 ID 获取用户详细信息\",\n          tags: [\"用户管理\"],\n          parameters: [\n            {\n              name: \"id\",\n              in: \"path\" as ParameterLocation,\n              required: true,\n              schema: { type: \"string\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType }\n            }\n          ],\n          responses: {\n            \"200\": {\n              description: \"成功返回用户详情\"\n            }\n          }\n        },\n        put: {\n          operationId: \"updateUser\",\n          summary: \"更新用户\",\n          description: \"更新用户信息\",\n          tags: [\"用户管理\"],\n          responses: {\n            \"200\": {\n              description: \"用户更新成功\"\n            }\n          }\n        },\n        delete: {\n          operationId: \"deleteUser\",\n          summary: \"删除用户\",\n          description: \"删除指定用户\",\n          tags: [\"用户管理\"],\n          responses: {\n            \"204\": {\n              description: \"用户删除成功\"\n            }\n          }\n        }\n      },\n      \"/orders\": {\n        get: {\n          operationId: \"getOrders\",\n          summary: \"获取订单列表\",\n          description: \"获取所有订单\",\n          tags: [\"订单管理\"],\n          responses: {\n            \"200\": {\n              description: \"成功返回订单列表\"\n            }\n          }\n        },\n        post: {\n          operationId: \"createOrder\",\n          summary: \"创建订单\",\n          description: \"创建新订单\",\n          tags: [\"订单管理\"],\n          responses: {\n            \"201\": {\n              description: \"订单创建成功\"\n            }\n          }\n        }\n      }\n    },\n    tags: [\n      {\n        name: \"用户管理\",\n        description: \"用户相关的 API 操作\"\n      },\n      {\n        name: \"订单管理\",\n        description: \"订单相关的 API 操作\"\n      }\n    ],\n    components: {\n      schemas: {\n        User: {\n          type: \"object\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType,\n          properties: {\n            id: { type: \"string\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType },\n            name: { type: \"string\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType },\n            email: { type: \"string\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType }\n          }\n        },\n        Order: {\n          type: \"object\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType,\n          properties: {\n            id: { type: \"string\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType },\n            userId: { type: \"string\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType },\n            amount: { type: \"number\" as const as OpenAPIV3.NonArraySchemaObjectType | OpenAPIV3.ArraySchemaObjectType }\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">API 导航侧边栏</h4>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          用于导航的侧边栏组件。\n        </p>\n        <div className=\"border rounded-lg h-[500px] overflow-hidden bg-background\">\n          <NavigationSidebar\n            openapi={mockOpenApi}\n            activePath=\"/users\"\n            activeMethod=\"get\"\n            onSelectOperation={(path, method, operation) => {\n              console.log(\"选择操作:\", { path, method, operation });\n            }}\n            onSelectSchema={(schemaName) => {\n              console.log(\"选择 Schema:\", schemaName);\n            }}\n            className=\"w-full h-full border-0\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/navigation-sidebar-demo.tsx"
    }
  ]
}