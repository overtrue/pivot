{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "media-type-selector",
  "type": "registry:ui",
  "dependencies": [
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/i18n"
  ],
  "files": [
    {
      "path": "registry/pivot/media-type-selector.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { useI18n } from \"@/registry/lib/i18n\";\nimport React from \"react\";\n\ninterface MediaTypeSelectorProps {\n  mediaTypes?: string[];\n  activeMediaType: string | null;\n  onSelectMediaType: (mediaType: string) => void;\n  className?: string;\n}\n\nconst MediaTypeSelector = React.forwardRef<\n  HTMLDivElement,\n  MediaTypeSelectorProps\n>(({ mediaTypes, activeMediaType, onSelectMediaType, className }, ref) => {\n  const { t } = useI18n();\n\n  if (!mediaTypes || mediaTypes.length <= 1) {\n    return null; // Don't render tabs if only one or zero media types\n  }\n\n  const handleClick = (e: React.MouseEvent, mediaType: string) => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(t('Switching media type to: %s').replace('%s', mediaType));\n    onSelectMediaType(mediaType);\n  };\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\"mb-2 border-b dark:border-neutral-700\", className)}\n    >\n      <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center z-10\">\n        {mediaTypes.map((mediaType) => (\n          <li key={mediaType} className=\"mr-2\">\n            <button\n              onClick={(e) => handleClick(e, mediaType)}\n              className={cn(\n                \"inline-block p-2 border-b-2 rounded-t-lg\",\n                activeMediaType === mediaType\n                  ? \"text-blue-600 dark:text-blue-400 border-blue-600 dark:border-blue-400\"\n                  : \"border-transparent hover:text-neutral-600 dark:hover:text-neutral-300 hover:border-neutral-300 dark:hover:border-neutral-600\",\n              )}\n              type=\"button\"\n            >\n              {mediaType}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n\nMediaTypeSelector.displayName = \"MediaTypeSelector\";\n\nexport { MediaTypeSelector };\n",
      "type": "registry:ui",
      "target": "components/pivot/media-type-selector.tsx"
    }
  ]
}