{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "theme-toggle",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "react"
  ],
  "files": [
    {
      "path": "registry/default/ui/theme-toggle.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Moon, Sun } from \"lucide-react\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface ThemeToggleProps {\n  className?: string;\n  onThemeChange?: (theme: \"light\" | \"dark\") => void;\n}\n\nconst ThemeToggle = React.forwardRef<HTMLButtonElement, ThemeToggleProps>(\n  ({ className, onThemeChange }, ref) => {\n    const [theme, setTheme] = useState<\"light\" | \"dark\">(\"light\");\n\n    // 初始化主题\n    useEffect(() => {\n      const savedTheme = localStorage.getItem(\"theme\") as\n        | \"light\"\n        | \"dark\"\n        | null;\n      const prefersDark = window.matchMedia(\n        \"(prefers-color-scheme: dark)\",\n      ).matches;\n\n      const initialTheme = savedTheme || (prefersDark ? \"dark\" : \"light\");\n      setTheme(initialTheme);\n      document.documentElement.classList.toggle(\n        \"dark\",\n        initialTheme === \"dark\",\n      );\n    }, []);\n\n    const toggleTheme = () => {\n      const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n      setTheme(newTheme);\n      localStorage.setItem(\"theme\", newTheme);\n      document.documentElement.classList.toggle(\"dark\", newTheme === \"dark\");\n      onThemeChange?.(newTheme);\n    };\n\n    return (\n      <button\n        ref={ref}\n        onClick={toggleTheme}\n        className={cn(\n          \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors\",\n          \"hover:bg-neutral-100 hover:text-neutral-900 dark:hover:bg-neutral-800 dark:hover:text-neutral-100\",\n          \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-neutral-950 dark:focus-visible:ring-neutral-300\",\n          \"disabled:pointer-events-none disabled:opacity-50\",\n          \"h-9 w-9\",\n          className,\n        )}\n        aria-label=\"Toggle theme\"\n      >\n        <Sun className=\"size-[1.2rem] text-neutral-800 dark:hidden dark:text-neutral-200\" />\n        <Moon className=\"hidden size-[1.2rem] text-neutral-800 dark:block dark:text-neutral-200\" />\n      </button>\n    );\n  },\n);\n\nThemeToggle.displayName = \"ThemeToggle\";\n\nexport { ThemeToggle };\n",
      "type": "registry:ui",
      "target": "components/pivot/theme-toggle.tsx"
    }
  ]
}