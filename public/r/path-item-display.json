{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "path-item-display",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/description-display",
    "https://pivotkit.vercel.app/r/operation-box"
  ],
  "files": [
    {
      "path": "registry/pivot/path-item-display.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport type { OpenAPIV3 } from 'openapi-types';\nimport React from \"react\";\nimport { DescriptionDisplay } from \"@/registry/pivot/description-display\";\nimport { OperationBox } from \"@/registry/pivot/operation-box\";\n\n// Import types from the centralized types file\n\ninterface PathItemDisplayProps {\n  path: string;\n  pathItem?: OpenAPIV3.PathItemObject;\n  components?: OpenAPIV3.ComponentsObject;\n  className?: string;\n}\n\nconst PathItemDisplay = React.forwardRef<HTMLDivElement, PathItemDisplayProps>(\n  ({ path, pathItem, components, className }, ref) => {\n    if (!pathItem) {\n      return (\n        <div ref={ref} className={cn(\"space-y-4\", className)}>\n          <h2 className=\"text-xl font-semibold text-neutral-900 dark:text-neutral-100 font-mono\">\n            {path}\n          </h2>\n          <div className=\"text-neutral-500 dark:text-neutral-400 text-sm italic\">\n            No path item data available\n          </div>\n        </div>\n      );\n    }\n\n    const operations = [\n      { method: \"get\", operation: pathItem.get },\n      { method: \"put\", operation: pathItem.put },\n      { method: \"post\", operation: pathItem.post },\n      { method: \"delete\", operation: pathItem.delete },\n      { method: \"options\", operation: pathItem.options },\n      { method: \"head\", operation: pathItem.head },\n      { method: \"patch\", operation: pathItem.patch },\n      { method: \"trace\", operation: pathItem.trace },\n    ].filter(({ operation }) => operation !== undefined);\n\n    return (\n      <div ref={ref} className={cn(\"space-y-4\", className)}>\n        <h2 className=\"text-xl font-semibold text-neutral-900 dark:text-neutral-100 font-mono\">\n          {path}\n        </h2>\n        {pathItem.description && (\n          <DescriptionDisplay description={pathItem.description} />\n        )}\n\n        <div className=\"space-y-6\">\n          {operations.map(({ method, operation }) => (\n            <OperationBox\n              key={method}\n              path={path}\n              method={method.toUpperCase()}\n              operation={operation!}\n              components={components}\n            />\n          ))}\n        </div>\n\n        {operations.length === 0 && (\n          <div className=\"text-neutral-500 dark:text-neutral-400 text-sm italic\">\n            No operations defined for this path\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nPathItemDisplay.displayName = \"PathItemDisplay\";\n\nexport {\n  PathItemDisplay,\n  type PathItemDisplayProps\n};\n\n",
      "type": "registry:ui"
    }
  ]
}