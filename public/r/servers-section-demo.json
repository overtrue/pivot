{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "servers-section-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/server",
    "https://pivotkit.vercel.app/r/servers-section"
  ],
  "files": [
    {
      "path": "registry/example/servers-section-demo.tsx",
      "content": "import { type ServerObject } from \"@/registry/pivot/server\";\nimport { ServersSection } from \"@/registry/pivot/servers-section\";\n\nexport default function ServersSectionDemo() {\n  // 生产环境服务器配置\n  const productionServers = [\n    {\n      url: \"https://api.example.com/v1\",\n      description: \"生产环境 API 服务器\"\n    },\n    {\n      url: \"https://api-eu.example.com/v1\",\n      description: \"欧洲区域 API 服务器\"\n    },\n    {\n      url: \"https://api-asia.example.com/v1\",\n      description: \"亚洲区域 API 服务器\"\n    }\n  ];\n\n  // 开发环境服务器配置\n  const developmentServers = [\n    {\n      url: \"https://dev-api.example.com/v1\",\n      description: \"开发环境 API 服务器\"\n    },\n    {\n      url: \"https://staging-api.example.com/v1\",\n      description: \"预发布环境 API 服务器\"\n    },\n    {\n      url: \"http://localhost:3000/api/v1\",\n      description: \"本地开发服务器\"\n    }\n  ];\n\n  // 带变量的服务器配置\n  const variableServers: ServerObject[] = [\n    {\n      url: \"https://{environment}.example.com/{version}\",\n      description: \"可配置环境的 API 服务器\",\n      variables: {\n        environment: {\n          default: \"api\",\n          enum: [\"api\", \"dev-api\", \"staging-api\"],\n          description: \"API 环境\"\n        },\n        version: {\n          default: \"v1\",\n          enum: [\"v1\", \"v2\", \"beta\"],\n          description: \"API 版本\"\n        }\n      }\n    },\n    {\n      url: \"https://{region}.api.example.com/v1\",\n      description: \"多区域 API 服务器\",\n      variables: {\n        region: {\n          default: \"us\",\n          enum: [\"us\", \"eu\", \"asia\"],\n          description: \"服务器区域\"\n        }\n      }\n    }\n  ];\n\n  // 不同协议的服务器配置\n  const protocolServers = [\n    {\n      url: \"https://api.example.com/v1\",\n      description: \"HTTPS REST API 服务器\"\n    },\n    {\n      url: \"wss://ws.example.com/v1\",\n      description: \"WebSocket 服务器\"\n    },\n    {\n      url: \"grpc://grpc.example.com:443\",\n      description: \"gRPC 服务器\"\n    },\n    {\n      url: \"mqtt://mqtt.example.com:1883\",\n      description: \"MQTT 消息服务器\"\n    }\n  ];\n\n  // 微服务架构服务器配置\n  const microserviceServers = [\n    {\n      url: \"https://user-service.example.com/v1\",\n      description: \"用户管理服务\"\n    },\n    {\n      url: \"https://order-service.example.com/v1\",\n      description: \"订单管理服务\"\n    },\n    {\n      url: \"https://payment-service.example.com/v1\",\n      description: \"支付处理服务\"\n    },\n    {\n      url: \"https://notification-service.example.com/v1\",\n      description: \"通知服务\"\n    },\n    {\n      url: \"https://analytics-service.example.com/v1\",\n      description: \"数据分析服务\"\n    }\n  ];\n\n  // 负载均衡服务器配置\n  const loadBalancedServers = [\n    {\n      url: \"https://api-lb.example.com/v1\",\n      description: \"主负载均衡器\"\n    },\n    {\n      url: \"https://api-backup.example.com/v1\",\n      description: \"备用负载均衡器\"\n    },\n    {\n      url: \"https://api-1.example.com/v1\",\n      description: \"API 服务器 1\"\n    },\n    {\n      url: \"https://api-2.example.com/v1\",\n      description: \"API 服务器 2\"\n    },\n    {\n      url: \"https://api-3.example.com/v1\",\n      description: \"API 服务器 3\"\n    }\n  ];\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">生产环境服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          多区域部署的生产环境 API 服务器\n        </p>\n        <ServersSection servers={productionServers} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">开发环境服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          用于开发和测试的服务器环境\n        </p>\n        <ServersSection servers={developmentServers} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">可配置服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          使用变量支持多环境和多版本的服务器配置\n        </p>\n        <ServersSection servers={variableServers} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">多协议服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支持不同通信协议的服务器配置\n        </p>\n        <ServersSection servers={protocolServers} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">微服务架构</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          按功能拆分的微服务 API 端点\n        </p>\n        <ServersSection servers={microserviceServers} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">负载均衡配置</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          包含主备和多实例的负载均衡服务器配置\n        </p>\n        <ServersSection servers={loadBalancedServers} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/servers-section-demo.tsx"
    }
  ]
}