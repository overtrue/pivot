{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "security-section-demo",
  "type": "registry:example",
  "dependencies": [
    "openapi-types"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/security-section"
  ],
  "files": [
    {
      "path": "registry/example/security-section-demo.tsx",
      "content": "import type { OpenAPIV3 } from 'openapi-types';\nimport { SecuritySection } from \"@/registry/pivot/security-section\";\n\nexport default function SecuritySectionDemo() {\n  // API 密钥认证示例\n  const apiKeyOnlySecurity = [\n    {\n      \"ApiKeyAuth\": []\n    }\n  ];\n\n  // Bearer Token 认证示例\n  const bearerTokenSecurity = [\n    {\n      \"BearerAuth\": []\n    }\n  ];\n\n  // OAuth2 认证示例\n  const oauth2Security = [\n    {\n      \"OAuth2\": [\"read\", \"write\"]\n    }\n  ];\n\n  // 多重认证示例（API Key + Bearer Token）\n  const multiAuthSecurity = [\n    {\n      \"ApiKeyAuth\": [],\n      \"BearerAuth\": []\n    }\n  ];\n\n  // 可选认证示例（API Key 或 OAuth2）\n  const optionalAuthSecurity: OpenAPIV3.SecurityRequirementObject[] = [\n    {\n      \"ApiKeyAuth\": []\n    },\n    {\n      \"OAuth2\": [\"read\", \"write\", \"admin\"]\n    }\n  ];\n\n  // 完整的安全方案定义\n  const securitySchemes = {\n    \"ApiKeyAuth\": {\n      type: \"apiKey\" as const,\n      description: \"API 密钥认证，通过 X-API-Key 请求头传递。适用于服务器到服务器的通信。\",\n      name: \"X-API-Key\",\n      in: \"header\" as const\n    },\n    \"BearerAuth\": {\n      type: \"http\" as const,\n      description: \"Bearer Token 认证，使用 JWT 令牌。适用于用户会话认证。\",\n      scheme: \"bearer\",\n      bearerFormat: \"JWT\"\n    },\n    \"OAuth2\": {\n      type: \"oauth2\" as const,\n      description: \"OAuth 2.0 认证，支持授权码流程。适用于第三方应用集成。\",\n      flows: {\n        authorizationCode: {\n          authorizationUrl: \"https://api.example.com/oauth/authorize\",\n          tokenUrl: \"https://api.example.com/oauth/token\",\n          refreshUrl: \"https://api.example.com/oauth/refresh\",\n          scopes: {\n            \"read\": \"读取用户数据和资源\",\n            \"write\": \"创建和修改资源\",\n            \"admin\": \"管理员权限，包含所有操作\",\n            \"profile\": \"访问用户基本信息\",\n            \"email\": \"访问用户邮箱地址\"\n          }\n        },\n        clientCredentials: {\n          tokenUrl: \"https://api.example.com/oauth/token\",\n          scopes: {\n            \"api:read\": \"API 读取权限\",\n            \"api:write\": \"API 写入权限\"\n          }\n        }\n      }\n    },\n    \"BasicAuth\": {\n      type: \"http\" as const,\n      description: \"HTTP 基本认证，使用用户名和密码。仅用于开发和测试环境。\",\n      scheme: \"basic\"\n    },\n    \"CookieAuth\": {\n      type: \"apiKey\" as const,\n      description: \"基于 Cookie 的会话认证，适用于 Web 应用。\",\n      name: \"sessionId\",\n      in: \"cookie\" as const\n    },\n    \"OpenIdConnect\": {\n      type: \"openIdConnect\" as const,\n      description: \"OpenID Connect 认证，基于 OAuth 2.0 的身份认证层。\",\n      openIdConnectUrl: \"https://api.example.com/.well-known/openid-configuration\"\n    }\n  };\n\n  // 基本认证示例\n  const basicAuthSecurity = [\n    {\n      \"BasicAuth\": []\n    }\n  ];\n\n  // Cookie 认证示例\n  const cookieAuthSecurity = [\n    {\n      \"CookieAuth\": []\n    }\n  ];\n\n  // OpenID Connect 认证示例\n  const openIdConnectSecurity = [\n    {\n      \"OpenIdConnect\": []\n    }\n  ];\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">API 密钥认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          适用于服务器到服务器的通信，通过请求头传递 API 密钥\n        </p>\n        <SecuritySection\n          security={apiKeyOnlySecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">Bearer Token 认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          使用 JWT 令牌进行用户会话认证\n        </p>\n        <SecuritySection\n          security={bearerTokenSecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">OAuth 2.0 认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支持多种授权流程和权限范围的 OAuth 2.0 认证\n        </p>\n        <SecuritySection\n          security={oauth2Security}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">多重认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          同时需要 API 密钥和 Bearer Token 的双重认证\n        </p>\n        <SecuritySection\n          security={multiAuthSecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">可选认证方式</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支持多种认证方式，客户端可以选择其中一种\n        </p>\n        <SecuritySection\n          security={optionalAuthSecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">HTTP 基本认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          传统的用户名密码认证方式，适用于开发环境\n        </p>\n        <SecuritySection\n          security={basicAuthSecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">Cookie 会话认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          基于 Cookie 的会话认证，适用于 Web 应用\n        </p>\n        <SecuritySection\n          security={cookieAuthSecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">OpenID Connect 认证</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          基于 OAuth 2.0 的身份认证层，提供用户身份信息\n        </p>\n        <SecuritySection\n          security={openIdConnectSecurity}\n          securitySchemes={securitySchemes}\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/security-section-demo.tsx"
    }
  ]
}