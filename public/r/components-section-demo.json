{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "components-section-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/components-section.json"
  ],
  "files": [
    {
      "path": "registry/default/example/components-section-demo.tsx",
      "content": "import { ComponentsSection } from \"@/registry/default/ui/components-section\";\n\nexport default function ComponentsSectionDemo() {\n  // 用户管理系统组件\n  const userManagementComponents = {\n    schemas: {\n      \"User\": {\n        type: \"object\" as const,\n        required: [\"id\", \"email\", \"name\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"用户唯一标识符\" },\n          email: { type: \"string\" as const, format: \"email\" as const, description: \"用户邮箱地址\" },\n          name: { type: \"string\" as const, description: \"用户姓名\" },\n          avatar: { type: \"string\" as const, format: \"uri\" as const, description: \"用户头像 URL\" },\n          role: {\n            type: \"string\" as const,\n            enum: [\"admin\", \"user\", \"moderator\"],\n            description: \"用户角色\"\n          },\n          createdAt: { type: \"string\" as const, format: \"date-time\" as const, description: \"注册时间\" }\n        }\n      },\n      \"UserProfile\": {\n        type: \"object\" as const,\n        properties: {\n          bio: { type: \"string\" as const, description: \"个人简介\" },\n          phone: { type: \"string\" as const, description: \"电话号码\" },\n          address: { $ref: \"#/components/schemas/Address\" }\n        }\n      },\n      \"Address\": {\n        type: \"object\" as const,\n        properties: {\n          country: { type: \"string\" as const, description: \"国家\" },\n          city: { type: \"string\" as const, description: \"城市\" },\n          street: { type: \"string\" as const, description: \"街道地址\" }\n        }\n      }\n    },\n    responses: {\n      \"UserResponse\": {\n        description: \"用户信息响应\",\n        content: {\n          \"application/json\": {\n            schema: { $ref: \"#/components/schemas/User\" }\n          }\n        }\n      },\n      \"UserListResponse\": {\n        description: \"用户列表响应\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\" as const,\n              properties: {\n                data: {\n                  type: \"array\" as const,\n                  items: { $ref: \"#/components/schemas/User\" }\n                },\n                pagination: { $ref: \"#/components/schemas/Pagination\" }\n              }\n            }\n          }\n        }\n      }\n    },\n    parameters: {\n      \"UserId\": {\n        name: \"userId\",\n        in: \"path\",\n        required: true,\n        schema: { type: \"string\" as const },\n        description: \"用户唯一标识符\"\n      },\n      \"UserFilter\": {\n        name: \"role\",\n        in: \"query\",\n        schema: {\n          type: \"string\" as const,\n          enum: [\"admin\", \"user\", \"moderator\"]\n        },\n        description: \"按角色筛选用户\"\n      }\n    },\n    securitySchemes: {\n      \"BearerAuth\": {\n        type: \"http\" as const,\n        scheme: \"bearer\" as const,\n        bearerFormat: \"JWT\" as const\n      }\n    }\n  };\n\n  // 电商产品系统组件\n  const ecommerceComponents = {\n    schemas: {\n      \"Product\": {\n        type: \"object\" as const,\n        required: [\"id\", \"name\", \"price\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"产品 ID\" },\n          name: { type: \"string\" as const, description: \"产品名称\" },\n          description: { type: \"string\" as const, description: \"产品描述\" },\n          price: { type: \"number\" as const, description: \"产品价格\" },\n          currency: { type: \"string\" as const, description: \"货币代码\" },\n          category: { $ref: \"#/components/schemas/Category\" },\n          images: {\n            type: \"array\" as const,\n            items: { type: \"string\" as const, format: \"uri\" as const },\n            description: \"产品图片列表\"\n          },\n          inStock: { type: \"boolean\" as const, description: \"是否有库存\" }\n        }\n      },\n      \"Category\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"分类 ID\" },\n          name: { type: \"string\" as const, description: \"分类名称\" },\n          parentId: { type: \"string\" as const, description: \"父分类 ID\" }\n        }\n      },\n      \"Order\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"订单 ID\" },\n          customerId: { type: \"string\" as const, description: \"客户 ID\" },\n          items: {\n            type: \"array\" as const,\n            items: { $ref: \"#/components/schemas/OrderItem\" }\n          },\n          totalAmount: { type: \"number\" as const, description: \"订单总金额\" },\n          status: {\n            type: \"string\" as const,\n            enum: [\"pending\", \"confirmed\", \"shipped\", \"delivered\", \"cancelled\"]\n          }\n        }\n      },\n      \"OrderItem\": {\n        type: \"object\" as const,\n        properties: {\n          productId: { type: \"string\" as const, description: \"产品 ID\" },\n          quantity: { type: \"integer\" as const, description: \"购买数量\" },\n          unitPrice: { type: \"number\" as const, description: \"单价\" }\n        }\n      }\n    },\n    responses: {\n      \"ProductResponse\": {\n        description: \"产品详情响应\",\n        content: {\n          \"application/json\": {\n            schema: { $ref: \"#/components/schemas/Product\" }\n          }\n        }\n      },\n      \"OrderResponse\": {\n        description: \"订单详情响应\",\n        content: {\n          \"application/json\": {\n            schema: { $ref: \"#/components/schemas/Order\" }\n          }\n        }\n      }\n    },\n    parameters: {\n      \"ProductId\": {\n        name: \"productId\",\n        in: \"path\",\n        required: true,\n        schema: { type: \"string\" as const },\n        description: \"产品唯一标识符\"\n      },\n      \"CategoryFilter\": {\n        name: \"category\",\n        in: \"query\",\n        schema: { type: \"string\" as const },\n        description: \"按分类筛选产品\"\n      }\n    }\n  };\n\n  // 支付系统组件\n  const paymentComponents = {\n    schemas: {\n      \"Payment\": {\n        type: \"object\" as const,\n        required: [\"id\", \"amount\", \"currency\", \"status\"],\n        properties: {\n          id: { type: \"string\" as const, description: \"支付 ID\" },\n          orderId: { type: \"string\" as const, description: \"订单 ID\" },\n          amount: { type: \"number\" as const, description: \"支付金额\" },\n          currency: { type: \"string\" as const, description: \"货币代码\" },\n          method: {\n            type: \"string\" as const,\n            enum: [\"credit_card\", \"paypal\", \"bank_transfer\", \"alipay\", \"wechat_pay\"]\n          },\n          status: {\n            type: \"string\" as const,\n            enum: [\"pending\", \"processing\", \"completed\", \"failed\", \"refunded\"]\n          },\n          gateway: { type: \"string\" as const, description: \"支付网关\" }\n        }\n      },\n      \"PaymentMethod\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"支付方式 ID\" },\n          type: { type: \"string\" as const, description: \"支付类型\" },\n          cardLast4: { type: \"string\" as const, description: \"卡号后四位\" },\n          isDefault: { type: \"boolean\" as const, description: \"是否为默认支付方式\" }\n        }\n      }\n    },\n    responses: {\n      \"PaymentResponse\": {\n        description: \"支付详情响应\",\n        content: {\n          \"application/json\": {\n            schema: { $ref: \"#/components/schemas/Payment\" }\n          }\n        }\n      }\n    },\n    securitySchemes: {\n      \"PaymentAuth\": {\n        type: \"oauth2\" as const,\n        flows: {\n          authorizationCode: {\n            authorizationUrl: \"https://payment.example.com/oauth/authorize\",\n            tokenUrl: \"https://payment.example.com/oauth/token\",\n            scopes: {\n              \"payment:read\": \"读取支付信息\",\n              \"payment:write\": \"创建和修改支付\"\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // 通知系统组件\n  const notificationComponents = {\n    schemas: {\n      \"Notification\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"通知 ID\" },\n          userId: { type: \"string\" as const, description: \"接收用户 ID\" },\n          title: { type: \"string\" as const, description: \"通知标题\" },\n          message: { type: \"string\" as const, description: \"通知内容\" },\n          type: {\n            type: \"string\" as const,\n            enum: [\"info\", \"warning\", \"error\", \"success\"]\n          },\n          channel: {\n            type: \"string\" as const,\n            enum: [\"email\", \"sms\", \"push\", \"in_app\"]\n          },\n          isRead: { type: \"boolean\" as const, description: \"是否已读\" }\n        }\n      },\n      \"NotificationTemplate\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"模板 ID\" },\n          name: { type: \"string\" as const, description: \"模板名称\" },\n          content: { type: \"string\" as const, description: \"模板内容\" }\n        }\n      }\n    },\n    callbacks: {\n      \"NotificationCallback\": {\n        \"{$request.body#/callbackUrl}\": {\n          post: {\n            requestBody: {\n              content: {\n                \"application/json\": {\n                  schema: { $ref: \"#/components/schemas/Notification\" }\n                }\n              }\n            },\n            responses: {\n              \"200\": {\n                description: \"回调处理成功\"\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // 文件管理系统组件\n  const fileManagementComponents = {\n    schemas: {\n      \"File\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"文件 ID\" },\n          originalName: { type: \"string\" as const, description: \"原始文件名\" },\n          fileName: { type: \"string\" as const, description: \"存储文件名\" },\n          mimeType: { type: \"string\" as const, description: \"文件 MIME 类型\" },\n          size: { type: \"integer\" as const, description: \"文件大小（字节）\" },\n          url: { type: \"string\" as const, format: \"uri\" as const, description: \"文件访问 URL\" },\n          uploadedBy: { type: \"string\" as const, description: \"上传用户 ID\" },\n          uploadedAt: { type: \"string\" as const, format: \"date-time\" as const, description: \"上传时间\" }\n        }\n      },\n      \"UploadSession\": {\n        type: \"object\" as const,\n        properties: {\n          id: { type: \"string\" as const, description: \"上传会话 ID\" },\n          status: {\n            type: \"string\" as const,\n            enum: [\"pending\", \"uploading\", \"completed\", \"failed\"]\n          },\n          progress: { type: \"number\" as const, description: \"上传进度（0-100）\" }\n        }\n      }\n    },\n    requestBodies: {\n      \"FileUpload\": {\n        description: \"文件上传请求\",\n        content: {\n          \"multipart/form-data\": {\n            schema: {\n              type: \"object\" as const,\n              properties: {\n                file: {\n                  type: \"string\" as const,\n                  format: \"binary\",\n                  description: \"要上传的文件\"\n                },\n                description: {\n                  type: \"string\" as const,\n                  description: \"文件描述\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户管理系统组件</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          完整的用户管理系统组件定义，包含用户、资料、地址等数据模型和相关响应\n        </p>\n        <ComponentsSection components={userManagementComponents} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">电商产品系统组件</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          电商平台的产品管理组件，包含产品、分类、订单等完整的业务数据结构\n        </p>\n        <ComponentsSection components={ecommerceComponents} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">支付系统组件</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支付处理系统的组件定义，包含支付信息、支付方式和 OAuth 安全认证\n        </p>\n        <ComponentsSection components={paymentComponents} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">通知系统组件</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          消息通知系统的组件定义，支持多种通知类型、发送渠道和回调机制\n        </p>\n        <ComponentsSection components={notificationComponents} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">文件管理系统组件</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          文件上传和管理系统的组件定义，包含文件信息、上传会话和请求体定义\n        </p>\n        <ComponentsSection components={fileManagementComponents} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/components-section-demo.tsx"
    }
  ]
}
