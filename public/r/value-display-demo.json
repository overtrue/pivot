{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "value-display-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/value-display.json"
  ],
  "files": [
    {
      "path": "registry/default/example/value-display-demo.tsx",
      "content": "import { ValueDisplay } from \"@/registry/default/ui/value-display\";\n\nexport default function ValueDisplayDemo() {\n  const values = [\n    { label: \"字符串\", value: \"Hello World\" },\n    { label: \"数字\", value: 42 },\n    { label: \"布尔值\", value: true },\n    { label: \"数组\", value: [1, 2, 3, \"test\"] },\n    { label: \"对象\", value: { name: \"张三\", age: 25, active: true } },\n    { label: \"空值\", value: null },\n    { label: \"未定义\", value: undefined },\n    {\n      label: \"长字符串\",\n      value: \"这是一个很长的字符串，用来测试组件如何处理长文本内容的显示效果\",\n    },\n  ];\n\n  return (\n    <div className=\"space-y-4 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">不同类型的值</h4>\n        <div className=\"space-y-2\">\n          {values.map((item, index) => (\n            <div key={index} className=\"flex items-start gap-3\">\n              <span className=\"text-sm text-muted-foreground w-16 flex-shrink-0\">\n                {item.label}:\n              </span>\n              <ValueDisplay value={item.value} />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">自定义样式</h4>\n        <div className=\"space-y-2\">\n          <ValueDisplay\n            value=\"自定义背景色\"\n            className=\"bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300\"\n          />\n          <ValueDisplay\n            value=\"自定义边框\"\n            className=\"border border-green-300 bg-green-50 dark:bg-green-900/20\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/value-display-demo.tsx"
    }
  ]
}