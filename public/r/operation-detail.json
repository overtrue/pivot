{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "operation-detail",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "badge",
    "label",
    "https://pivotkit.vercel.app/r/deprecated-badge",
    "https://pivotkit.vercel.app/r/description-display",
    "https://pivotkit.vercel.app/r/external-docs-display",
    "https://pivotkit.vercel.app/r/method-label",
    "https://pivotkit.vercel.app/r/operation-path",
    "https://pivotkit.vercel.app/r/parameters-section",
    "https://pivotkit.vercel.app/r/request-body-section",
    "https://pivotkit.vercel.app/r/responses-section",
    "https://pivotkit.vercel.app/r/security-requirements-section"
  ],
  "files": [
    {
      "path": "registry/pivot/operation-detail.tsx",
      "content": "\"use client\";\n\nimport { Badge } from \"@/components/ui/badge\";\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\nimport { useI18n } from \"@/registry/lib/i18n\";\nimport { DeprecatedBadge } from \"@/registry/pivot/deprecated-badge\";\nimport { DescriptionDisplay } from \"@/registry/pivot/description-display\";\nimport { ExternalDocsDisplay } from \"@/registry/pivot/external-docs-display\";\nimport { MethodLabel } from \"@/registry/pivot/method-label\";\nimport { OperationPath } from \"@/registry/pivot/operation-path\";\nimport { ParametersSection } from \"@/registry/pivot/parameters-section\";\nimport { RequestBodySection } from \"@/registry/pivot/request-body-section\";\nimport { ResponsesSection } from \"@/registry/pivot/responses-section\";\nimport { SecurityRequirementsSection } from \"@/registry/pivot/security-requirements-section\";\nimport type { OpenAPIV3 } from 'openapi-types';\nimport React from \"react\";\n\n// Import types from the centralized types file\n\ninterface OperationDetailProps {\n  operation: OpenAPIV3.OperationObject;\n  path: string;\n  method: string;\n  components?: OpenAPIV3.ComponentsObject;\n  className?: string;\n}\n\nexport const OperationDetail = React.forwardRef<HTMLDivElement, OperationDetailProps>(\n  ({ operation, path, method, components, className }, ref) => {\n    const { t } = useI18n();\n\n    // 确保 method 是有效的 HTTP 方法\n    const normalizedMethod = method.toUpperCase() as \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\" | \"OPTIONS\" | \"HEAD\";\n\n    const parameters = operation.parameters;\n    const requestBody = operation.requestBody;\n    const responses = operation.responses;\n    const security = operation.security;\n    const externalDocs = operation.externalDocs;\n\n    return (\n      <div ref={ref} className={cn(\"space-y-6\", className)}>\n        {/* 操作头部信息 */}\n        <div className=\"space-y-4\">\n          {/* 方法和路径 */}\n          <div className=\"flex items-center gap-3 flex-wrap\">\n            <MethodLabel method={normalizedMethod} />\n            <OperationPath path={path} className=\"text-lg font-mono\" />\n            {operation.deprecated && <DeprecatedBadge />}\n          </div>\n\n          {/* 摘要 */}\n          {operation.summary && (\n            <h1 className=\"text-2xl font-semibold text-foreground\">\n              {operation.summary}\n            </h1>\n          )}\n\n          {/* 描述 */}\n          {operation.description && (\n            <DescriptionDisplay\n              description={operation.description}\n              className=\"text-muted-foreground prose dark:prose-invert max-w-none\"\n            />\n          )}\n\n          {/* 外部文档 */}\n          {externalDocs && (\n            <ExternalDocsDisplay\n              externalDocs={externalDocs}\n              className=\"mt-4\"\n            />\n          )}\n        </div>\n\n        {/* 标签和操作ID */}\n        {(operation.tags || operation.operationId) && (\n          <div className=\"flex flex-wrap gap-4\">\n            {operation.tags && operation.tags.length > 0 && (\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm font-medium\">{t('Tags')}</Label>\n                <div className=\"flex flex-wrap gap-2\">\n                  {operation.tags.map((tag: string) => (\n                    <Badge key={tag} variant=\"secondary\">\n                      {tag}\n                    </Badge>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {operation.operationId && (\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm font-medium\">{t('Operation ID')}</Label>\n                <code className=\"text-sm bg-muted px-2 py-1 rounded font-mono\">\n                  {operation.operationId}\n                </code>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* 参数部分 */}\n        {parameters && parameters.length > 0 && (\n          <ParametersSection\n            parameters={parameters}\n            components={components}\n            expanded={true}\n          />\n        )}\n\n        {/* 请求体部分 */}\n        {requestBody && (\n          <RequestBodySection\n            requestBody={requestBody}\n            components={components}\n          />\n        )}\n\n        {/* 响应部分 */}\n        {responses && (\n          <ResponsesSection\n            responses={responses}\n            components={components}\n          />\n        )}\n\n        {/* 安全要求部分 */}\n        {security && security.length > 0 && (\n          <SecurityRequirementsSection security={security} />\n        )}\n      </div>\n    );\n  }\n);\n\nOperationDetail.displayName = \"OperationDetail\";\n\nexport { type OperationDetailProps };\n",
      "type": "registry:ui",
      "target": "components/pivot/operation-detail.tsx"
    }
  ]
}