{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "response-content-section",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/lib.json",
    "https://pivotkit.vercel.app/r/schema-with-example-viewer.json"
  ],
  "files": [
    {
      "path": "registry/default/ui/response-content-section.tsx",
      "content": "\"use client\";\n\nimport { useI18n } from \"@/registry/default/lib/i18n\";\nimport type { OpenAPIV3 } from \"openapi-types\";\n\nimport { SchemaWithExampleViewer } from \"@/registry/default/ui/schema-with-example-viewer\";\nimport React from \"react\";\n\ninterface ResponseContentSectionProps {\n  content: Record<string, OpenAPIV3.MediaTypeObject>;\n  components?: OpenAPIV3.ComponentsObject;\n  className?: string;\n}\n\nconst ResponseContentSection = React.forwardRef<\n  HTMLDivElement,\n  ResponseContentSectionProps\n>(({ content, components, className = \"\" }, ref) => {\n  const { t } = useI18n();\n\n  // 渲染媒体类型的额外信息（如编码）\n  const renderMediaTypeEncoding = (mediaType: OpenAPIV3.MediaTypeObject) => {\n    if (!mediaType.encoding || Object.keys(mediaType.encoding).length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"mt-4\">\n        <h5 className=\"text-sm font-medium mb-2\">{t(\"Encoding\")}</h5>\n        <div className=\"space-y-2\">\n          {Object.entries(mediaType.encoding).map(\n            ([property, encoding]: [string, OpenAPIV3.EncodingObject]) => (\n              <div\n                key={property}\n                className=\"border rounded p-2 bg-white dark:bg-neutral-800\"\n              >\n                <div className=\"font-mono text-sm mb-1 font-medium\">\n                  {property}\n                </div>\n                <div className=\"grid grid-cols-[max-content_1fr] gap-x-2 gap-y-1 text-xs\">\n                  {encoding.contentType && (\n                    <>\n                      <div className=\"text-neutral-600 dark:text-neutral-400\">\n                        {t(\"Content Type\")}\n                      </div>\n                      <div className=\"font-mono\">{encoding.contentType}</div>\n                    </>\n                  )}\n                  {encoding.style && (\n                    <>\n                      <div className=\"text-neutral-600 dark:text-neutral-400\">\n                        {t(\"Style\")}\n                      </div>\n                      <div className=\"font-mono\">{encoding.style}</div>\n                    </>\n                  )}\n                  {encoding.explode !== undefined && (\n                    <>\n                      <div className=\"text-neutral-600 dark:text-neutral-400\">\n                        {t(\"Explode\")}\n                      </div>\n                      <div className=\"font-mono\">\n                        {encoding.explode.toString()}\n                      </div>\n                    </>\n                  )}\n                  {encoding.allowReserved !== undefined && (\n                    <>\n                      <div className=\"text-neutral-600 dark:text-neutral-400\">\n                        {t(\"Allow Reserved\")}\n                      </div>\n                      <div className=\"font-mono\">\n                        {encoding.allowReserved.toString()}\n                      </div>\n                    </>\n                  )}\n                </div>\n              </div>\n            ),\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div ref={ref} className={className}>\n      <SchemaWithExampleViewer\n        content={content}\n        components={components}\n        contentType=\"mediaTypes\"\n        showTitle={true}\n        renderFooter={renderMediaTypeEncoding}\n      />\n    </div>\n  );\n});\n\nResponseContentSection.displayName = \"ResponseContentSection\";\n\nexport { ResponseContentSection, type ResponseContentSectionProps };\n",
      "type": "registry:ui",
      "target": "components/pivot/response-content-section.tsx"
    }
  ]
}