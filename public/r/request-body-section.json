{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "request-body-section",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/schema-with-example-viewer",
    "https://pivotkit.vercel.app/r/section-title"
  ],
  "files": [
    {
      "path": "registry/pivot/request-body-section.tsx",
      "content": "\"use client\";\n\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { useI18n } from \"@/lib/i18n\";\nimport { cn } from \"@/lib/utils\";\n\nimport React from \"react\";\nimport { SchemaWithExampleViewer } from \"@/registry/pivot/schema-with-example-viewer\";\nimport { SectionTitle } from \"@/registry/pivot/section-title\";\n\ninterface RequestBodySectionProps {\n  requestBody: OpenAPIV3.RequestBodyObject | OpenAPIV3.ReferenceObject;\n  components?: OpenAPIV3.ComponentsObject;\n  spec?: OpenAPIV3.Document; // 可选，如果提供则使用完整的OpenAPI规范\n  className?: string;\n  titleClassName?: string;\n}\n\nconst RequestBodySection = React.forwardRef<HTMLDivElement, RequestBodySectionProps>(\n  ({ requestBody, components, spec, className = \"\", titleClassName }, ref) => {\n    const { t } = useI18n();\n\n    // 简化的解析逻辑，如果没有 useOpenApi hook 可用\n    const resolveRequestBody = (body: OpenAPIV3.RequestBodyObject | OpenAPIV3.ReferenceObject): OpenAPIV3.RequestBodyObject | null => {\n      if (!body) return null;\n\n      // 如果是引用对象，尝试解析\n      if (typeof body === 'object' && '$ref' in body) {\n        // 简化的引用解析\n        return null; // 在实际应用中需要完整的引用解析\n      }\n\n      return body as OpenAPIV3.RequestBodyObject;\n    };\n\n    // 解析引用对象\n    const resolvedBody = resolveRequestBody(requestBody);\n\n    if (!resolvedBody) {\n      return (\n        <div ref={ref} className={cn(\"text-red-500 dark:text-red-400\", className)}>\n          {t('Cannot resolve request body')}\n        </div>\n      );\n    }\n\n    // 获取内容\n    const content = resolvedBody.content;\n    if (!content) {\n      return (\n        <div ref={ref} className={cn(\"text-yellow-500 dark:text-yellow-400\", className)}>\n          {t('Request body has no content defined')}\n        </div>\n      );\n    }\n\n    // 自定义头部渲染函数\n    const renderHeader = () => {\n      return (\n        <>\n          {/* Required indicator */}\n          {resolvedBody.required && (\n            <div className=\"mb-2\">\n              <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200\">\n                {t('Required')}\n              </span>\n            </div>\n          )}\n        </>\n      );\n    };\n\n    return (\n      <div ref={ref} className={className}>\n        <SectionTitle title={t('Request Body')} className={cn('text-lg font-medium my-3', titleClassName)} />\n\n        <SchemaWithExampleViewer\n          content={requestBody}\n          components={components}\n          contentType=\"requestBody\"\n          renderHeader={renderHeader}\n        />\n      </div>\n    );\n  }\n);\n\nRequestBodySection.displayName = \"RequestBodySection\";\n\nexport { RequestBodySection, type RequestBodySectionProps };\n\n",
      "type": "registry:ui",
      "target": "components/pivot/request-body-section.tsx"
    }
  ]
}