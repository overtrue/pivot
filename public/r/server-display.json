{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "server-display",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/lib.json",
    "https://pivotkit.vercel.app/r/description-display.json"
  ],
  "files": [
    {
      "path": "registry/default/ui/server-display.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { useI18n } from \"@/registry/default/lib/i18n\";\nimport { DescriptionDisplay } from \"@/registry/default/ui/description-display\";\nimport type { OpenAPIV3 } from \"openapi-types\";\nimport React from \"react\";\n\n// 类型别名，供其他组件使用\nexport type ServerObject = OpenAPIV3.ServerObject;\n\ninterface ServerDisplayProps {\n  server: OpenAPIV3.ServerObject;\n  className?: string;\n}\n\nconst ServerDisplay = React.forwardRef<HTMLDivElement, ServerDisplayProps>(\n  ({ server, className }, ref) => {\n    const { t } = useI18n();\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"bg-neutral-50 dark:bg-neutral-800 p-2 rounded\",\n          className,\n        )}\n      >\n        <div className=\"text-xs font-semibold mb-1 font-mono break-all dark:text-neutral-200\">\n          {server.url}\n        </div>\n        {server.description && (\n          <DescriptionDisplay\n            description={server.description}\n            className=\"text-xs mb-2\"\n          />\n        )}\n\n        {server.variables && Object.keys(server.variables).length > 0 && (\n          <div className=\"mt-2\">\n            <h5 className=\"text-xs font-medium mb-1\">{t(\"Variables\")}</h5>\n            <div className=\"space-y-2\">\n              {Object.entries(server.variables).map(([varName, variable]) => (\n                <div\n                  key={varName}\n                  className=\"border border-neutral-200 dark:border-neutral-700 p-1.5 rounded bg-white dark:bg-neutral-900 text-xs dark:text-neutral-200\"\n                >\n                  <div className=\"flex items-center justify-between mb-0.5\">\n                    <span className=\"font-mono font-medium\">{varName}</span>\n                    <span className=\"bg-neutral-200 dark:bg-neutral-700 px-1.5 py-0.5 rounded text-neutral-700 dark:text-neutral-300\">\n                      {t(\"Default:\")} {variable.default}\n                    </span>\n                  </div>\n                  {variable.description && (\n                    <DescriptionDisplay\n                      description={variable.description}\n                      className=\"text-xs mt-1 text-neutral-600 dark:text-neutral-400\"\n                    />\n                  )}\n                  {variable.enum && variable.enum.length > 0 && (\n                    <div className=\"mt-1\">\n                      <span className=\"font-medium\">{t(\"Enum:\")}</span>\n                      <div className=\"flex flex-wrap gap-1 mt-0.5\">\n                        {variable.enum.map((value) => (\n                          <span\n                            key={value}\n                            className=\"bg-neutral-100 dark:bg-neutral-800 px-1.5 py-0.5 rounded font-mono dark:text-neutral-300\"\n                          >\n                            {value}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nServerDisplay.displayName = \"ServerDisplay\";\n\nexport { ServerDisplay, type ServerDisplayProps };\n",
      "type": "registry:ui",
      "target": "components/pivot/server-display.tsx"
    }
  ]
}