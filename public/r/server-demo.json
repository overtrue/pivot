{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "server-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/server"
  ],
  "files": [
    {
      "path": "registry/example/server-demo.tsx",
      "content": "import { Server } from \"@/registry/pivot/server\";\n\nexport default function ServerDemo() {\n  // 生产环境服务器\n  const productionServer = {\n    url: \"https://api.example.com/v1\",\n    description: \"生产环境 API 服务器，提供稳定可靠的服务\"\n  };\n\n  // 预发布环境服务器\n  const stagingServer = {\n    url: \"https://staging-api.example.com/v1\",\n    description: \"预发布环境，用于最终测试和验证\"\n  };\n\n  // 开发环境服务器\n  const developmentServer = {\n    url: \"https://dev-api.example.com/v1\",\n    description: \"开发环境，用于功能开发和调试\"\n  };\n\n  // 本地开发服务器\n  const localServer = {\n    url: \"http://localhost:3000/api/v1\",\n    description: \"本地开发服务器，用于本地开发和测试\"\n  };\n\n  // 带变量的服务器配置\n  const variableServer = {\n    url: \"https://{environment}.api.example.com/{version}\",\n    description: \"可配置的服务器环境，支持多环境部署\",\n    variables: {\n      environment: {\n        default: \"prod\",\n        enum: [\"prod\", \"staging\", \"dev\"],\n        description: \"部署环境\"\n      },\n      version: {\n        default: \"v1\",\n        enum: [\"v1\", \"v2\", \"beta\"],\n        description: \"API 版本\"\n      }\n    }\n  };\n\n  // 区域化服务器\n  const regionalServer = {\n    url: \"https://{region}.api.example.com/v1\",\n    description: \"区域化 API 服务器，提供就近访问服务\",\n    variables: {\n      region: {\n        default: \"us-east\",\n        enum: [\"us-east\", \"us-west\", \"eu-west\", \"ap-southeast\"],\n        description: \"服务器区域\"\n      }\n    }\n  };\n\n  // 微服务架构服务器\n  const microserviceServer = {\n    url: \"https://gateway.example.com/api/{service}/v1\",\n    description: \"微服务网关，统一管理多个微服务的访问入口\",\n    variables: {\n      service: {\n        default: \"user\",\n        enum: [\"user\", \"product\", \"order\", \"payment\", \"notification\"],\n        description: \"微服务名称\"\n      }\n    }\n  };\n\n  // CDN 加速服务器\n  const cdnServer = {\n    url: \"https://cdn.example.com/api/v1\",\n    description: \"CDN 加速的 API 服务器，提供全球加速访问\"\n  };\n\n  // WebSocket 服务器\n  const websocketServer = {\n    url: \"wss://ws.example.com/v1\",\n    description: \"WebSocket 实时通信服务器，支持实时数据推送\"\n  };\n\n  // 负载均衡服务器\n  const loadBalancedServer = {\n    url: \"https://lb.api.example.com/v1\",\n    description: \"负载均衡服务器，自动分发请求到多个后端实例\"\n  };\n\n  // 测试沙盒服务器\n  const sandboxServer = {\n    url: \"https://sandbox.api.example.com/v1\",\n    description: \"测试沙盒环境，提供安全的测试数据和功能\"\n  };\n\n  // 企业私有云服务器\n  const privateCloudServer = {\n    url: \"https://{tenant}.private.example.com/api/v1\",\n    description: \"企业私有云部署，为企业客户提供独立的服务实例\",\n    variables: {\n      tenant: {\n        default: \"demo\",\n        description: \"租户标识符\"\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">生产环境服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          正式生产环境的 API 服务器配置\n        </p>\n        <Server server={productionServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">预发布环境服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          用于最终测试和验证的预发布环境\n        </p>\n        <Server server={stagingServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">开发环境服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          开发团队使用的开发环境配置\n        </p>\n        <Server server={developmentServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">本地开发服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          本地开发和调试使用的服务器配置\n        </p>\n        <Server server={localServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">可配置环境服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支持多环境和版本切换的灵活服务器配置\n        </p>\n        <Server server={variableServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">区域化服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支持多区域部署的全球化服务器配置\n        </p>\n        <Server server={regionalServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">微服务架构服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          微服务网关统一入口的服务器配置\n        </p>\n        <Server server={microserviceServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">CDN 加速服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          使用 CDN 加速的全球分发服务器\n        </p>\n        <Server server={cdnServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">WebSocket 服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          实时通信和数据推送的 WebSocket 服务器\n        </p>\n        <Server server={websocketServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">负载均衡服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          高可用性的负载均衡服务器配置\n        </p>\n        <Server server={loadBalancedServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">测试沙盒服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          安全的测试环境和沙盒服务器\n        </p>\n        <Server server={sandboxServer} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">企业私有云服务器</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          企业级私有云部署的多租户服务器\n        </p>\n        <Server server={privateCloudServer} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/server-demo.tsx"
    }
  ]
}