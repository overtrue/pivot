{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "component-detail-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/component-detail.json"
  ],
  "files": [
    {
      "path": "registry/default/example/component-detail-demo.tsx",
      "content": "import { ComponentDetail } from \"@/registry/default/ui/component-detail\";\n\nexport default function ComponentDetailDemo() {\n  // 用户 Schema 组件详情\n  const userSchemaDetail = {\n    name: \"User\",\n    type: \"schema\",\n    component: {\n      type: \"object\" as const,\n      required: [\"id\", \"email\", \"name\"],\n      properties: {\n        id: {\n          type: \"string\" as const,\n          description: \"用户唯一标识符\",\n          format: \"uuid\" as const,\n          example: \"user_123e4567-e89b-12d3-a456-426614174000\"\n        },\n        email: {\n          type: \"string\" as const,\n          description: \"用户邮箱地址\",\n          format: \"email\" as const,\n          example: \"john.doe@example.com\"\n        },\n        name: {\n          type: \"string\" as const,\n          description: \"用户姓名\",\n          minLength: 1,\n          maxLength: 100,\n          example: \"John Doe\"\n        },\n        avatar: {\n          type: \"string\" as const,\n          description: \"用户头像 URL\",\n          format: \"uri\" as const,\n          example: \"https://cdn.example.com/avatars/john-doe.jpg\"\n        },\n        role: {\n          type: \"string\" as const,\n          description: \"用户角色\",\n          enum: [\"admin\", \"user\", \"moderator\"],\n          default: \"user\",\n          example: \"admin\"\n        },\n        profile: {\n          type: \"object\" as const,\n          description: \"用户详细资料\",\n          properties: {\n            bio: {\n              type: \"string\" as const,\n              description: \"个人简介\",\n              example: \"资深软件工程师，专注于 API 设计\"\n            },\n            phone: {\n              type: \"string\" as const,\n              description: \"电话号码\",\n              example: \"+86 138-0013-8000\"\n            }\n          }\n        },\n        createdAt: {\n          type: \"string\" as const,\n          description: \"注册时间\",\n          format: \"date-time\" as const,\n          example: \"2024-01-15T10:30:00Z\"\n        }\n      }\n    }\n  };\n\n  // 产品响应组件详情\n  const productResponseDetail = {\n    name: \"ProductResponse\",\n    type: \"response\",\n    component: {\n      description: \"产品详情响应\",\n      headers: {\n        \"X-RateLimit-Remaining\": {\n          description: \"剩余请求次数\",\n          schema: {\n            type: \"integer\" as const,\n            example: 99\n          }\n        },\n        \"X-Request-ID\": {\n          description: \"请求追踪 ID\",\n          schema: {\n            type: \"string\" as const,\n            example: \"req_123abc456def\"\n          }\n        }\n      },\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\" as const,\n            properties: {\n              success: {\n                type: \"boolean\" as const,\n                description: \"请求是否成功\",\n                example: true\n              },\n              data: {\n                type: \"object\" as const,\n                description: \"产品信息\",\n                properties: {\n                  id: {\n                    type: \"string\" as const,\n                    description: \"产品 ID\",\n                    example: \"prod_987fcdeb-51a2-4567\"\n                  },\n                  name: {\n                    type: \"string\" as const,\n                    description: \"产品名称\",\n                    example: \"iPhone 15 Pro\"\n                  },\n                  price: {\n                    type: \"number\" as const,\n                    description: \"产品价格\",\n                    example: 7999.00\n                  },\n                  currency: {\n                    type: \"string\" as const,\n                    description: \"货币代码\",\n                    example: \"CNY\"\n                  }\n                }\n              },\n              message: {\n                type: \"string\" as const,\n                description: \"响应消息\",\n                example: \"产品信息获取成功\"\n              }\n            }\n          },\n          example: {\n            success: true,\n            data: {\n              id: \"prod_987fcdeb-51a2-4567\",\n              name: \"iPhone 15 Pro\",\n              price: 7999.00,\n              currency: \"CNY\"\n            },\n            message: \"产品信息获取成功\"\n          }\n        }\n      }\n    }\n  };\n\n  // 用户 ID 参数组件详情\n  const userIdParameterDetail = {\n    name: \"UserId\",\n    type: \"parameter\",\n    component: {\n      name: \"userId\",\n      in: \"path\" as const,\n      required: true,\n      description: \"用户唯一标识符，用于指定要操作的用户\",\n      schema: {\n        type: \"string\" as const,\n        format: \"uuid\" as const,\n        pattern: \"^user_[a-f0-9-]+$\",\n        example: \"user_123e4567-e89b-12d3-a456-426614174000\"\n      },\n      examples: {\n        \"admin_user\": {\n          summary: \"管理员用户\",\n          description: \"系统管理员用户的 ID 示例\",\n          value: \"user_admin_123456789\"\n        },\n        \"regular_user\": {\n          summary: \"普通用户\",\n          description: \"普通用户的 ID 示例\",\n          value: \"user_regular_987654321\"\n        }\n      }\n    }\n  };\n\n  // OAuth 2.0 安全方案组件详情\n  const oauthSecurityDetail = {\n    name: \"OAuth2\",\n    type: \"securityScheme\",\n    component: {\n      type: \"oauth2\" as const,\n      description: \"OAuth 2.0 授权框架，支持多种授权流程。适用于第三方应用集成和用户授权。\",\n      flows: {\n        authorizationCode: {\n          authorizationUrl: \"https://auth.example.com/oauth/authorize\",\n          tokenUrl: \"https://auth.example.com/oauth/token\",\n          refreshUrl: \"https://auth.example.com/oauth/refresh\",\n          scopes: {\n            \"read\": \"读取用户基本信息和公开数据\",\n            \"write\": \"修改用户信息和创建内容\",\n            \"admin\": \"管理员权限，可访问所有功能\",\n            \"user:profile\": \"访问用户详细资料\",\n            \"user:email\": \"访问用户邮箱地址\"\n          }\n        },\n        clientCredentials: {\n          tokenUrl: \"https://auth.example.com/oauth/token\",\n          scopes: {\n            \"api:read\": \"读取 API 数据\",\n            \"api:write\": \"写入 API 数据\",\n            \"system:monitor\": \"系统监控权限\"\n          }\n        }\n      }\n    }\n  };\n\n  // 文件上传请求体组件详情\n  const fileUploadRequestDetail = {\n    name: \"FileUpload\",\n    type: \"requestBody\",\n    component: {\n      description: \"文件上传请求，支持多种文件格式和元数据\",\n      required: true,\n      content: {\n        \"multipart/form-data\": {\n          schema: {\n            type: \"object\" as const,\n            required: [\"file\"],\n            properties: {\n              file: {\n                type: \"string\" as const,\n                format: \"binary\" as const,\n                description: \"要上传的文件，支持图片、文档等格式\"\n              },\n              description: {\n                type: \"string\" as const,\n                description: \"文件描述信息\",\n                maxLength: 500,\n                example: \"产品说明书 PDF 文档\"\n              },\n              category: {\n                type: \"string\" as const,\n                description: \"文件分类\",\n                enum: [\"document\", \"image\", \"video\", \"audio\", \"other\"],\n                example: \"document\"\n              },\n              tags: {\n                type: \"array\" as const,\n                description: \"文件标签\",\n                items: {\n                  type: \"string\" as const\n                },\n                example: [\"manual\", \"product\", \"pdf\"]\n              }\n            }\n          },\n          encoding: {\n            file: {\n              contentType: \"application/pdf, image/*, video/*\"\n            }\n          }\n        },\n        \"application/json\": {\n          schema: {\n            type: \"object\" as const,\n            properties: {\n              url: {\n                type: \"string\" as const,\n                format: \"uri\" as const,\n                description: \"文件 URL，用于从外部链接导入文件\",\n                example: \"https://example.com/files/document.pdf\"\n              },\n              description: {\n                type: \"string\" as const,\n                description: \"文件描述\",\n                example: \"从外部链接导入的文档\"\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // 支付回调组件详情\n  const paymentCallbackDetail = {\n    name: \"PaymentCallback\",\n    type: \"callback\",\n    component: {\n      \"{$request.body#/callbackUrl}\": {\n        post: {\n          summary: \"支付状态变更回调\",\n          description: \"当支付状态发生变更时，系统会向指定的回调 URL 发送通知\",\n          requestBody: {\n            description: \"支付状态变更通知\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\" as const,\n                  required: [\"paymentId\", \"status\", \"timestamp\"],\n                  properties: {\n                    paymentId: {\n                      type: \"string\" as const,\n                      description: \"支付 ID\",\n                      example: \"pay_abc123def456\"\n                    },\n                    orderId: {\n                      type: \"string\" as const,\n                      description: \"订单 ID\",\n                      example: \"order_456e7890\"\n                    },\n                    status: {\n                      type: \"string\" as const,\n                      description: \"支付状态\",\n                      enum: [\"completed\", \"failed\", \"refunded\"],\n                      example: \"completed\"\n                    },\n                    amount: {\n                      type: \"number\" as const,\n                      description: \"支付金额\",\n                      example: 99.99\n                    },\n                    timestamp: {\n                      type: \"string\" as const,\n                      format: \"date-time\" as const,\n                      description: \"状态变更时间\",\n                      example: \"2024-03-15T14:30:00Z\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          responses: {\n            \"200\": {\n              description: \"回调处理成功\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\" as const,\n                    properties: {\n                      received: {\n                        type: \"boolean\" as const,\n                        example: true\n                      }\n                    }\n                  }\n                }\n              }\n            },\n            \"400\": {\n              description: \"回调数据格式错误\"\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户 Schema 组件详情</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          完整的用户数据模型定义，包含所有字段的类型、约束和示例\n        </p>\n        <ComponentDetail\n          activeType=\"schemas\"\n          selectedItemName=\"User\"\n          components={{\n            schemas: {\n              User: userSchemaDetail.component\n            }\n          }}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">产品响应组件详情</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          产品 API 的响应定义，包含响应头、内容格式和示例数据\n        </p>\n        <ComponentDetail\n          activeType=\"responses\"\n          selectedItemName=\"ProductResponse\"\n          components={{\n            responses: {\n              ProductResponse: productResponseDetail.component\n            }\n          }}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户 ID 参数组件详情</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          路径参数的详细定义，包含验证规则和多个使用示例\n        </p>\n        <ComponentDetail\n          activeType=\"parameters\"\n          selectedItemName=\"userId\"\n          components={{\n            parameters: {\n              userId: userIdParameterDetail.component\n            }\n          }}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">OAuth 2.0 安全方案详情</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          OAuth 2.0 认证方案的完整配置，包含多种授权流程和权限范围\n        </p>\n        <ComponentDetail\n          activeType=\"securitySchemes\"\n          selectedItemName=\"OAuth2\"\n          components={{\n            securitySchemes: {\n              OAuth2: oauthSecurityDetail.component\n            }\n          }}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">文件上传请求体详情</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          文件上传的请求体定义，支持多种内容类型和编码方式\n        </p>\n        <ComponentDetail\n          activeType=\"requestBodies\"\n          selectedItemName=\"FileUpload\"\n          components={{\n            requestBodies: {\n              FileUpload: fileUploadRequestDetail.component\n            }\n          }}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">支付回调组件详情</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          支付状态变更的回调定义，包含请求格式和响应处理\n        </p>\n        <ComponentDetail\n          activeType=\"callbacks\"\n          selectedItemName=\"PaymentCallback\"\n          components={{\n            callbacks: {\n              PaymentCallback: paymentCallbackDetail.component\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/component-detail-demo.tsx"
    }
  ]
}