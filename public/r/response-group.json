{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "response-group",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/response-content-section",
    "https://pivotkit.vercel.app/r/response-headers-table"
  ],
  "files": [
    {
      "path": "registry/pivot/response-group.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { useI18n } from \"@/registry/lib/i18n\";\nimport type { OpenAPIV3 } from 'openapi-types';\n\nimport { ResponseContentSection } from \"@/registry/pivot/response-content-section\";\nimport { ResponseHeadersTable } from \"@/registry/pivot/response-headers-table\";\nimport React from \"react\";\n\ninterface ResponseGroupProps {\n  status: string;\n  response: OpenAPIV3.ResponseObject;\n  components?: OpenAPIV3.ComponentsObject;\n  statusCodeProps?: {\n    size?: 'small' | 'medium';\n    className?: string;\n    show?: boolean;\n  };\n  className?: string;\n}\n\nconst ResponseGroup = React.forwardRef<HTMLDivElement, ResponseGroupProps>(\n  ({ status, response, components, className }, ref) => {\n    const { t } = useI18n();\n\n    // 预处理内容类型\n    const contentTypes = response.content ? Object.keys(response.content) : [];\n    const hasContent = contentTypes.length > 0;\n\n    return (\n      <div ref={ref} className={cn(\"space-y-4\", className)}>\n        <div className=\"flex items-center space-x-2\">\n          {response.description && (\n            <span className=\"text-neutral-700 dark:text-neutral-300 text-sm\">{response.description}</span>\n          )}\n        </div>\n\n        {/* 使用ResponseContentSection展示内容和示例 */}\n        {hasContent && (\n          <div className=\"space-y-3\">\n            <ResponseContentSection\n              content={response.content!}\n              components={components}\n            />\n          </div>\n        )}\n\n        {/* 头部信息 */}\n        {response.headers && Object.keys(response.headers).length > 0 && (\n          <div>\n            <h4 className=\"text-sm font-semibold uppercase text-neutral-500 dark:text-neutral-400 mb-2\">{t('Response Headers')}</h4>\n            <ResponseHeadersTable headers={response.headers} components={components} />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nResponseGroup.displayName = \"ResponseGroup\";\n\nexport { ResponseGroup, type ResponseGroupProps };\n",
      "type": "registry:ui",
      "target": "registry/pivot/response-group.tsx"
    }
  ]
}