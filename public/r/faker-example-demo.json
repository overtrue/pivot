{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "faker-example-demo",
  "type": "registry:example",
  "dependencies": [
    "openapi-types"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/lib.json"
  ],
  "files": [
    {
      "path": "registry/default/example/faker-example-demo.tsx",
      "content": "import { generateExample } from \"@/registry/default/lib/utils/generate-example\";\nimport type { OpenAPIV3 } from \"openapi-types\";\n\nexport default function FakerExampleDemo() {\n  // 用户信息 Schema 示例\n  const userSchema: OpenAPIV3.SchemaObject = {\n    type: \"object\",\n    properties: {\n      id: { type: \"integer\", description: \"用户ID\" },\n      name: { type: \"string\", description: \"用户姓名\" },\n      email: { type: \"string\", format: \"email\", description: \"电子邮箱\" },\n      phone: { type: \"string\", description: \"手机号码\" },\n      age: { type: \"integer\", minimum: 18, maximum: 80, description: \"年龄\" },\n      gender: { type: \"string\", description: \"性别\" },\n      address: { type: \"string\", description: \"地址\" },\n      city: { type: \"string\", description: \"城市\" },\n      country: { type: \"string\", description: \"国家\" },\n      company: { type: \"string\", description: \"公司\" },\n      position: { type: \"string\", description: \"职位\" },\n      website: { type: \"string\", format: \"url\", description: \"个人网站\" },\n      avatar: { type: \"string\", description: \"头像\" },\n      bio: { type: \"string\", description: \"个人简介\" },\n      status: { type: \"string\", description: \"状态\" },\n      created_at: {\n        type: \"string\",\n        format: \"date-time\",\n        description: \"创建时间\",\n      },\n      updated_at: {\n        type: \"string\",\n        format: \"date-time\",\n        description: \"更新时间\",\n      },\n    },\n    required: [\"id\", \"name\", \"email\"],\n  };\n\n  // 产品信息 Schema 示例\n  const productSchema: OpenAPIV3.SchemaObject = {\n    type: \"object\",\n    properties: {\n      id: { type: \"integer\", description: \"产品ID\" },\n      name: { type: \"string\", description: \"产品名称\" },\n      description: { type: \"string\", description: \"产品描述\" },\n      price: { type: \"number\", minimum: 0, description: \"价格\" },\n      currency: { type: \"string\", description: \"货币\" },\n      category: { type: \"string\", description: \"分类\" },\n      tags: {\n        type: \"array\",\n        items: { type: \"string\" },\n        description: \"标签\",\n      },\n      sku: { type: \"string\", description: \"SKU编码\" },\n      stock_count: { type: \"integer\", minimum: 0, description: \"库存数量\" },\n      images: {\n        type: \"array\",\n        items: { type: \"string\", format: \"url\" },\n        description: \"产品图片\",\n      },\n      status: { type: \"string\", description: \"状态\" },\n      created_at: {\n        type: \"string\",\n        format: \"date-time\",\n        description: \"创建时间\",\n      },\n      updated_at: {\n        type: \"string\",\n        format: \"date-time\",\n        description: \"更新时间\",\n      },\n    },\n    required: [\"id\", \"name\", \"price\"],\n  };\n\n  // 订单信息 Schema 示例\n  const orderSchema: OpenAPIV3.SchemaObject = {\n    type: \"object\",\n    properties: {\n      order_id: { type: \"string\", description: \"订单ID\" },\n      user_id: { type: \"integer\", description: \"用户ID\" },\n      total_amount: { type: \"number\", minimum: 0, description: \"总金额\" },\n      currency: { type: \"string\", description: \"货币\" },\n      status: { type: \"string\", description: \"订单状态\" },\n      priority: { type: \"string\", description: \"优先级\" },\n      shipping_address: { type: \"string\", description: \"收货地址\" },\n      billing_address: { type: \"string\", description: \"账单地址\" },\n      phone: { type: \"string\", description: \"联系电话\" },\n      email: { type: \"string\", format: \"email\", description: \"联系邮箱\" },\n      notes: { type: \"string\", description: \"订单备注\" },\n      created_at: {\n        type: \"string\",\n        format: \"date-time\",\n        description: \"创建时间\",\n      },\n      estimated_delivery: {\n        type: \"string\",\n        format: \"date\",\n        description: \"预计送达时间\",\n      },\n    },\n    required: [\"order_id\", \"user_id\", \"total_amount\"],\n  };\n\n  // 生成示例数据\n  const userExample = generateExample(userSchema);\n  const productExample = generateExample(productSchema);\n  const orderExample = generateExample(orderSchema);\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h3 className=\"text-lg font-semibold mb-4\">\n          Faker.js 智能示例生成演示\n        </h3>\n        <p className=\"text-sm text-gray-600 mb-6\">\n          使用 @faker-js/faker 根据属性名智能生成真实的示例数据\n        </p>\n      </div>\n\n      <div className=\"grid gap-6\">\n        {/* 用户信息示例 */}\n        <div className=\"border rounded-lg p-4\">\n          <h4 className=\"text-md font-medium mb-3\">用户信息示例</h4>\n          <div className=\"bg-gray-50 rounded p-3 text-sm\">\n            <pre className=\"whitespace-pre-wrap\">\n              {JSON.stringify(userExample, null, 2)}\n            </pre>\n          </div>\n        </div>\n\n        {/* 产品信息示例 */}\n        <div className=\"border rounded-lg p-4\">\n          <h4 className=\"text-md font-medium mb-3\">产品信息示例</h4>\n          <div className=\"bg-gray-50 rounded p-3 text-sm\">\n            <pre className=\"whitespace-pre-wrap\">\n              {JSON.stringify(productExample, null, 2)}\n            </pre>\n          </div>\n        </div>\n\n        {/* 订单信息示例 */}\n        <div className=\"border rounded-lg p-4\">\n          <h4 className=\"text-md font-medium mb-3\">订单信息示例</h4>\n          <div className=\"bg-gray-50 rounded p-3 text-sm\">\n            <pre className=\"whitespace-pre-wrap\">\n              {JSON.stringify(orderExample, null, 2)}\n            </pre>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-blue-50 rounded-lg p-4 text-sm\">\n        <h5 className=\"font-medium mb-2\">智能推断规则示例：</h5>\n        <ul className=\"list-disc list-inside space-y-1 text-gray-700\">\n          <li>\n            <code>name</code>, <code>title</code> → 生成真实姓名\n          </li>\n          <li>\n            <code>email</code> → 生成有效邮箱地址\n          </li>\n          <li>\n            <code>phone</code>, <code>mobile</code> → 生成电话号码\n          </li>\n          <li>\n            <code>address</code> → 生成详细地址\n          </li>\n          <li>\n            <code>company</code> → 生成公司名称\n          </li>\n          <li>\n            <code>description</code> → 生成描述性文本\n          </li>\n          <li>\n            <code>price</code>, <code>amount</code> → 生成合理价格\n          </li>\n          <li>\n            <code>status</code> → 生成状态值\n          </li>\n          <li>\n            <code>created_at</code>, <code>updated_at</code> → 生成日期时间\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/faker-example-demo.tsx"
    }
  ]
}