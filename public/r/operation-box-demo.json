{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "operation-box-demo",
  "type": "registry:example",
  "dependencies": [
    "openapi-types"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/operation-box.json"
  ],
  "files": [
    {
      "path": "registry/default/example/operation-box-demo.tsx",
      "content": "import { OperationBox } from \"@/registry/default/ui/operation-box\";\nimport type { ParameterLocation } from \"@/types/project\";\nimport type { OpenAPIV3 } from 'openapi-types';\n\nexport default function OperationBoxDemo() {\n  // 示例 OpenAPI 操作数据\n  const getUserOperation: OpenAPIV3.OperationObject = {\n    summary: \"获取用户信息\",\n    description: \"根据用户 ID 获取用户的详细信息，包括基本资料、权限等。\",\n    parameters: [\n      {\n        name: \"userId\",\n        in: \"path\" as ParameterLocation,\n        required: true,\n        description: \"用户的唯一标识符\",\n        schema: {\n          type: \"string\",\n          format: \"uuid\" as const,\n          example: \"123e4567-e89b-12d3-a456-426614174000\"\n        }\n      },\n      {\n        name: \"include\",\n        in: \"query\" as ParameterLocation,\n        required: false,\n        description: \"指定要包含的额外信息\",\n        schema: {\n          type: \"array\",\n          items: {\n            type: \"string\",\n            enum: [\"profile\", \"permissions\", \"preferences\"]\n          },\n          example: [\"profile\", \"permissions\"]\n        }\n      }\n    ],\n    responses: {\n      \"200\": {\n        description: \"成功获取用户信息\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                id: { type: \"string\", format: \"uuid\" as const },\n                username: { type: \"string\" },\n                email: { type: \"string\", format: \"email\" as const },\n                profile: {\n                  type: \"object\",\n                  properties: {\n                    firstName: { type: \"string\" },\n                    lastName: { type: \"string\" },\n                    avatar: { type: \"string\", format: \"uri\" as const }\n                  }\n                }\n              }\n            },\n            example: {\n              id: \"123e4567-e89b-12d3-a456-426614174000\",\n              username: \"john_doe\",\n              email: \"john@example.com\",\n              profile: {\n                firstName: \"John\",\n                lastName: \"Doe\",\n                avatar: \"https://example.com/avatar.jpg\"\n              }\n            }\n          }\n        }\n      },\n      \"404\": {\n        description: \"用户不存在\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                error: { type: \"string\" },\n                message: { type: \"string\" }\n              }\n            },\n            example: {\n              error: \"USER_NOT_FOUND\",\n              message: \"指定的用户不存在\"\n            }\n          }\n        }\n      }\n    },\n    security: [\n      {\n        bearerAuth: []\n      }\n    ],\n    externalDocs: {\n      description: \"用户管理 API 文档\",\n      url: \"https://docs.example.com/users\"\n    }\n  };\n\n  const createUserOperation: OpenAPIV3.OperationObject = {\n    summary: \"创建新用户\",\n    description: \"创建一个新的用户账户。需要管理员权限。\",\n    requestBody: {\n      required: true,\n      description: \"用户创建信息\",\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\",\n            required: [\"username\", \"email\", \"password\"],\n            properties: {\n              username: {\n                type: \"string\",\n                minLength: 3,\n                maxLength: 50,\n                pattern: \"^[a-zA-Z0-9_]+$\"\n              },\n              email: {\n                type: \"string\",\n                format: \"email\" as const\n              },\n              password: {\n                type: \"string\",\n                minLength: 8,\n                description: \"密码必须至少包含 8 个字符\"\n              },\n              profile: {\n                type: \"object\",\n                properties: {\n                  firstName: { type: \"string\" },\n                  lastName: { type: \"string\" }\n                }\n              }\n            }\n          },\n          example: {\n            username: \"new_user\",\n            email: \"newuser@example.com\",\n            password: \"securePassword123\",\n            profile: {\n              firstName: \"New\",\n              lastName: \"User\"\n            }\n          }\n        }\n      }\n    },\n    responses: {\n      \"201\": {\n        description: \"用户创建成功\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                id: { type: \"string\", format: \"uuid\" as const },\n                username: { type: \"string\" },\n                email: { type: \"string\" },\n                createdAt: { type: \"string\", format: \"date-time\" as const }\n              }\n            }\n          }\n        }\n      },\n      \"400\": {\n        description: \"请求参数错误\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"object\",\n              properties: {\n                error: { type: \"string\" },\n                details: {\n                  type: \"array\",\n                  items: { type: \"string\" }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"409\": {\n        description: \"用户名或邮箱已存在\"\n      }\n    },\n    security: [\n      {\n        bearerAuth: [\"admin\"]\n      }\n    ]\n  };\n\n  const deprecatedOperation: OpenAPIV3.OperationObject = {\n    summary: \"获取用户列表（已弃用）\",\n    description: \"此接口已弃用，请使用新的分页接口 `/api/v2/users`。\",\n    deprecated: true,\n    parameters: [\n      {\n        name: \"limit\",\n        in: \"query\" as ParameterLocation,\n        schema: { type: \"integer\", maximum: 100 }\n      }\n    ],\n    responses: {\n      \"200\": {\n        description: \"用户列表\",\n        content: {\n          \"application/json\": {\n            schema: {\n              type: \"array\",\n              items: {\n                type: \"object\",\n                properties: {\n                  id: { type: \"string\" },\n                  username: { type: \"string\" }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-6 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">GET 操作示例</h4>\n        <OperationBox\n          path=\"/api/users/{userId}\"\n          method=\"GET\"\n          operation={getUserOperation}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">POST 操作示例</h4>\n        <OperationBox\n          path=\"/api/users\"\n          method=\"POST\"\n          operation={createUserOperation}\n        />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">已弃用的操作</h4>\n        <OperationBox\n          path=\"/api/v1/users\"\n          method=\"GET\"\n          operation={deprecatedOperation}\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/operation-box-demo.tsx"
    }
  ]
}