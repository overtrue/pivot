{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "operation-detail-demo",
  "type": "registry:example",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/operation-detail.json"
  ],
  "files": [
    {
      "path": "registry/default/example/operation-detail-demo.tsx",
      "content": "\"use client\";\n\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { OperationDetail } from \"@/registry/default/ui/operation-detail\";\n\nimport { useState } from \"react\";\n\nconst sampleOperation: OpenAPIV3.OperationObject = {\n  operationId: \"getUserById\",\n  summary: \"Get user by ID\",\n  description: \"Retrieve a specific user by their unique identifier. This endpoint returns detailed information about a user including their profile data, preferences, and account status.\",\n  tags: [\"Users\", \"Profile\"],\n  deprecated: false,\n  parameters: [\n    {\n      name: \"id\",\n      in: \"path\" as const,\n      required: true,\n      schema: { type: \"integer\" as const, minimum: 1 },\n      description: \"The unique identifier of the user\"\n    },\n    {\n      name: \"include\",\n      in: \"query\" as const,\n      required: false,\n      schema: {\n        type: \"array\" as const,\n        items: {\n          type: \"string\" as const,\n          enum: [\"profile\", \"preferences\", \"activity\"]\n        }\n      },\n      description: \"Additional data to include in the response\"\n    }\n  ],\n  requestBody: {\n    description: \"Optional request body for additional filters\",\n    required: false,\n    content: {\n      \"application/json\": {\n        schema: {\n          type: \"object\" as const,\n          properties: {\n            fields: {\n              type: \"array\" as const,\n              items: { type: \"string\" as const },\n              description: \"Specific fields to return\"\n            }\n          }\n        }\n      }\n    }\n  },\n  responses: {\n    \"200\": {\n      description: \"User found and returned successfully\",\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\" as const,\n            properties: {\n              id: { type: \"integer\" as const },\n              name: { type: \"string\" as const },\n              email: { type: \"string\" as const },\n              profile: {\n                type: \"object\" as const,\n                properties: {\n                  avatar: { type: \"string\" as const },\n                  bio: { type: \"string\" as const }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"404\": {\n      description: \"User not found\"\n    },\n    \"500\": {\n      description: \"Internal server error\"\n    }\n  },\n  security: [\n    {\n      \"bearerAuth\": []\n    }\n  ],\n  externalDocs: {\n    description: \"User API Documentation\",\n    url: \"https://docs.example.com/users\"\n  }\n};\n\nconst deprecatedOperation: OpenAPIV3.OperationObject = {\n  operationId: \"getUserByEmail\",\n  summary: \"Get user by email (deprecated)\",\n  description: \"This endpoint is deprecated. Please use GET /users/{id} instead.\",\n  tags: [\"Users\"],\n  deprecated: true,\n  parameters: [\n    {\n      name: \"email\",\n      in: \"query\" as const,\n      required: true,\n      schema: { type: \"string\" as const, format: \"email\" as const },\n      description: \"User email address\"\n    }\n  ],\n  responses: {\n    \"200\": {\n      description: \"User found\"\n    },\n    \"404\": {\n      description: \"User not found\"\n    }\n  }\n};\n\nexport default function OperationDetailDemo() {\n  const [selectedOperation, setSelectedOperation] = useState<\"normal\" | \"deprecated\">(\"normal\");\n\n  const currentOperation = selectedOperation === \"normal\" ? sampleOperation : deprecatedOperation;\n  const currentPath = selectedOperation === \"normal\" ? \"/users/{id}\" : \"/users/by-email\";\n  const currentMethod = \"GET\";\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto p-6 space-y-6\">\n      <div className=\"bg-muted p-4 rounded-lg\">\n        <h3 className=\"text-lg font-semibold mb-2\">操作详情组件演示</h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          这个组件展示了 OpenAPI 操作的详细信息，包括参数、请求体、响应等。\n        </p>\n        <div className=\"flex gap-2\">\n          <button\n            onClick={() => setSelectedOperation(\"normal\")}\n            className={`px-3 py-1 text-xs rounded ${selectedOperation === \"normal\"\n                ? \"bg-primary text-primary-foreground\"\n                : \"bg-background text-foreground border\"\n              }`}\n          >\n            普通操作\n          </button>\n          <button\n            onClick={() => setSelectedOperation(\"deprecated\")}\n            className={`px-3 py-1 text-xs rounded ${selectedOperation === \"deprecated\"\n                ? \"bg-primary text-primary-foreground\"\n                : \"bg-background text-foreground border\"\n              }`}\n          >\n            已弃用操作\n          </button>\n        </div>\n      </div>\n\n      <div className=\"border rounded-lg p-6\">\n        <OperationDetail\n          operation={currentOperation}\n          path={currentPath}\n          method={currentMethod}\n          components={{\n            securitySchemes: {\n              bearerAuth: {\n                type: \"http\",\n                scheme: \"bearer\",\n                bearerFormat: \"JWT\"\n              }\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/operation-detail-demo.tsx"
    }
  ]
}