{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "schema-display-demo",
  "type": "registry:example",
  "registryDependencies": ["https://pivotkit.vercel.app/r/schema-display.json"],
  "files": [
    {
      "path": "registry/default/example/schema-display-demo.tsx",
      "content": "import { SchemaDisplay } from \"@/registry/default/ui/schema-display\";\n\nexport default function SchemaDisplayDemo() {\n  // 用户信息模型\n  const userSchema = {\n    type: \"object\" as const,\n    title: \"User\",\n    description: \"用户信息对象，包含用户的基本信息和偏好设置\",\n    required: [\"id\", \"email\", \"name\", \"createdAt\"],\n    properties: {\n      id: {\n        type: \"string\" as const,\n        format: \"uuid\" as const,\n        description: \"用户唯一标识符\",\n        example: \"123e4567-e89b-12d3-a456-426614174000\"\n      },\n      email: {\n        type: \"string\" as const,\n        format: \"email\" as const,\n        description: \"用户邮箱地址\",\n        example: \"john.doe@example.com\"\n      },\n      name: {\n        type: \"string\" as const,\n        description: \"用户姓名\",\n        minLength: 1,\n        maxLength: 100,\n        example: \"John Doe\"\n      },\n      avatar: {\n        type: \"string\" as const,\n        format: \"uri\" as const,\n        description: \"用户头像 URL\",\n        example: \"https://example.com/avatars/john.jpg\"\n      },\n      age: {\n        type: \"integer\" as const,\n        description: \"用户年龄\",\n        minimum: 0,\n        maximum: 150,\n        example: 28\n      },\n      status: {\n        type: \"string\" as const,\n        enum: [\"active\", \"inactive\", \"pending\", \"suspended\"],\n        description: \"用户账户状态\",\n        default: \"pending\"\n      },\n      roles: {\n        type: \"array\" as const,\n        description: \"用户角色列表\",\n        items: {\n          type: \"string\" as const,\n          enum: [\"admin\", \"user\", \"moderator\", \"guest\"]\n        },\n        example: [\"user\"]\n      },\n      profile: {\n        type: \"object\" as const,\n        description: \"用户详细资料\",\n        properties: {\n          firstName: {\n            type: \"string\" as const,\n            description: \"名\",\n            example: \"John\"\n          },\n          lastName: {\n            type: \"string\" as const,\n            description: \"姓\",\n            example: \"Doe\"\n          },\n          phone: {\n            type: \"string\" as const,\n            pattern: \"^\\\\+?[1-9]\\\\d{1,14}$\",\n            description: \"手机号码\",\n            example: \"+1-555-123-4567\"\n          },\n          address: {\n            type: \"object\" as const,\n            description: \"地址信息\",\n            properties: {\n              street: { type: \"string\" as const, example: \"123 Main St\" },\n              city: { type: \"string\" as const, example: \"Anytown\" },\n              state: { type: \"string\" as const, example: \"CA\" },\n              zipCode: { type: \"string\" as const, example: \"12345\" },\n              country: { type: \"string\" as const, example: \"US\" }\n            }\n          }\n        }\n      },\n      preferences: {\n        type: \"object\" as const,\n        description: \"用户偏好设置\",\n        properties: {\n          theme: {\n            type: \"string\" as const,\n            enum: [\"light\", \"dark\", \"auto\"],\n            default: \"auto\",\n            description: \"界面主题\"\n          },\n          language: {\n            type: \"string\" as const,\n            enum: [\"zh-CN\", \"en-US\", \"ja-JP\", \"fr-FR\"],\n            default: \"en-US\",\n            description: \"界面语言\"\n          },\n          notifications: {\n            type: \"object\" as const,\n            description: \"通知设置\",\n            properties: {\n              email: { type: \"boolean\" as const, default: true },\n              push: { type: \"boolean\" as const, default: false },\n              sms: { type: \"boolean\" as const, default: false }\n            }\n          },\n          timezone: {\n            type: \"string\" as const,\n            description: \"用户时区\",\n            example: \"America/New_York\"\n          }\n        }\n      },\n      createdAt: {\n        type: \"string\" as const,\n        format: \"date-time\" as const,\n        description: \"账户创建时间\",\n        example: \"2024-01-15T10:30:00Z\"\n      },\n      updatedAt: {\n        type: \"string\" as const,\n        format: \"date-time\" as const,\n        description: \"最后更新时间\",\n        example: \"2024-01-20T14:45:00Z\"\n      },\n      lastLoginAt: {\n        type: \"string\" as const,\n        format: \"date-time\" as const,\n        description: \"最后登录时间\",\n        example: \"2024-01-22T09:15:00Z\"\n      }\n    }\n  };\n\n  // API 响应模型\n  const apiResponseSchema = {\n    type: \"object\" as const,\n    title: \"ApiResponse\",\n    description: \"标准 API 响应格式\",\n    required: [\"success\", \"data\"],\n    properties: {\n      success: {\n        type: \"boolean\" as const,\n        description: \"请求是否成功\",\n        example: true\n      },\n      data: {\n        type: \"object\" as const,\n        description: \"响应数据\",\n        additionalProperties: true\n      },\n      message: {\n        type: \"string\" as const,\n        description: \"响应消息\",\n        example: \"操作成功\"\n      },\n      errors: {\n        type: \"array\" as const,\n        description: \"错误信息列表\",\n        items: {\n          type: \"object\" as const,\n          properties: {\n            field: { type: \"string\" as const, description: \"错误字段\" },\n            code: { type: \"string\" as const, description: \"错误代码\" },\n            message: { type: \"string\" as const, description: \"错误描述\" }\n          }\n        }\n      },\n      pagination: {\n        type: \"object\" as const,\n        description: \"分页信息\",\n        properties: {\n          page: { type: \"integer\" as const, minimum: 1, example: 1 },\n          limit: { type: \"integer\" as const, minimum: 1, maximum: 100, example: 20 },\n          total: { type: \"integer\" as const, minimum: 0, example: 150 },\n          totalPages: { type: \"integer\" as const, minimum: 0, example: 8 }\n        }\n      }\n    }\n  };\n\n  // 产品模型\n  const productSchema = {\n    type: \"object\" as const,\n    title: \"Product\",\n    description: \"电商产品信息模型\",\n    required: [\"id\", \"name\", \"price\", \"category\"],\n    properties: {\n      id: {\n        type: \"string\" as const,\n        description: \"产品 ID\",\n        example: \"prod_abc123\"\n      },\n      name: {\n        type: \"string\" as const,\n        description: \"产品名称\",\n        minLength: 1,\n        maxLength: 200,\n        example: \"iPhone 15 Pro\"\n      },\n      description: {\n        type: \"string\" as const,\n        description: \"产品描述\",\n        example: \"最新款 iPhone，配备 A17 Pro 芯片\"\n      },\n      price: {\n        type: \"number\" as const,\n        multipleOf: 0.01,\n        minimum: 0,\n        description: \"产品价格（美元）\",\n        example: 999.99\n      },\n      currency: {\n        type: \"string\" as const,\n        enum: [\"USD\", \"EUR\", \"CNY\", \"JPY\"],\n        default: \"USD\",\n        description: \"价格货币\"\n      },\n      category: {\n        type: \"string\" as const,\n        description: \"产品分类\",\n        example: \"Electronics\"\n      },\n      tags: {\n        type: \"array\" as const,\n        description: \"产品标签\",\n        items: { type: \"string\" as const },\n        example: [\"smartphone\", \"apple\", \"5g\"]\n      },\n      inStock: {\n        type: \"boolean\" as const,\n        description: \"是否有库存\",\n        example: true\n      },\n      stockQuantity: {\n        type: \"integer\" as const,\n        minimum: 0,\n        description: \"库存数量\",\n        example: 50\n      },\n      images: {\n        type: \"array\" as const,\n        description: \"产品图片 URL 列表\",\n        items: {\n          type: \"string\" as const,\n          format: \"uri\" as const\n        },\n        example: [\"https://example.com/images/iphone1.jpg\"]\n      },\n      specifications: {\n        type: \"object\" as const,\n        description: \"产品规格\",\n        additionalProperties: { type: \"string\" as const },\n        example: {\n          \"screen_size\": \"6.1 inches\",\n          \"storage\": \"128GB\",\n          \"color\": \"Natural Titanium\"\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户信息模型</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          完整的用户数据结构，包含个人信息、偏好设置等\n        </p>\n        <SchemaDisplay schema={userSchema} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">API 响应模型</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          标准化的 API 响应格式，包含数据、错误信息和分页\n        </p>\n        <SchemaDisplay schema={apiResponseSchema} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">产品信息模型</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          电商产品数据结构，包含价格、库存、规格等信息\n        </p>\n        <SchemaDisplay schema={productSchema} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/schema-display-demo.tsx"
    }
  ]
}
