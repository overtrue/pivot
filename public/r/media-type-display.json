{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "media-type-display",
  "type": "registry:ui",
  "dependencies": [
    "react"
  ],
  "files": [
    {
      "path": "registry/pivot/media-type-display.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport React from \"react\";\n\ninterface MediaTypeDisplayProps {\n  mediaType?: string;\n  className?: string;\n}\n\nconst MediaTypeDisplay = React.forwardRef<\n  HTMLDivElement,\n  MediaTypeDisplayProps\n>(({ mediaType, className }, ref) => {\n  // 根据媒体类型返回不同的样式\n  const getMediaTypeStyle = (type?: string) => {\n    if (!type) return \"bg-neutral-100 dark:bg-neutral-900/30 text-neutral-800 dark:text-neutral-300\";\n\n    const lowerType = type.toLowerCase();\n    if (lowerType.includes(\"json\")) {\n      return \"bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300\";\n    }\n    if (lowerType.includes(\"xml\")) {\n      return \"bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-300\";\n    }\n    if (lowerType.includes(\"text\")) {\n      return \"bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300\";\n    }\n    if (lowerType.includes(\"multipart\")) {\n      return \"bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300\";\n    }\n    if (lowerType.includes(\"binary\") || lowerType.includes(\"octet-stream\")) {\n      return \"bg-gray-100 dark:bg-gray-900/30 text-gray-800 dark:text-gray-300\";\n    }\n    return \"bg-neutral-100 dark:bg-neutral-900/30 text-neutral-800 dark:text-neutral-300\";\n  };\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"inline-flex items-center px-2 py-1 rounded text-xs font-mono\",\n        getMediaTypeStyle(mediaType),\n        className,\n      )}\n    >\n      {mediaType || \"unknown\"}\n    </div>\n  );\n});\n\nMediaTypeDisplay.displayName = \"MediaTypeDisplay\";\n\nexport { MediaTypeDisplay };\n",
      "type": "registry:ui",
      "target": "registry/pivot/media-type-display.tsx"
    }
  ]
}