{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-markdown-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/lib.json",
    "https://pivotkit.vercel.app/r/code-markdown.json"
  ],
  "files": [
    {
      "path": "registry/default/example/code-markdown-demo.tsx",
      "content": "\"use client\";\n\nimport { I18nProvider } from \"@/registry/default/lib/i18n/I18nProvider\";\nimport { CodeMarkdown } from \"@/registry/default/ui/code-markdown\";\n\nexport default function CodeMarkdownDemo() {\n  const jsonCode = `{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"age\": 30,\n  \"active\": true,\n  \"profile\": {\n    \"bio\": \"Software Engineer\",\n    \"location\": \"San Francisco, CA\",\n    \"skills\": [\"JavaScript\", \"TypeScript\", \"React\", \"Node.js\"]\n  },\n  \"createdAt\": \"2024-03-15T10:30:00Z\",\n  \"lastLoginAt\": \"2024-03-15T14:22:33Z\"\n}`;\n\n  const xmlCode = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<user>\n  <id>123e4567-e89b-12d3-a456-426614174000</id>\n  <name>John Doe</name>\n  <email>john.doe@example.com</email>\n  <age>30</age>\n  <active>true</active>\n  <profile>\n    <bio>Software Engineer</bio>\n    <location>San Francisco, CA</location>\n    <skills>\n      <skill>JavaScript</skill>\n      <skill>TypeScript</skill>\n      <skill>React</skill>\n      <skill>Node.js</skill>\n    </skills>\n  </profile>\n  <createdAt>2024-03-15T10:30:00Z</createdAt>\n  <lastLoginAt>2024-03-15T14:22:33Z</lastLoginAt>\n</user>`;\n\n  const yamlCode = `id: 123e4567-e89b-12d3-a456-426614174000\nname: John Doe\nemail: john.doe@example.com\nage: 30\nactive: true\nprofile:\n  bio: Software Engineer\n  location: San Francisco, CA\n  skills:\n    - JavaScript\n    - TypeScript\n    - React\n    - Node.js\ncreatedAt: 2024-03-15T10:30:00Z\nlastLoginAt: 2024-03-15T14:22:33Z`;\n\n  const javascriptCode = `// API 客户端示例\nclass ApiClient {\n  constructor(baseURL, apiKey) {\n    this.baseURL = baseURL;\n    this.apiKey = apiKey;\n  }\n\n  async request(endpoint, options = {}) {\n    const url = \\`\\${this.baseURL}\\${endpoint}\\`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \\`Bearer \\${this.apiKey}\\`,\n        ...options.headers\n      },\n      ...options\n    };\n\n    try {\n      const response = await fetch(url, config);\n\n      if (!response.ok) {\n        throw new Error(\\`HTTP error! status: \\${response.status}\\`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  // 获取用户信息\n  async getUser(userId) {\n    return this.request(\\`/users/\\${userId}\\`);\n  }\n\n  // 创建用户\n  async createUser(userData) {\n    return this.request('/users', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n}\n\n// 使用示例\nconst client = new ApiClient('https://api.example.com', 'your-api-key');\n\nclient.getUser('123')\n  .then(user => console.log('User:', user))\n  .catch(error => console.error('Error:', error));`;\n\n  const pythonCode = `import requests\nimport json\nfrom typing import Dict, Any, Optional\n\nclass ApiClient:\n    \"\"\"API 客户端类，用于与 REST API 交互\"\"\"\n\n    def __init__(self, base_url: str, api_key: str):\n        self.base_url = base_url.rstrip('/')\n        self.api_key = api_key\n        self.session = requests.Session()\n        self.session.headers.update({\n            'Content-Type': 'application/json',\n            'Authorization': f'Bearer {api_key}'\n        })\n\n    def request(self, endpoint: str, method: str = 'GET',\n                data: Optional[Dict[str, Any]] = None) -> Dict[str, Any]:\n        \"\"\"发送 HTTP 请求\"\"\"\n        url = f\"{self.base_url}{endpoint}\"\n\n        try:\n            response = self.session.request(\n                method=method,\n                url=url,\n                json=data if data else None\n            )\n            response.raise_for_status()\n            return response.json()\n        except requests.exceptions.RequestException as e:\n            print(f\"API request failed: {e}\")\n            raise\n\n    def get_user(self, user_id: str) -> Dict[str, Any]:\n        \"\"\"获取用户信息\"\"\"\n        return self.request(f'/users/{user_id}')\n\n    def create_user(self, user_data: Dict[str, Any]) -> Dict[str, Any]:\n        \"\"\"创建用户\"\"\"\n        return self.request('/users', method='POST', data=user_data)\n\n# 使用示例\nif __name__ == \"__main__\":\n    client = ApiClient('https://api.example.com', 'your-api-key')\n\n    try:\n        user = client.get_user('123')\n        print(f\"User: {json.dumps(user, indent=2)}\")\n    except Exception as e:\n        print(f\"Error: {e}\")`;\n\n  const curlCode = `# 获取用户信息\ncurl -X GET \"https://api.example.com/users/123\" \\\\\n  -H \"Authorization: Bearer your-api-key\" \\\\\n  -H \"Content-Type: application/json\"\n\n# 创建新用户\ncurl -X POST \"https://api.example.com/users\" \\\\\n  -H \"Authorization: Bearer your-api-key\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"age\": 30,\n    \"profile\": {\n      \"bio\": \"Software Engineer\",\n      \"location\": \"San Francisco, CA\"\n    }\n  }'\n\n# 更新用户信息\ncurl -X PUT \"https://api.example.com/users/123\" \\\\\n  -H \"Authorization: Bearer your-api-key\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\n    \"name\": \"John Smith\",\n    \"profile\": {\n      \"bio\": \"Senior Software Engineer\",\n      \"location\": \"New York, NY\"\n    }\n  }'\n\n# 删除用户\ncurl -X DELETE \"https://api.example.com/users/123\" \\\\\n  -H \"Authorization: Bearer your-api-key\"`;\n\n  return (\n    <I18nProvider>\n      <div className=\"space-y-8 p-6\">\n        <h2 className=\"text-2xl font-bold\">Code Markdown Demo</h2>\n        <p className=\"text-neutral-600 dark:text-neutral-400\">\n          展示 CodeMarkdown 组件的语法高亮和复制功能\n        </p>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">JSON 示例</h3>\n          <CodeMarkdown code={jsonCode} language=\"json\" />\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">XML 示例</h3>\n          <CodeMarkdown code={xmlCode} language=\"xml\" />\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">YAML 示例</h3>\n          <CodeMarkdown code={yamlCode} language=\"yaml\" />\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">JavaScript 示例</h3>\n          <CodeMarkdown code={javascriptCode} language=\"javascript\" />\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">Python 示例</h3>\n          <CodeMarkdown code={pythonCode} language=\"python\" />\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">cURL 示例</h3>\n          <CodeMarkdown code={curlCode} language=\"bash\" />\n        </div>\n\n        <div className=\"space-y-4\">\n          <h3 className=\"text-lg font-semibold\">禁用复制功能</h3>\n          <CodeMarkdown code={jsonCode} language=\"json\" disableCopy={true} />\n        </div>\n      </div>\n    </I18nProvider>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/code-markdown-demo.tsx"
    }
  ]
}