{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "copy-button",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react",
    "react"
  ],
  "files": [
    {
      "path": "registry/pivot/copy-button.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { useI18n } from \"@/registry/lib/i18n\";\nimport { Clipboard, ClipboardCheck } from \"lucide-react\";\nimport React, { useEffect, useState } from \"react\";\n\ninterface CopyButtonProps {\n  text: string;\n  className?: string;\n  iconClassName?: string;\n  size?: \"sm\" | \"md\" | \"lg\";\n}\n\nconst CopyButton = React.forwardRef<HTMLButtonElement, CopyButtonProps>(\n  ({ text, className = \"\", iconClassName = \"\", size = \"md\" }, ref) => {\n    const { t } = useI18n();\n    const [copied, setCopied] = useState(false);\n\n    // 自动还原图标\n    useEffect(() => {\n      if (copied) {\n        const timer = setTimeout(() => {\n          setCopied(false);\n        }, 2000);\n        return () => clearTimeout(timer);\n      }\n    }, [copied]);\n\n    const handleCopy = async () => {\n      try {\n        await navigator.clipboard.writeText(text);\n        setCopied(true);\n      } catch (err) {\n        console.error(t('Copy failed:'), err);\n      }\n    };\n\n    // 根据尺寸大小设置不同的样式\n    const sizeClasses = {\n      sm: \"p-1\",\n      md: \"p-2\",\n      lg: \"p-3\",\n    };\n\n    const iconSizes = {\n      sm: 14,\n      md: 16,\n      lg: 20,\n    };\n\n    return (\n      <button\n        ref={ref}\n        onClick={handleCopy}\n        className={cn(\n          \"bg-neutral-100 dark:bg-neutral-700 hover:bg-neutral-200 dark:hover:bg-neutral-600 text-neutral-500 dark:text-neutral-300 rounded transition-colors\",\n          sizeClasses[size],\n          className,\n          copied ? \"text-green-600 dark:text-green-400\" : \"\",\n        )}\n        title={t('Copy to clipboard')}\n      >\n        {copied ? (\n          <ClipboardCheck size={iconSizes[size]} className={iconClassName} />\n        ) : (\n          <Clipboard size={iconSizes[size]} className={iconClassName} />\n        )}\n      </button>\n    );\n  },\n);\n\nCopyButton.displayName = \"CopyButton\";\n\nexport { CopyButton, type CopyButtonProps };\n",
      "type": "registry:ui"
    }
  ]
}