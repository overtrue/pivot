{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "parameters-section-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/parameters-section.json"
  ],
  "files": [
    {
      "path": "registry/example/parameters-section-demo.tsx",
      "content": "import { ParametersSection } from \"@/registry/pivot/parameters-section\";\n\nexport default function ParametersSectionDemo() {\n  // 用户列表 API 的参数示例\n  const userListParameters = [\n    {\n      name: \"page\",\n      in: \"query\" as const,\n      required: false,\n      description: \"页码，从 1 开始\",\n      schema: {\n        type: \"integer\" as const,\n        minimum: 1,\n        default: 1\n      }\n    },\n    {\n      name: \"limit\",\n      in: \"query\" as const,\n      required: false,\n      description: \"每页返回的记录数\",\n      schema: {\n        type: \"integer\" as const,\n        minimum: 1,\n        maximum: 100,\n        default: 20\n      }\n    },\n    {\n      name: \"search\",\n      in: \"query\" as const,\n      required: false,\n      description: \"搜索关键词，支持姓名和邮箱搜索\",\n      schema: {\n        type: \"string\" as const,\n        maxLength: 100\n      }\n    },\n    {\n      name: \"status\",\n      in: \"query\" as const,\n      required: false,\n      description: \"用户状态筛选\",\n      schema: {\n        type: \"array\" as const,\n        items: {\n          type: \"string\" as const,\n          enum: [\"active\", \"inactive\", \"pending\", \"suspended\"]\n        }\n      }\n    },\n    {\n      name: \"role\",\n      in: \"query\" as const,\n      required: false,\n      description: \"用户角色筛选\",\n      schema: {\n        type: \"string\" as const,\n        enum: [\"admin\", \"user\", \"moderator\", \"guest\"]\n      }\n    },\n    {\n      name: \"createdAfter\",\n      in: \"query\" as const,\n      required: false,\n      description: \"创建时间筛选（起始时间）\",\n      schema: {\n        type: \"string\" as const,\n        format: \"date-time\" as const\n      }\n    },\n    {\n      name: \"createdBefore\",\n      in: \"query\" as const,\n      required: false,\n      description: \"创建时间筛选（结束时间）\",\n      schema: {\n        type: \"string\" as const,\n        format: \"date-time\" as const\n      }\n    },\n    {\n      name: \"sortBy\",\n      in: \"query\" as const,\n      required: false,\n      description: \"排序字段\",\n      schema: {\n        type: \"string\" as const,\n        enum: [\"name\", \"email\", \"createdAt\", \"lastLoginAt\"],\n        default: \"createdAt\"\n      }\n    },\n    {\n      name: \"sortOrder\",\n      in: \"query\" as const,\n      required: false,\n      description: \"排序方向\",\n      schema: {\n        type: \"string\" as const,\n        enum: [\"asc\", \"desc\"],\n        default: \"desc\"\n      }\n    },\n    {\n      name: \"include\",\n      in: \"query\" as const,\n      required: false,\n      description: \"包含的关联数据\",\n      schema: {\n        type: \"array\" as const,\n        items: {\n          type: \"string\" as const,\n          enum: [\"profile\", \"permissions\", \"preferences\", \"statistics\"]\n        }\n      }\n    },\n    {\n      name: \"X-API-Key\",\n      in: \"header\" as const,\n      required: true,\n      description: \"API 访问密钥\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^[a-zA-Z0-9]{32}$\"\n      }\n    },\n    {\n      name: \"Authorization\",\n      in: \"header\" as const,\n      required: false,\n      description: \"Bearer 令牌认证\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^Bearer [a-zA-Z0-9\\\\-\\\\._~\\\\+\\\\/]+=*$\"\n      }\n    },\n    {\n      name: \"X-Request-ID\",\n      in: \"header\" as const,\n      required: false,\n      description: \"请求追踪 ID\",\n      schema: {\n        type: \"string\" as const,\n        format: \"uuid\" as const\n      }\n    }\n  ];\n\n  // 用户详情 API 的参数示例\n  const userDetailParameters = [\n    {\n      name: \"userId\",\n      in: \"path\" as const,\n      required: true,\n      description: \"用户的唯一标识符\",\n      schema: {\n        type: \"string\" as const,\n        format: \"uuid\" as const\n      }\n    },\n    {\n      name: \"include\",\n      in: \"query\" as const,\n      required: false,\n      description: \"包含的额外信息\",\n      schema: {\n        type: \"array\" as const,\n        items: {\n          type: \"string\" as const,\n          enum: [\"profile\", \"permissions\", \"preferences\", \"activity\", \"statistics\"]\n        }\n      }\n    },\n    {\n      name: \"fields\",\n      in: \"query\" as const,\n      required: false,\n      description: \"指定返回的字段，用逗号分隔\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^[a-zA-Z0-9,_]+$\"\n      }\n    },\n    {\n      name: \"X-API-Key\",\n      in: \"header\" as const,\n      required: true,\n      description: \"API 访问密钥\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^[a-zA-Z0-9]{32}$\"\n      }\n    },\n    {\n      name: \"If-None-Match\",\n      in: \"header\" as const,\n      required: false,\n      description: \"条件请求头，用于缓存控制\",\n      schema: {\n        type: \"string\" as const\n      }\n    }\n  ];\n\n  // 文件上传 API 的参数示例\n  const fileUploadParameters = [\n    {\n      name: \"folderId\",\n      in: \"path\" as const,\n      required: true,\n      description: \"目标文件夹 ID\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^folder_[a-zA-Z0-9]+$\"\n      }\n    },\n    {\n      name: \"overwrite\",\n      in: \"query\" as const,\n      required: false,\n      description: \"是否覆盖同名文件\",\n      schema: {\n        type: \"boolean\" as const,\n        default: false\n      }\n    },\n    {\n      name: \"generateThumbnail\",\n      in: \"query\" as const,\n      required: false,\n      description: \"是否生成缩略图（仅适用于图片）\",\n      schema: {\n        type: \"boolean\" as const,\n        default: true\n      }\n    },\n    {\n      name: \"maxSize\",\n      in: \"query\" as const,\n      required: false,\n      description: \"最大文件大小（字节）\",\n      schema: {\n        type: \"integer\" as const,\n        minimum: 1,\n        maximum: 104857600,\n        default: 10485760\n      }\n    },\n    {\n      name: \"allowedTypes\",\n      in: \"query\" as const,\n      required: false,\n      description: \"允许的文件类型\",\n      schema: {\n        type: \"array\" as const,\n        items: {\n          type: \"string\" as const,\n          enum: [\"image/jpeg\", \"image/png\", \"image/gif\", \"application/pdf\", \"text/plain\"]\n        }\n      }\n    },\n    {\n      name: \"X-Upload-Token\",\n      in: \"header\" as const,\n      required: true,\n      description: \"上传令牌\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^upload_[a-zA-Z0-9]{40}$\"\n      }\n    },\n    {\n      name: \"Content-Type\",\n      in: \"header\" as const,\n      required: true,\n      description: \"内容类型\",\n      schema: {\n        type: \"string\" as const,\n        enum: [\"multipart/form-data\"]\n      }\n    },\n    {\n      name: \"X-Client-Version\",\n      in: \"header\" as const,\n      required: false,\n      description: \"客户端版本号\",\n      schema: {\n        type: \"string\" as const,\n        pattern: \"^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$\"\n      }\n    }\n  ];\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户列表 API 参数</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          包含分页、搜索、筛选、排序等完整的查询参数\n        </p>\n        <ParametersSection parameters={userListParameters} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户详情 API 参数</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          路径参数和查询参数的组合，包含条件请求头\n        </p>\n        <ParametersSection parameters={userDetailParameters} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">文件上传 API 参数</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          文件上传接口的参数，包含上传配置和验证规则\n        </p>\n        <ParametersSection parameters={fileUploadParameters} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/parameters-section-demo.tsx"
    }
  ]
}