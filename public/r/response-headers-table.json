{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "response-headers-table",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/i18n.json",
    "https://pivotkit.vercel.app/r/resolve-ref.json",
    "https://pivotkit.vercel.app/r/header-item.json",
    "https://pivotkit.vercel.app/r/style-badge.json"
  ],
  "files": [
    {
      "path": "registry/default/ui/response-headers-table.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { useI18n } from \"@/registry/default/lib/i18n\";\nimport { resolveRef } from \"@/registry/default/lib/utils/resolve-ref\";\nimport { HeaderItem } from \"@/registry/default/ui/header-item\";\nimport { type StyleType } from \"@/registry/default/ui/style-badge\";\nimport type { OpenAPIV3 } from \"openapi-types\";\nimport React from \"react\";\n\n// Import types from the centralized types file\n\ninterface ResponseHeadersTableProps {\n  headers: Record<string, OpenAPIV3.HeaderObject | OpenAPIV3.ReferenceObject>;\n  components?: OpenAPIV3.ComponentsObject;\n  className?: string;\n}\n\n/**\n * 响应头部表格组件，负责展示API响应的头部信息\n */\nconst ResponseHeadersTable = React.forwardRef<\n  HTMLDivElement,\n  ResponseHeadersTableProps\n>(({ headers, components, className }, ref) => {\n  const { t } = useI18n();\n\n  if (!headers || Object.keys(headers).length === 0) {\n    return null;\n  }\n\n  return (\n    <div ref={ref} className={cn(\"space-y-3\", className)}>\n      {Object.entries(headers).map(([name, headerOrRef]) => {\n        // Resolve header ref\n        const header = resolveRef<OpenAPIV3.HeaderObject>(\n          headerOrRef,\n          components,\n          \"headers\",\n        );\n\n        if (!header) {\n          const refString =\n            headerOrRef &&\n            typeof headerOrRef === \"object\" &&\n            \"$ref\" in headerOrRef\n              ? (headerOrRef as OpenAPIV3.ReferenceObject).$ref\n              : t(\"[unknown reference]\");\n          console.warn(\n            `[ResponseHeadersTable] Failed to resolve header ref: ${refString} for key ${name}`,\n          );\n          // Optionally render an error state for this header\n          return (\n            <div\n              key={name}\n              className=\"text-xs text-red-500 dark:text-red-400 p-1 border border-dashed dark:border-red-700 rounded\"\n            >\n              {t(\"Failed to resolve reference\")}: {name} ({refString})\n            </div>\n          );\n        }\n\n        return (\n          <HeaderItem\n            key={name}\n            name={name}\n            description={header.description}\n            required={header.required}\n            deprecated={header.deprecated}\n            schema={header.schema}\n            style={header.style as StyleType}\n            explode={header.explode}\n            examples={header.examples}\n            components={components}\n          />\n        );\n      })}\n    </div>\n  );\n});\n\nResponseHeadersTable.displayName = \"ResponseHeadersTable\";\n\nexport { ResponseHeadersTable, type ResponseHeadersTableProps };\n",
      "type": "registry:ui",
      "target": "components/ui/response-headers-table.tsx"
    }
  ]
}