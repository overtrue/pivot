{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "typescript-generator-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/typescript-generator.json"
  ],
  "files": [
    {
      "path": "registry/default/example/typescript-generator-demo.tsx",
      "content": "import { TypeScriptGenerator } from \"@/registry/default/ui/typescript-generator\";\n\nexport default function TypescriptGeneratorDemo() {\n  // 用户创建 API 示例\n  const createUserParams = {\n    endpoint: \"https://api.example.com/v1/users\",\n    method: \"POST\" as const,\n    parameters: [\n      {\n        name: \"X-API-Key\",\n        in: \"header\" as const,\n        required: true,\n        schema: { type: \"string\" as const },\n      },\n    ],\n    requestBodyExample: {\n      email: \"john.doe@example.com\",\n      name: \"John Doe\",\n      age: 28,\n      preferences: {\n        theme: \"dark\",\n        notifications: true,\n      },\n    },\n    requestBody: {\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\" as const,\n            required: [\"email\", \"name\"],\n            properties: {\n              email: { type: \"string\" as const, format: \"email\" as const },\n              name: { type: \"string\" as const },\n              age: { type: \"integer\" as const, minimum: 0 },\n              preferences: {\n                type: \"object\" as const,\n                properties: {\n                  theme: { type: \"string\" as const, enum: [\"light\", \"dark\"] },\n                  notifications: { type: \"boolean\" as const },\n                },\n              },\n            },\n          },\n        },\n      },\n      required: true,\n    },\n  };\n\n  // 用户列表查询 API 示例\n  const getUsersParams = {\n    endpoint: \"https://api.example.com/v1/users\",\n    method: \"GET\" as const,\n    parameters: [\n      {\n        name: \"page\",\n        in: \"query\" as const,\n        required: false,\n        schema: { type: \"integer\" as const, minimum: 1, default: 1 },\n      },\n      {\n        name: \"limit\",\n        in: \"query\" as const,\n        required: false,\n        schema: {\n          type: \"integer\" as const,\n          minimum: 1,\n          maximum: 100,\n          default: 20,\n        },\n      },\n      {\n        name: \"search\",\n        in: \"query\" as const,\n        required: false,\n        schema: { type: \"string\" as const },\n      },\n      {\n        name: \"status\",\n        in: \"query\" as const,\n        required: false,\n        schema: {\n          type: \"array\" as const,\n          items: {\n            type: \"string\" as const,\n            enum: [\"active\", \"inactive\", \"pending\"],\n          },\n        },\n      },\n      {\n        name: \"Authorization\",\n        in: \"header\" as const,\n        required: true,\n        schema: { type: \"string\" as const },\n      },\n    ],\n    requestBodyExample: null,\n    requestBody: undefined,\n  };\n\n  // 文件上传 API 示例\n  const uploadFileParams = {\n    endpoint: \"https://api.example.com/v1/files\",\n    method: \"POST\" as const,\n    parameters: [\n      {\n        name: \"folderId\",\n        in: \"query\" as const,\n        required: false,\n        schema: { type: \"string\" as const },\n      },\n      {\n        name: \"X-Upload-Token\",\n        in: \"header\" as const,\n        required: true,\n        schema: { type: \"string\" as const },\n      },\n    ],\n    requestBodyExample: {\n      file: \"binary_data_here\",\n      title: \"Important Document\",\n      description: \"This is an important business document\",\n      tags: [\"business\", \"important\"],\n      isPublic: false,\n    },\n    requestBody: {\n      content: {\n        \"multipart/form-data\": {\n          schema: {\n            type: \"object\" as const,\n            required: [\"file\"],\n            properties: {\n              file: { type: \"string\" as const, format: \"binary\" },\n              title: { type: \"string\" as const },\n              description: { type: \"string\" as const },\n              tags: {\n                type: \"array\" as const,\n                items: { type: \"string\" as const },\n              },\n              isPublic: { type: \"boolean\" as const, default: false },\n            },\n          },\n        },\n      },\n      required: true,\n    },\n  };\n\n  // 用户更新 API 示例\n  const updateUserParams = {\n    endpoint: \"https://api.example.com/v1/users/{userId}\",\n    method: \"PATCH\" as const,\n    parameters: [\n      {\n        name: \"userId\",\n        in: \"path\" as const,\n        required: true,\n        schema: { type: \"string\" as const, format: \"uuid\" as const },\n      },\n      {\n        name: \"Authorization\",\n        in: \"header\" as const,\n        required: true,\n        schema: { type: \"string\" as const },\n      },\n    ],\n    requestBodyExample: {\n      name: \"John Smith\",\n      age: 29,\n      status: \"active\",\n    },\n    requestBody: {\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\" as const,\n            properties: {\n              name: { type: \"string\" as const },\n              age: { type: \"integer\" as const, minimum: 0 },\n              status: {\n                type: \"string\" as const,\n                enum: [\"active\", \"inactive\", \"pending\"],\n              },\n            },\n          },\n        },\n      },\n      required: true,\n    },\n  };\n\n  // 批量删除 API 示例\n  const batchDeleteParams = {\n    endpoint: \"https://api.example.com/v1/users/batch\",\n    method: \"DELETE\" as const,\n    parameters: [\n      {\n        name: \"Authorization\",\n        in: \"header\" as const,\n        required: true,\n        schema: { type: \"string\" as const },\n      },\n    ],\n    requestBodyExample: {\n      userIds: [\n        \"123e4567-e89b-12d3-a456-426614174000\",\n        \"987fcdeb-51d2-43a8-b456-426614174001\",\n      ],\n      reason: \"Account cleanup\",\n    },\n    requestBody: {\n      content: {\n        \"application/json\": {\n          schema: {\n            type: \"object\" as const,\n            required: [\"userIds\"],\n            properties: {\n              userIds: {\n                type: \"array\" as const,\n                items: { type: \"string\" as const, format: \"uuid\" as const },\n                minItems: 1,\n                maxItems: 100,\n              },\n              reason: { type: \"string\" as const },\n            },\n          },\n        },\n      },\n      required: true,\n    },\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">POST 请求 - 创建用户</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          包含请求头、复杂请求体和嵌套对象的 TypeScript 代码生成\n        </p>\n        <TypeScriptGenerator params={createUserParams} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">GET 请求 - 查询用户列表</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          包含多个查询参数和认证头的 TypeScript 代码生成\n        </p>\n        <TypeScriptGenerator params={getUsersParams} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">POST 请求 - 文件上传</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          multipart/form-data 格式的文件上传 TypeScript 代码\n        </p>\n        <TypeScriptGenerator params={uploadFileParams} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">PATCH 请求 - 更新用户</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          包含路径参数的部分更新 TypeScript 代码生成\n        </p>\n        <TypeScriptGenerator params={updateUserParams} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">DELETE 请求 - 批量删除</h4>\n        <p className=\"text-xs text-neutral-600 dark:text-neutral-400 mb-3\">\n          批量操作的 TypeScript 代码生成示例\n        </p>\n        <TypeScriptGenerator params={batchDeleteParams} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/typescript-generator-demo.tsx"
    }
  ]
}