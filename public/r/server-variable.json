{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "server-variable",
  "type": "registry:ui",
  "dependencies": [
    "openapi-types",
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/description-display"
  ],
  "files": [
    {
      "path": "registry/pivot/server-variable.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport type { OpenAPIV3 } from 'openapi-types';\nimport React from \"react\";\nimport { DescriptionDisplay } from \"@/registry/pivot/description-display\";\n\ninterface ServerVariableProps {\n  name: string;\n  variable?: OpenAPIV3.ServerVariableObject;\n  className?: string;\n}\n\nconst ServerVariable = React.forwardRef<HTMLDivElement, ServerVariableProps>(\n  ({ name, variable, className }, ref) => {\n    if (!variable) {\n      return (\n        <div\n          ref={ref}\n          className={cn(\n            \"rounded p-3 bg-neutral-50 dark:bg-neutral-800/70\",\n            className,\n          )}\n        >\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"font-mono text-sm font-medium dark:text-neutral-200\">\n              {name}\n            </span>\n            <span className=\"px-2 py-0.5 text-xs bg-neutral-100 dark:bg-neutral-700 text-neutral-600 dark:text-neutral-400 rounded\">\n              No data\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    const { description, default: defaultValue, enum: enumValues } = variable;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"rounded p-3 bg-neutral-50 dark:bg-neutral-800/70\",\n          className,\n        )}\n      >\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"font-mono text-sm font-medium dark:text-neutral-200\">\n            {name}\n          </span>\n          <span className=\"px-2 py-0.5 text-xs bg-blue-100 dark:bg-blue-900/50 text-blue-800 dark:text-blue-300 rounded\">\n            Default: {defaultValue}\n          </span>\n        </div>\n\n        {description && <DescriptionDisplay description={description} />}\n\n        {enumValues && enumValues.length > 0 && (\n          <div>\n            <h5 className=\"text-xs font-medium mb-1 dark:text-neutral-300\">\n              Available values:\n            </h5>\n            <div className=\"flex flex-wrap gap-1\">\n              {enumValues.map((value) => (\n                <span\n                  key={value}\n                  className=\"text-xs bg-neutral-100 dark:bg-neutral-700 dark:text-neutral-300 px-2 py-0.5 rounded\"\n                >\n                  {value}\n                </span>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nServerVariable.displayName = \"ServerVariable\";\n\nexport { ServerVariable, type ServerVariableProps };\n",
      "type": "registry:ui",
      "target": "components/pivot/server-variable.tsx"
    }
  ]
}