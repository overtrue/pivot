{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "request-body-section-demo",
  "type": "registry:example",
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/request-body-section.json"
  ],
  "files": [
    {
      "path": "registry/default/example/request-body-section-demo.tsx",
      "content": "import { RequestBodySection } from \"@/registry/default/ui/request-body-section\";\n\nexport default function RequestBodySectionDemo() {\n  // 用户创建请求体示例\n  const createUserRequestBody = {\n    required: true,\n    description: \"创建新用户的请求数据\",\n    content: {\n      \"application/json\": {\n        schema: {\n          type: \"object\" as const,\n          required: [\"email\", \"name\", \"password\"],\n          properties: {\n            email: {\n              type: \"string\" as const,\n              format: \"email\" as const,\n              description: \"用户邮箱地址\",\n            },\n            name: {\n              type: \"string\" as const,\n              minLength: 2,\n              maxLength: 50,\n              description: \"用户姓名\",\n            },\n            password: {\n              type: \"string\" as const,\n              minLength: 8,\n              maxLength: 128,\n              description: \"用户密码\",\n            },\n            age: {\n              type: \"integer\" as const,\n              minimum: 13,\n              maximum: 120,\n              description: \"用户年龄\",\n            },\n            phone: {\n              type: \"string\" as const,\n              pattern: \"^\\\\+?[1-9]\\\\d{1,14}$\",\n              description: \"手机号码\",\n            },\n            address: {\n              type: \"object\" as const,\n              description: \"用户地址\",\n              properties: {\n                street: { type: \"string\" as const, description: \"街道地址\" },\n                city: { type: \"string\" as const, description: \"城市\" },\n                state: { type: \"string\" as const, description: \"州/省\" },\n                zipCode: { type: \"string\" as const, description: \"邮政编码\" },\n                country: { type: \"string\" as const, description: \"国家\" },\n              },\n            },\n            preferences: {\n              type: \"object\" as const,\n              description: \"用户偏好设置\",\n              properties: {\n                newsletter: {\n                  type: \"boolean\" as const,\n                  description: \"是否订阅邮件\",\n                },\n                notifications: {\n                  type: \"boolean\" as const,\n                  description: \"是否接收通知\",\n                },\n                theme: {\n                  type: \"string\" as const,\n                  enum: [\"light\", \"dark\", \"auto\"],\n                  description: \"主题偏好\",\n                },\n              },\n            },\n          },\n        },\n        example: {\n          email: \"john.doe@example.com\",\n          name: \"John Doe\",\n          password: \"SecurePass123\",\n          age: 28,\n          phone: \"+1-555-123-4567\",\n          address: {\n            street: \"123 Main St\",\n            city: \"Anytown\",\n            state: \"CA\",\n            zipCode: \"12345\",\n            country: \"US\",\n          },\n          preferences: {\n            theme: \"dark\",\n            newsletter: true,\n            notifications: true,\n          },\n        },\n      },\n    },\n  };\n\n  // 文件上传请求体示例\n  const fileUploadRequestBody = {\n    required: true,\n    description: \"文件上传请求，支持多种格式\",\n    content: {\n      \"multipart/form-data\": {\n        schema: {\n          type: \"object\" as const,\n          required: [\"file\"],\n          properties: {\n            file: {\n              type: \"string\" as const,\n              format: \"binary\",\n              description: \"要上传的文件\",\n            },\n            title: {\n              type: \"string\" as const,\n              maxLength: 200,\n              description: \"文件标题\",\n            },\n            description: {\n              type: \"string\" as const,\n              maxLength: 1000,\n              description: \"文件描述\",\n            },\n            tags: {\n              type: \"array\" as const,\n              items: { type: \"string\" as const },\n              maxItems: 10,\n              description: \"文件标签\",\n            },\n            isPublic: {\n              type: \"boolean\" as const,\n              default: false,\n              description: \"是否公开\",\n            },\n            category: {\n              type: \"string\" as const,\n              enum: [\"document\", \"image\", \"video\", \"audio\", \"other\"],\n              description: \"文件分类\",\n            },\n          },\n        },\n      },\n      \"application/json\": {\n        schema: {\n          type: \"object\" as const,\n          required: [\"url\"],\n          properties: {\n            url: {\n              type: \"string\" as const,\n              format: \"uri\" as const,\n              description: \"远程文件 URL\",\n            },\n            title: {\n              type: \"string\" as const,\n              maxLength: 200,\n              description: \"文件标题\",\n            },\n            description: {\n              type: \"string\" as const,\n              maxLength: 1000,\n              description: \"文件描述\",\n            },\n          },\n        },\n        example: {\n          url: \"https://example.com/files/document.pdf\",\n          title: \"重要文档\",\n          description: \"这是一个重要的业务文档\",\n        },\n      },\n    },\n  };\n\n  // 产品更新请求体示例（可选字段）\n  const updateProductRequestBody = {\n    required: false,\n    description: \"更新产品信息，所有字段都是可选的\",\n    content: {\n      \"application/json\": {\n        schema: {\n          type: \"object\" as const,\n          properties: {\n            name: {\n              type: \"string\" as const,\n              minLength: 1,\n              maxLength: 200,\n              description: \"产品名称\",\n            },\n            description: {\n              type: \"string\" as const,\n              maxLength: 2000,\n              description: \"产品描述\",\n            },\n            price: {\n              type: \"number\" as const,\n              multipleOf: 0.01,\n              minimum: 0,\n              description: \"产品价格\",\n            },\n            currency: {\n              type: \"string\" as const,\n              enum: [\"USD\", \"EUR\", \"CNY\", \"JPY\"],\n              description: \"价格货币\",\n            },\n            category: {\n              type: \"string\" as const,\n              description: \"产品分类\",\n            },\n            tags: {\n              type: \"array\" as const,\n              items: { type: \"string\" as const },\n              maxItems: 20,\n              description: \"产品标签\",\n            },\n            specifications: {\n              type: \"object\" as const,\n              additionalProperties: { type: \"string\" as const },\n              description: \"产品规格\",\n            },\n            inventory: {\n              type: \"object\" as const,\n              description: \"库存信息\",\n              properties: {\n                quantity: {\n                  type: \"integer\" as const,\n                  minimum: 0,\n                  description: \"库存数量\",\n                },\n                lowStockThreshold: {\n                  type: \"integer\" as const,\n                  minimum: 0,\n                  description: \"低库存阈值\",\n                },\n                trackInventory: {\n                  type: \"boolean\" as const,\n                  description: \"是否跟踪库存\",\n                },\n              },\n            },\n            status: {\n              type: \"string\" as const,\n              enum: [\"draft\", \"active\", \"inactive\", \"discontinued\"],\n              description: \"产品状态\",\n            },\n          },\n        },\n        example: {\n          name: \"iPhone 15 Pro Max\",\n          description: \"最新款 iPhone，配备 A17 Pro 芯片和钛金属设计\",\n          price: 1199.99,\n          currency: \"USD\",\n          category: \"Electronics\",\n          tags: [\"smartphone\", \"apple\", \"5g\", \"premium\"],\n          specifications: {\n            screen_size: \"6.7 inches\",\n            storage: \"256GB\",\n            color: \"Natural Titanium\",\n            camera: \"48MP Main + 12MP Ultra Wide + 12MP Telephoto\",\n          },\n          inventory: {\n            quantity: 100,\n            lowStockThreshold: 10,\n            trackInventory: true,\n          },\n          status: \"active\",\n        },\n      },\n    },\n  };\n\n  // 批量操作请求体示例\n  const batchOperationRequestBody = {\n    required: true,\n    description: \"批量操作请求数据\",\n    content: {\n      \"application/json\": {\n        schema: {\n          type: \"object\" as const,\n          required: [\"operation\", \"items\"],\n          properties: {\n            operation: {\n              type: \"string\" as const,\n              enum: [\"create\", \"update\", \"delete\", \"archive\"],\n              description: \"操作类型\",\n            },\n            items: {\n              type: \"array\" as const,\n              minItems: 1,\n              maxItems: 100,\n              description: \"操作项目列表\",\n              items: {\n                type: \"object\" as const,\n                required: [\"id\"],\n                properties: {\n                  id: { type: \"string\" as const, description: \"项目 ID\" },\n                  data: {\n                    type: \"object\" as const,\n                    description: \"项目数据（仅用于创建和更新操作）\",\n                  },\n                },\n              },\n            },\n            options: {\n              type: \"object\" as const,\n              description: \"操作选项\",\n              properties: {\n                skipValidation: {\n                  type: \"boolean\" as const,\n                  default: false,\n                  description: \"跳过验证\",\n                },\n                continueOnError: {\n                  type: \"boolean\" as const,\n                  default: false,\n                  description: \"遇到错误时继续执行\",\n                },\n                dryRun: {\n                  type: \"boolean\" as const,\n                  default: false,\n                  description: \"仅验证不执行\",\n                },\n              },\n            },\n          },\n        },\n        example: {\n          operation: \"update\",\n          items: [\n            {\n              id: \"item_001\",\n              data: { status: \"active\", priority: \"high\" },\n            },\n            {\n              id: \"item_002\",\n              data: { status: \"inactive\", priority: \"low\" },\n            },\n          ],\n          options: {\n            skipValidation: false,\n            continueOnError: true,\n            dryRun: false,\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"space-y-8 min-w-md\">\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">用户创建请求体</h4>\n        <p className=\"text-xs text-muted-foreground mb-3\">\n          包含完整用户信息的 JSON 请求体，包含验证规则和嵌套对象\n        </p>\n        <RequestBodySection requestBody={createUserRequestBody as any} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">文件上传请求体</h4>\n        <p className=\"text-xs text-muted-foreground mb-3\">\n          支持多种内容类型的文件上传，包含 multipart/form-data 和 JSON 格式\n        </p>\n        <RequestBodySection requestBody={fileUploadRequestBody as any} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">产品更新请求体</h4>\n        <p className=\"text-xs text-muted-foreground mb-3\">\n          可选的 PATCH 请求体，支持部分字段更新和复杂的嵌套结构\n        </p>\n        <RequestBodySection requestBody={updateProductRequestBody as any} />\n      </div>\n\n      <div>\n        <h4 className=\"text-sm font-medium mb-3\">批量操作请求体</h4>\n        <p className=\"text-xs text-muted-foreground mb-3\">\n          批量处理多个项目的请求体，包含操作类型和选项配置\n        </p>\n        <RequestBodySection requestBody={batchOperationRequestBody as any} />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/request-body-section-demo.tsx"
    }
  ]
}