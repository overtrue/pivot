{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "parameter-group",
  "type": "registry:ui",
  "dependencies": [
    "react"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/required-marker",
    "https://pivotkit.vercel.app/r/type-indicator",
    "https://pivotkit.vercel.app/r/expand-collapse"
  ],
  "files": [
    {
      "path": "registry/pivot/parameter-group.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport React from \"react\";\nimport { RequiredMarker } from \"@/registry/pivot/required-marker\";\nimport { TypeIndicator, type DataType } from \"@/registry/pivot/type-indicator\";\nimport { ExpandCollapse } from \"@/registry/pivot/expand-collapse\";\n\ninterface Parameter {\n  name: string;\n  required: boolean;\n  type: DataType;\n}\n\ninterface ParameterGroupProps {\n  inType: \"query\" | \"path\" | \"header\" | \"cookie\";\n  parameters: Parameter[];\n  className?: string;\n}\n\nconst ParameterGroup = React.forwardRef<HTMLDivElement, ParameterGroupProps>(\n  ({ inType, parameters, className }, ref) => {\n    const [isExpanded, setIsExpanded] = React.useState(true);\n\n    return (\n      <div ref={ref} className={cn(\"space-y-4\", className)}>\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold capitalize\">\n            {inType} Parameters\n          </h3>\n          <ExpandCollapse\n            isExpanded={isExpanded}\n            onToggle={() => setIsExpanded(!isExpanded)}\n            expandedLabel=\"收起\"\n            collapsedLabel=\"展开\"\n          />\n        </div>\n        {isExpanded && (\n          <div className=\"space-y-2\">\n            {parameters.length > 0 ? (\n              parameters.map((param) => (\n                <div key={param.name} className=\"flex items-center space-x-2\">\n                  <span className=\"font-mono text-sm\">{param.name}</span>\n                  {param.required && <RequiredMarker />}\n                  <TypeIndicator type={param.type} />\n                </div>\n              ))\n            ) : (\n              <div className=\"text-neutral-500\">No parameters</div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nParameterGroup.displayName = \"ParameterGroup\";\n\nexport { ParameterGroup, type Parameter, type ParameterGroupProps };\n",
      "type": "registry:ui",
      "target": "registry/pivot/parameter-group.tsx"
    }
  ]
}