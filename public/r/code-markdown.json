{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "code-markdown",
  "type": "registry:ui",
  "dependencies": [
    "next-themes",
    "react",
    "react-syntax-highlighter"
  ],
  "registryDependencies": [
    "https://pivotkit.vercel.app/r/copy-button"
  ],
  "files": [
    {
      "path": "registry/pivot/code-markdown.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { useTheme } from \"next-themes\";\nimport React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneDark, atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { CopyButton } from \"@/registry/pivot/copy-button\";\n\ninterface CodeMarkdownProps {\n  code: string;\n  language: string;\n  className?: string;\n  disableCopy?: boolean;\n}\n\n/**\n * 代码Markdown组件，用于展示带语法高亮的代码块\n * 支持复制功能和主题切换\n */\nconst CodeMarkdown = React.forwardRef<HTMLDivElement, CodeMarkdownProps>(\n  ({ code, language, className = \"\", disableCopy = false }, ref) => {\n    const { theme, systemTheme } = useTheme();\n\n    // 确定当前主题\n    const currentTheme = theme === \"system\" ? systemTheme : theme;\n    const isDark = currentTheme === \"dark\";\n\n    const codeStyle = isDark ? atomOneDark : atomOneLight;\n\n    return (\n      <div ref={ref} className={cn(\"relative\", className)}>\n        {!disableCopy && (\n          <div className=\"absolute top-3 right-3 z-10\">\n            <CopyButton text={code} size=\"sm\" />\n          </div>\n        )}\n        <div className=\"overflow-hidden dark:bg-neutral-800\">\n          <SyntaxHighlighter\n            language={language}\n            style={codeStyle}\n            customStyle={{\n              margin: 0,\n              padding: \"1rem\",\n              fontSize: \"0.75rem\",\n              lineHeight: 1.2,\n              border: \"none\",\n              borderRadius: \"0.5rem\",\n              backgroundColor: isDark ? \"transparent\" : undefined,\n            }}\n          >\n            {code}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    );\n  }\n);\n\nCodeMarkdown.displayName = \"CodeMarkdown\";\n\nexport { CodeMarkdown, type CodeMarkdownProps };\n",
      "type": "registry:ui",
      "target": "components/pivot/code-markdown.tsx"
    }
  ]
}