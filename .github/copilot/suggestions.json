{
  "rules": [
    {
      "name": "组件命名规范",
      "description": "所有React组件文件应以大写字母开头，并使用PascalCase命名格式。",
      "pattern": "^[A-Z][a-zA-Z0-9]+\\.tsx$",
      "applies_to": [
        "**/*.tsx"
      ],
      "negative_pattern": "^[a-z].*\\.tsx$",
      "severity": "suggestion"
    },
    {
      "name": "函数组件类型定义",
      "description": "所有React组件都应使用React.FC类型，并明确定义Props接口。",
      "pattern": "interface [A-Z][a-zA-Z0-9]*Props[\\s\\S]*?\\nconst [A-Z][a-zA-Z0-9]*: React\\.FC<[A-Z][a-zA-Z0-9]*Props>",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "组件注释规范",
      "description": "所有组件应包含清晰的JSDoc注释，说明组件的用途和功能。",
      "pattern": "/\\*\\*[\\s\\S]*?\\*/\\s*const [A-Z][a-zA-Z0-9]*:",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "OpenAPI类型引用路径",
      "description": "从@/types/openapi导入OpenAPI相关类型，保持引用路径一致。",
      "pattern": "import [\\s\\S]*? from '@/types/openapi';",
      "applies_to": [
        "**/*.tsx",
        "**/*.ts"
      ],
      "severity": "suggestion"
    },
    {
      "name": "使用解析引用工具",
      "description": "处理OpenAPI引用对象时，使用resolveRef工具函数进行解析。",
      "pattern": "resolveRef<[a-zA-Z0-9]+>\\([a-zA-Z0-9]+, components, '[a-zA-Z]+'\\)",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "组件CSS类命名",
      "description": "使用cn()工具函数合并TailwindCSS类名，提高可读性和可维护性。",
      "pattern": "className={cn\\(",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "组件分组结构",
      "description": "保持组件代码结构清晰，将接口定义、常量、辅助函数和主组件按顺序组织。",
      "pattern": "interface [\\s\\S]*?\\nconst [A-Z][a-zA-Z0-9]*: React\\.FC",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "使用可选链和空值检查",
      "description": "访问OpenAPI规范对象属性时，使用可选链和空值检查确保安全访问。",
      "pattern": "\\?\\.",
      "applies_to": [
        "**/*.tsx",
        "**/*.ts"
      ],
      "severity": "suggestion"
    },
    {
      "name": "组件设计模式",
      "description": "按照组件职责设计组件，将复杂组件拆分为小型、可复用的组件，遵循单一职责原则。",
      "pattern": "import [A-Z][a-zA-Z0-9]+ from '\\.\\./[a-zA-Z0-9/]+';",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "国际化文本处理",
      "description": "用户界面文本应使用t()函数获取多语言文本，使用英文原文作为key。",
      "pattern": "t\\(['\"][\\w\\s]+['\"]\\)",
      "applies_to": [
        "**/*.tsx",
        "**/*.ts"
      ],
      "severity": "suggestion"
    },
    {
      "name": "代码生成器结构",
      "description": "代码生成器应实现CodeGenerator接口，并在codeGenerators集合中注册。",
      "pattern": "export class [A-Za-z]+ implements CodeGenerator",
      "applies_to": [
        "**/codeGenerators/**/*.ts",
        "**/codeGenerators/**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "错误处理模式",
      "description": "对引用解析和数据获取操作进行适当的错误处理，显示友好的错误信息。",
      "pattern": "if \\(!.*\\) return <div className=\"text-(red|yellow)-500",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "暗模式支持",
      "description": "所有组件应支持暗模式，通过TailwindCSS的dark:前缀类提供良好的暗模式体验。",
      "pattern": "dark:[a-z\\-]+",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "响应式设计",
      "description": "组件应支持响应式设计，使用TailwindCSS的响应式前缀确保在不同屏幕尺寸下的良好显示。",
      "pattern": "(sm:|md:|lg:|xl:)[a-z\\-]+",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "useState初始值类型",
      "description": "使用useState时指定泛型类型，确保状态类型安全。",
      "pattern": "useState<[a-zA-Z<>|]+>\\(",
      "applies_to": [
        "**/*.tsx",
        "**/*.ts"
      ],
      "severity": "suggestion"
    },
    {
      "name": "导出组件",
      "description": "确保每个组件文件末尾导出组件，使其可供其他文件导入使用。",
      "pattern": "export default [A-Z][a-zA-Z0-9]+;",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "工具函数注释",
      "description": "工具函数应有清晰的JSDoc注释，包括函数描述、参数和返回值说明。",
      "pattern": "/\\*\\*[\\s\\S]*?\\*/\\s*export function",
      "applies_to": [
        "**/utils/**/*.ts"
      ],
      "severity": "suggestion"
    },
    {
      "name": "类型定义注释",
      "description": "类型定义应有注释说明用途，特别是公共API中使用的类型。",
      "pattern": "// [A-Za-z]+ 定义\\s*export (type|interface)",
      "applies_to": [
        "**/types/**/*.ts"
      ],
      "severity": "suggestion"
    },
    {
      "name": "组件默认值",
      "description": "为组件Props中的可选参数提供合理的默认值，提高组件的易用性。",
      "pattern": "= {[\\s\\S]*?className = '',",
      "applies_to": [
        "**/*.tsx"
      ],
      "severity": "suggestion"
    },
    {
      "name": "扁平化语言包结构",
      "description": "语言包应使用扁平结构，不应使用嵌套对象，直接使用英文原文作为key。",
      "pattern": "\"[\\w\\s]+\": \"[\\w\\s]+\"",
      "applies_to": [
        "**/locales/*.ts"
      ],
      "negative_pattern": "\\.\\w+\\.",
      "severity": "suggestion"
    }
  ]
}
